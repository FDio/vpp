{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "576ada1c_53a00aad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1510
      },
      "writtenOn": "2023-12-07T15:49:26Z",
      "side": 1,
      "message": "Damjan - This issue was identified in 21.01, so this should be considered for backporting to current LTS releases.",
      "revId": "d86fed350c5f53898ceadb1977b4633f165407ff",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37ca90aa_48b860f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 10
      },
      "writtenOn": "2023-12-08T19:38:52Z",
      "side": 1,
      "message": "FD.io VPP does not maintain any LTS releases.  The VPP support model is the 2 most recent releases.\n\nPrompt upgrade to the latest VPP release is highly recommended.",
      "parentUuid": "576ada1c_53a00aad",
      "revId": "d86fed350c5f53898ceadb1977b4633f165407ff",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fa846d1_f29c70b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1510
      },
      "writtenOn": "2023-12-13T19:58:24Z",
      "side": 1,
      "message": "Dave - My comment was informational. If the community is not going to backport, that is their choice. That said, this issue is still present in current release, thus the reason for this patch submission.",
      "parentUuid": "37ca90aa_48b860f6",
      "revId": "d86fed350c5f53898ceadb1977b4633f165407ff",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93173a1a_075687a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1510
      },
      "writtenOn": "2023-12-13T19:58:24Z",
      "side": 1,
      "message": "Code has a +1. How do we get this merged?",
      "revId": "d86fed350c5f53898ceadb1977b4633f165407ff",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c8b5a56_f27d8355",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9
      },
      "writtenOn": "2023-12-14T14:22:41Z",
      "side": 1,
      "message": "I am completely unfamiliar wit libmemif, so I\u0027m not able to provide any feedback...",
      "revId": "d86fed350c5f53898ceadb1977b4633f165407ff",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "112d539c_581dc361",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1510
      },
      "writtenOn": "2023-12-14T15:20:15Z",
      "side": 1,
      "message": "Adding a couple folks from libmemif commit history to help finalize review",
      "revId": "d86fed350c5f53898ceadb1977b4633f165407ff",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e52534a5_09afeefd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 10
      },
      "writtenOn": "2023-12-15T21:15:01Z",
      "side": 1,
      "message": "Mike,\n\nUnfortunately the original authors of libmemif have left the project and there is currently no one actively maintaining the code.  \n\nAlso, there is currently missing CI support to verify patches to libmemif (although there are a couple gerrit changes proposing tests [0]).\n\nQuestions:\n1) How have your changes been verified?\n\n2) Are you willing to become a libmemif maintainer?  If so, please submit a separate gerrit change adding your email address to the MAINTAINERS file [1].\n\nIt would be best to have CI verification in place first, but if the need is urgent I will merge them if you will add Verify +1 them along with a note describing how they were tested and agree to fix any related breakage to libmemif should someone report an anomaly.\n\n[0] https://gerrit.fd.io/r/c/vpp/+/37953?usp\u003dsearch (note: author is no longer active)\n    https://gerrit.fd.io/r/c/vpp/+/39319\n\n[1] https://github.com/FDio/vpp/blob/master/MAINTAINERS#L683",
      "parentUuid": "112d539c_581dc361",
      "revId": "d86fed350c5f53898ceadb1977b4633f165407ff",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25b47d1e_3c027d9e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1510
      },
      "writtenOn": "2024-01-08T18:38:17Z",
      "side": 1,
      "message": "Dave,\nThis issue was found/fixed/verified using GDB. The original u16 declaration of slot in this function caused a rollover such that if there were enough queues of a large enough size, the slot calculation would result in a value greater than 0xFFFF, causing later queues to use the same space as earlier queues as allocated in this init function.\n\nThe original symptom was corrupted frames, or frames sent on the wrong queues, queues where chasing each other in the ring buffer space. It was quite difficult to find as you had to have a proper alignment of events across multiple threads.\n\n-Mike",
      "parentUuid": "e52534a5_09afeefd",
      "revId": "d86fed350c5f53898ceadb1977b4633f165407ff",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}