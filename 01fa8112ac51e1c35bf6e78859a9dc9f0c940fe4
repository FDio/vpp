{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d057e6ce_bdf99b6f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 2947
      },
      "writtenOn": "2023-07-11T11:36:43Z",
      "side": 1,
      "message": "Hey all, could you please take a look at this change (again)?\nI solved the remarks in the best way I could think of.\nLooking forward to more feedback.",
      "revId": "01fa8112ac51e1c35bf6e78859a9dc9f0c940fe4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec1f3927_55c064bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 366
      },
      "writtenOn": "2023-07-11T17:09:17Z",
      "side": 1,
      "message": "Thanks for your contribution.\n\nA note... I was not trying to indicate that the mpls xc node should not be enabled during pair creation with my comment about enabling/disabling MPLS on an interface. I was trying to advocate for the opposite - that as much automatic setup as possible could be done when a pair is created so nothing needs to be touched later. In any case, I\u0027ll merge it as is and maybe additional automation can be added at some point in the future.",
      "revId": "01fa8112ac51e1c35bf6e78859a9dc9f0c940fe4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label.                         A minumum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "01fa8112ac51e1c35bf6e78859a9dc9f0c940fe4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "01fa8112ac51e1c35bf6e78859a9dc9f0c940fe4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}