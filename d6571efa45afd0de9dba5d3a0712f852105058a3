{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4d6f93de_28f592e2",
        "filename": "build/external/packages/dpdk.mk",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 2415
      },
      "writtenOn": "2022-12-20T03:30:04Z",
      "side": 1,
      "message": "Hi xinyao,\nCould u please explain why this option is needed for dpdk 22.10? Which header file is requiring this option true? \n\nThanks,\nMarvin",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 167,
        "endChar": 27
      },
      "revId": "d6571efa45afd0de9dba5d3a0712f852105058a3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "510bec49_1b80f7f5",
        "filename": "build/external/packages/dpdk.mk",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 2899
      },
      "writtenOn": "2022-12-20T10:30:02Z",
      "side": 1,
      "message": "Hi Yong,\nIn DPDK 22.11, registering bus and drivers has been marked as internal APIs, the related APIs and date structures are collected to new header files, these header files will not be installed by default(enable_driver_sdk\u003dfalse), causing VPP to fail to register buses and devices normally.\n\nBy enabling enable_driver_sdk option, DPDK will install the new header files.\n\nThanks,\nXinyao",
      "parentUuid": "4d6f93de_28f592e2",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 167,
        "endChar": 27
      },
      "revId": "d6571efa45afd0de9dba5d3a0712f852105058a3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3414b346_7461d16a",
        "filename": "build/external/packages/dpdk.mk",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1849
      },
      "writtenOn": "2023-01-06T09:43:34Z",
      "side": 1,
      "message": "This should be widely discussed within Fd.io ML.\nBy enabling this flag vpp has more freedom but probe into dpdk internal but this also means more vulnerable to API/structure changes which is no longer captured by ABI/API breakage.",
      "parentUuid": "510bec49_1b80f7f5",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 167,
        "endChar": 27
      },
      "revId": "d6571efa45afd0de9dba5d3a0712f852105058a3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "122f59f2_22d1d7cc",
        "filename": "build/external/packages/dpdk.mk",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 2899
      },
      "writtenOn": "2023-01-09T09:32:43Z",
      "side": 1,
      "message": "When VPP DPDK plugin initializing, PCI address is needed as key to retrieve device configs (you can see this in dpdk_find_startup_config function in src/plugins/dpdk/device/init.c), but now DPDK makes rte_pci_device as internal and it seems that there is no method to access PCI address.\n\nIn my opinion, there are 2 options: 1.enable enable_driver_sdk option, and use the definition of rte_pci_device directly. 2. discard using PCI address as key of the hashmap, this will lead to some changes in the VPP code.\n\nDo you have any good ideas?",
      "parentUuid": "3414b346_7461d16a",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 167,
        "endChar": 27
      },
      "revId": "d6571efa45afd0de9dba5d3a0712f852105058a3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d38910e9_ca2db165",
        "filename": "src/plugins/dpdk/cryptodev/cryptodev.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1849
      },
      "writtenOn": "2022-12-20T10:01:27Z",
      "side": 1,
      "message": "I am not against the change here, just a reminder here.\n\nAs of Cryptodev, Akhil and I did a lot of effort to hide crypto session structure from external application in DPDK 21.11.\n\nMy question to everyone is if we want to use DPDK internal APIs in VPP.\n\nIf the answer is yes there are much work we can do for VPP cryptodev.\n\n1. One major change in DPDK 21.11 cryptodev is: one cryptodev session now only supports one driver type, compare to 1 crypto session may be used by multiple device types prior. This makes the session size massively reduced and more performant (session and session private data in a single contiguous buffer, rather than 2 buffers linked by pointer).\n\nSo if we have a system containing heterogeneous crypto devices, we may have to either let only the devices with same driver ID to be initialized, or we have to replicate prior cryptodev session structure (create a master session type for vpp only, and let each session server only one type of devices). My personal vote goes to the first option, as a. rarely user having heterogeneous crypto devices used, b. previous crypto session structure is a bit too big.\n\n2. If we choose to access DPDK internal API/data structure in VPP, I also have a good news for further improving vpp cryptodev. Since each cryptodev PMD\u0027s private session init callback function no longer require passing mempool as parameter, the session memory can now be provided by VPP (given physical memory address can be provided). This means we can ditch the current complex memory management in VPP cryptodev for good. This involves some big changes to cryptodev but I feel confident to the results.\n\nBTW, for performance reason, no matter which path we choose to follow, we still should have 1 session allocated for every numa node.",
      "revId": "d6571efa45afd0de9dba5d3a0712f852105058a3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dbb5d76_9c2424eb",
        "filename": "src/plugins/dpdk/cryptodev/cryptodev.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 2832
      },
      "writtenOn": "2022-12-21T17:52:08Z",
      "side": 1,
      "message": "Just based on this actual patch,  can you show me what the api/data structure that cryptodev_pmd.h provides that rte_cryptodev.h doesn\u0027t",
      "parentUuid": "d38910e9_ca2db165",
      "revId": "d6571efa45afd0de9dba5d3a0712f852105058a3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f815a3c_e8d07c53",
        "filename": "src/plugins/dpdk/cryptodev/cryptodev.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 2899
      },
      "writtenOn": "2022-12-22T01:50:41Z",
      "side": 1,
      "message": "Hi Kai,\nIn DPDK 22.11, the definition of struct rte_cryptodev_sym_session is moved from rte_cryptodev.h to cryptodev_pmd.h, and the struct is used in VPP cryptodev (line 386 and line 453 of src/plugins/dpdk/cryptodev/cryptodev.c)\n\nThanks,\nXinyao",
      "parentUuid": "6dbb5d76_9c2424eb",
      "revId": "d6571efa45afd0de9dba5d3a0712f852105058a3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32b5283b_a2d64a7f",
        "filename": "src/plugins/dpdk/cryptodev/cryptodev.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1849
      },
      "writtenOn": "2022-12-22T10:14:22Z",
      "side": 1,
      "message": "Hi Xinyao,\n\nThe reason it is moved to internal header is because the change to the session structure will no longer trigger ABI break. If you have a look at the rest of the changes you will see the session pointer used by external applications is replaced by \"void *\".\n\nMore importantly - your change might not work as the session pool creation process remains unchanged. \n\n1. session pool elt size should be expanded based on the PMD required session size.\n2. sess_pools_elt-\u003esess_priv_pool should be removed as it is no longer needed.\n\nPlease also be aware the changes I stated in the first comment. They should be taken care of as well.",
      "parentUuid": "2f815a3c_e8d07c53",
      "revId": "d6571efa45afd0de9dba5d3a0712f852105058a3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f584fed_a5272c85",
        "filename": "src/plugins/dpdk/cryptodev/cryptodev.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 2899
      },
      "writtenOn": "2022-12-23T10:53:34Z",
      "side": 1,
      "message": "Hi Fan,\n\nI have noticed the problem you mentioned and I am making changes to fix it. The latest submission is a misoperation and I will update it later.",
      "parentUuid": "32b5283b_a2d64a7f",
      "revId": "d6571efa45afd0de9dba5d3a0712f852105058a3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}