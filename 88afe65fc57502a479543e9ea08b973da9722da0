{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b475d2f5_327d1669",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 193
      },
      "writtenOn": "2025-07-11T18:04:59Z",
      "side": 1,
      "message": "LGTM, needs a `make fixstyle`",
      "revId": "88afe65fc57502a479543e9ea08b973da9722da0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce789175_4fc074b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 3240
      },
      "writtenOn": "2025-07-12T04:05:06Z",
      "side": 1,
      "message": "It seems I have to change API to handle new option, but API changes aren\u0027t allowed. Could you please hint me in the right direction here, what would be the preferred way to approach this? Add new v2 API?",
      "parentUuid": "b475d2f5_327d1669",
      "revId": "88afe65fc57502a479543e9ea08b973da9722da0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f36601b4_b755ce7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 193
      },
      "writtenOn": "2025-07-13T06:42:49Z",
      "side": 1,
      "message": "Mark the api as deprecated and add another api, e.g., app_attach2. After next release we can remove the old api. \n\nIf you\u0027re testing using socket (as opposed to binary) api, this shouldn\u0027t have an effect.",
      "parentUuid": "ce789175_4fc074b4",
      "revId": "88afe65fc57502a479543e9ea08b973da9722da0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3e70c99_a6674205",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 3240
      },
      "writtenOn": "2025-07-14T17:50:21Z",
      "side": 1,
      "message": "I\u0027ve modified API so it\u0027ll keep old behaviour for now. Would it be acceptable to have API and hs_apps example updated in separate changeset?",
      "parentUuid": "f36601b4_b755ce7e",
      "revId": "88afe65fc57502a479543e9ea08b973da9722da0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b15ad99_96a3ecda",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 3240
      },
      "writtenOn": "2025-07-17T03:00:48Z",
      "side": 1,
      "message": "Hmm all tests pass except envoy. My assumption (probably incorrect; based on https://github.com/envoyproxy/envoy/blob/main/contrib/vcl/source/BUILD) is that it links static libvppcom.a and hence uses different socket protocol structures. I\u0027m not sure how to solve this other than doing some trickery to keep even socket protocol unchanged, allowing extra options only for builtin apps.",
      "parentUuid": "a3e70c99_a6674205",
      "revId": "88afe65fc57502a479543e9ea08b973da9722da0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}