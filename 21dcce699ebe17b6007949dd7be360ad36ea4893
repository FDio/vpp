{
  "comments": [
    {
      "key": {
        "uuid": "37cceebb_7942d9cd",
        "filename": "src/vnet/gso/node.c",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 361
      },
      "writtenOn": "2019-09-25T15:13:22Z",
      "side": 1,
      "message": "Instead of overwritting is_ip6 parameter above, wouldn\u0027t it be better to do something like:\nASSERT((0 \u003d\u003d is_ip6 \u0026\u0026 (sb0-\u003eflags \u0026 VNET_BUFFER_F_IS_IP4)) || (1 \u003d\u003d is_ip6 \u0026\u0026 (sb0-\u003eflags \u0026 VNET_BUFFER_F_IS_IP6)))",
      "revId": "21dcce699ebe17b6007949dd7be360ad36ea4893",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62177ffe_d0131285",
        "filename": "src/vnet/gso/node.c",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 241
      },
      "writtenOn": "2019-09-25T16:16:08Z",
      "side": 1,
      "message": "May be, I am missing something. But I don\u0027t buy the idea of having this ASSERT. We have particular packet path i.e. ip4 or ip6. This ASSERT also make sure it. So why do we waste some cycles.",
      "parentUuid": "37cceebb_7942d9cd",
      "revId": "21dcce699ebe17b6007949dd7be360ad36ea4893",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dac87739_7784cb3f",
        "filename": "src/vnet/gso/node.c",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 361
      },
      "writtenOn": "2019-09-25T16:37:54Z",
      "side": 1,
      "message": "I meant instead of doing:\n  int is_ip4 \u003d sb0-\u003eflags \u0026 VNET_BUFFER_F_IS_IP4;\n  int is_ip6 \u003d sb0-\u003eflags \u0026 VNET_BUFFER_F_IS_IP6;\n  ASSERT (is_ip4 || is_ip6);\nI think it would be better to do:\n  ASSERT((0 \u003d\u003d is_ip6 \u0026\u0026 (sb0-\u003eflags \u0026 VNET_BUFFER_F_IS_IP4)) || (1 \u003d\u003d is_ip6 \u0026\u0026 (sb0-\u003eflags \u0026 VNET_BUFFER_F_IS_IP6)))\n\nThe main reason is that \u0027int is_ip6 \u003d sb0-\u003eflags \u0026 VNET_BUFFER_F_IS_IP6;\u0027 shadow the is_ip6 parameter which is passed to the function. I think this is a bad idea.\nThen, I understand you want to use ASSERT() to make sure v4 nodes are called on v4 packets and v6 nodes on v6 packets. This ASSERT does just that: if the is_ip6 parameter is 0, it means we are calling the v4 node and so we need to check for v4 packet.\nRegarding performance, ASSERT() is only enable on DEBUG builds and C does partial boolean evaluation, ie both branches won\u0027t be fully evaluated anyway.",
      "parentUuid": "62177ffe_d0131285",
      "revId": "21dcce699ebe17b6007949dd7be360ad36ea4893",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e550c124_f0129b9b",
        "filename": "src/vnet/gso/node.c",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 241
      },
      "writtenOn": "2019-09-26T15:46:20Z",
      "side": 1,
      "message": "I think so, you are referring to old patch set. In patch set 5, I have removed:\nint is_ip4 \u003d sb0-\u003eflags \u0026 VNET_BUFFER_F_IS_IP4;\nint is_ip6 \u003d sb0-\u003eflags \u0026 VNET_BUFFER_F_IS_IP6;\nASSERT (is_ip4 || is_ip6);\n\nAs we don\u0027t need them anymore. Information about ip4 or ip6 is given to us.",
      "parentUuid": "dac87739_7784cb3f",
      "revId": "21dcce699ebe17b6007949dd7be360ad36ea4893",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b50cfc42_b8b5b6fa",
        "filename": "src/vnet/gso/node.c",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 361
      },
      "writtenOn": "2019-09-27T14:00:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e550c124_f0129b9b",
      "revId": "21dcce699ebe17b6007949dd7be360ad36ea4893",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}