{
  "comments": [
    {
      "key": {
        "uuid": "0738d0f7_dd38cd05",
        "filename": "src/vnet/vxlan/vxlan.c",
        "patchSetId": 1
      },
      "lineNbr": 388,
      "author": {
        "id": 9
      },
      "writtenOn": "2018-07-02T15:06:24Z",
      "side": 1,
      "message": "This will cause Store Forward stall and cost lot of cycles. Try to combine this into single u64 store as CRC32C instruction we use operates with quadwords.",
      "range": {
        "startLine": 386,
        "startChar": 0,
        "endLine": 388,
        "endChar": 42
      },
      "revId": "398e2c15fc17cc5234f50c0d8556239d5c2cdce3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d79565f_d0df6edd",
        "filename": "src/vnet/vxlan/vxlan.c",
        "patchSetId": 1
      },
      "lineNbr": 1171,
      "author": {
        "id": 11
      },
      "writtenOn": "2018-07-02T15:30:40Z",
      "side": 1,
      "message": "I think we should use #define\u0027s for both values in vxlan.h and not hard code the values here. How did you pick 2K buckets and 1M memory size? Was the performance test done with 4K IPv6 VXLANs?",
      "range": {
        "startLine": 1171,
        "startChar": 52,
        "endLine": 1171,
        "endChar": 53
      },
      "revId": "398e2c15fc17cc5234f50c0d8556239d5c2cdce3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b97b266_210fc007",
        "filename": "src/vnet/vxlan/vxlan.c",
        "patchSetId": 1
      },
      "lineNbr": 1171,
      "author": {
        "id": 612
      },
      "writtenOn": "2018-07-02T17:17:25Z",
      "side": 1,
      "message": "the test was 3k tunnels",
      "parentUuid": "8d79565f_d0df6edd",
      "range": {
        "startLine": 1171,
        "startChar": 52,
        "endLine": 1171,
        "endChar": 53
      },
      "revId": "398e2c15fc17cc5234f50c0d8556239d5c2cdce3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}