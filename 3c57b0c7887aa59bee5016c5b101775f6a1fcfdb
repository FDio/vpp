{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e25887b1_1da36e97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 189
      },
      "writtenOn": "2023-12-15T13:13:49Z",
      "side": 1,
      "message": "Have you thought about api design of host stack functions like the one in this patch? I always found it a bit ugly doing all the time struct_t s; memset(\u0026s, 0, sizeof()); then init the fields; and then pass it to the function.\nI can see some benefits of it, but also drawbacks.\nAs a bonus, the new design also supports default arguments! :-) (not that we really need that, but I find it cool that we can do it in C)",
      "revId": "3c57b0c7887aa59bee5016c5b101775f6a1fcfdb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d102bf4d_f2adce1a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 193
      },
      "writtenOn": "2023-12-15T17:46:22Z",
      "side": 1,
      "message": "I suspect I may be missing something, in theory:\n\n```  \n  vnet_unlisten_args_t a \u003d {\n    .handle \u003d lhc-\u003eh_tc_session_handle,\n    .app_index \u003d http_main.app_index,\n    .wrk_map_index \u003d 0 /* default wrk */\n  };\n```\n\nwill 0 out all fields that are not mentioned. Is there anything wrong with it? Or did you mention it because we have places where we do the struct and then zero it out?\n\nBut the new approach, hm, does look interesting. Maybe we\u0027d want to exposed that option at one point, not a strong opinion. But for now, if we have struct + memset approach, we should eventually refactor it to the just in time declaration option above ...",
      "parentUuid": "e25887b1_1da36e97",
      "revId": "3c57b0c7887aa59bee5016c5b101775f6a1fcfdb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label.                         A minumum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3c57b0c7887aa59bee5016c5b101775f6a1fcfdb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=MAX","label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3c57b0c7887aa59bee5016c5b101775f6a1fcfdb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}