{
  "comments": [
    {
      "key": {
        "uuid": "b2d77856_ea6fa566",
        "filename": "src/vnet/devices/virtio/pci.c",
        "patchSetId": 4
      },
      "lineNbr": 371,
      "author": {
        "id": 361
      },
      "writtenOn": "2020-07-15T12:40:14Z",
      "side": 1,
      "message": "Is this ++line intended? We then do a weird line-- in the handler.\nDoes it mean we allocate 1 MSI-X for every 2 RX queue? Shouldn\u0027t it be 1 MSI-X per RX queue instead?\nIf it is correct anyway, shouldn\u0027t it be something like:\nfor (; line \u003c vif-\u003enum_rxqs; line +\u003d 2)\n    virtio_pci_irq_queue_handler (vm, h, line);\nThat way we can drop the weird line-- in the handler, and makes it clear we increment line 2-by-2.",
      "revId": "6eea91b712115db764820d230089ba419d00073d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59c1eb8e_aa5a221a",
        "filename": "src/vnet/devices/virtio/pci.c",
        "patchSetId": 4
      },
      "lineNbr": 371,
      "author": {
        "id": 361
      },
      "writtenOn": "2020-07-15T12:42:19Z",
      "side": 1,
      "message": "My bad, the equivalent code should be\nfor (; line \u003c vif-\u003enum_rxqs; line +\u003d 2)\n    virtio_pci_irq_queue_handler (vm, h, line + 1);",
      "parentUuid": "b2d77856_ea6fa566",
      "revId": "6eea91b712115db764820d230089ba419d00073d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb0b8e68_49fee382",
        "filename": "src/vnet/devices/virtio/pci.c",
        "patchSetId": 4
      },
      "lineNbr": 371,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-07-15T12:45:27Z",
      "side": 1,
      "message": "We have MSIX from 0 to 0x7FF. In case of MSIX table size \u003e 1, MSIX 0 is always map to configuration. We have queues from 0 to N and MSIX from 1 to N + 1. So for correct mapping between MSIX and queue interrupts, you will see line++ and line-- in queue handler.",
      "parentUuid": "b2d77856_ea6fa566",
      "revId": "6eea91b712115db764820d230089ba419d00073d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4480e1d5_afd13abb",
        "filename": "src/vnet/devices/virtio/pci.c",
        "patchSetId": 4
      },
      "lineNbr": 371,
      "author": {
        "id": 361
      },
      "writtenOn": "2020-07-15T12:52:59Z",
      "side": 1,
      "message": "Then you only allocate MSI for half the RXq because of the line \u003c vif-\u003enum_rxqs?",
      "parentUuid": "fb0b8e68_49fee382",
      "revId": "6eea91b712115db764820d230089ba419d00073d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d7358ba_42930cdc",
        "filename": "src/vnet/devices/virtio/pci.c",
        "patchSetId": 4
      },
      "lineNbr": 371,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-07-15T13:11:55Z",
      "side": 1,
      "message": "Correct! We only need to allocate for RXQs. We don\u0027t need TX interrupts.\nFunction virtio_pci_irq_queue_handler only handles interrupt for RXQs and qid is queue index of correct RXQ.",
      "parentUuid": "4480e1d5_afd13abb",
      "revId": "6eea91b712115db764820d230089ba419d00073d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}