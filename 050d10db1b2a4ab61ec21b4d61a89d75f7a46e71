{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f442246c_ae781a91",
        "filename": "src/plugins/wireguard/wireguard_input.c",
        "patchSetId": 5
      },
      "lineNbr": 783,
      "author": {
        "id": 1849
      },
      "writtenOn": "2023-01-17T10:07:12Z",
      "side": 1,
      "message": "We don\u0027t need \"PREDICT_TRUE\" here. This hurts the perf for some container use cases. Since num_threads is fixed, CPU branch prediction should handle it nicely itself.",
      "revId": "050d10db1b2a4ab61ec21b4d61a89d75f7a46e71",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "019cfcd3_abd7a963",
        "filename": "src/plugins/wireguard/wireguard_input.c",
        "patchSetId": 5
      },
      "lineNbr": 800,
      "author": {
        "id": 1849
      },
      "writtenOn": "2023-01-17T10:07:12Z",
      "side": 1,
      "message": "Can you explain the logic of the code in this branch?\n\nTo me your idx_cookie is initialized as 0, and then incremented to 1 after it is used to set avg_cookie[0] to max. Which means the line 815/816 will never hit. So line 824 i will only be iterated between 0 and 1. Within only your avg_cookie[0] was set to max and avg_cookie[1] is never set.\n\nDid I miss something?",
      "revId": "050d10db1b2a4ab61ec21b4d61a89d75f7a46e71",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60813397_a30de2bd",
        "filename": "src/plugins/wireguard/wireguard_input.c",
        "patchSetId": 5
      },
      "lineNbr": 800,
      "author": {
        "id": 2479
      },
      "writtenOn": "2023-01-17T10:28:05Z",
      "side": 1,
      "message": "idx_cookie is initialized as 0 and also will be incremented to 1 after it is used to set avg_cookie[0] to max, but also we have line 809 - modulus operation so it means that we can reach 0 after MAX_COUNT_COOKIE and then lines 815/816 will be hit.",
      "parentUuid": "019cfcd3_abd7a963",
      "revId": "050d10db1b2a4ab61ec21b4d61a89d75f7a46e71",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4d73ae2_e7cba264",
        "filename": "src/plugins/wireguard/wireguard_input.c",
        "patchSetId": 5
      },
      "lineNbr": 800,
      "author": {
        "id": 1849
      },
      "writtenOn": "2023-01-17T10:31:01Z",
      "side": 1,
      "message": "I suppose 1 % 1024 \u003d\u003d 1 instead of 0?",
      "parentUuid": "60813397_a30de2bd",
      "revId": "050d10db1b2a4ab61ec21b4d61a89d75f7a46e71",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06b5c458_fb27bdcc",
        "filename": "src/plugins/wireguard/wireguard_input.c",
        "patchSetId": 5
      },
      "lineNbr": 800,
      "author": {
        "id": 2479
      },
      "writtenOn": "2023-01-17T10:44:13Z",
      "side": 1,
      "message": "in line \n807: idx_cookie \u003d\u003d 0\n808: idx_cookie \u003d\u003d 1\n809: idx_cookie \u003d\u003d (idx_cookie % 1024) \u003d\u003d 1",
      "parentUuid": "b4d73ae2_e7cba264",
      "revId": "050d10db1b2a4ab61ec21b4d61a89d75f7a46e71",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d9cf09e_bb37e0da",
        "filename": "src/plugins/wireguard/wireguard_input.c",
        "patchSetId": 5
      },
      "lineNbr": 800,
      "author": {
        "id": 1849
      },
      "writtenOn": "2023-01-17T10:48:08Z",
      "side": 1,
      "message": "Yes, then 813 will always false right?",
      "parentUuid": "06b5c458_fb27bdcc",
      "revId": "050d10db1b2a4ab61ec21b4d61a89d75f7a46e71",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ada9ec8_ea8c9659",
        "filename": "src/plugins/wireguard/wireguard_input.c",
        "patchSetId": 5
      },
      "lineNbr": 800,
      "author": {
        "id": 2479
      },
      "writtenOn": "2023-01-17T10:55:21Z",
      "side": 1,
      "message": "if idx_cookie will be 1023 in line 807 and is_max_cookie \u003d\u003d false\nthen in 808 idx_cookie will be 1024 \nthen in 809 idx_cookie will be 0 after modulus operation \n\nand in line 811 we hit this and also in 813 then we set is_max_cookie \u003d\u003d true\nnow time for cookie it will be count from 1024 last samples \n\nif we don\u0027t have enough samples in the array for avg then we count avg from the small number of samples and if we reach MAX_COUNT_COOKIE the first time then we count from the last 1024 samples",
      "parentUuid": "0d9cf09e_bb37e0da",
      "revId": "050d10db1b2a4ab61ec21b4d61a89d75f7a46e71",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e95f8d3_9ff0f540",
        "filename": "src/plugins/wireguard/wireguard_input.c",
        "patchSetId": 5
      },
      "lineNbr": 800,
      "author": {
        "id": 1849
      },
      "writtenOn": "2023-01-17T10:57:57Z",
      "side": 1,
      "message": "If your idx_cookie is always initialized as 0 in 803, how do you expect idx_cookie reach 1023?",
      "parentUuid": "7ada9ec8_ea8c9659",
      "revId": "050d10db1b2a4ab61ec21b4d61a89d75f7a46e71",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ccba305_ab74131a",
        "filename": "src/plugins/wireguard/wireguard_input.c",
        "patchSetId": 5
      },
      "lineNbr": 800,
      "author": {
        "id": 2479
      },
      "writtenOn": "2023-01-17T11:03:00Z",
      "side": 1,
      "message": "this is static variable in line 803 for idx_cookie",
      "parentUuid": "0e95f8d3_9ff0f540",
      "revId": "050d10db1b2a4ab61ec21b4d61a89d75f7a46e71",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}