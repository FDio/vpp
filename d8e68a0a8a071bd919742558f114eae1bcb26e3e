{
  "comments": [
    {
      "key": {
        "uuid": "6c0812cb_674a5cae",
        "filename": "src/vnet/vxlan/encap.c",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 267
      },
      "writtenOn": "2019-12-18T20:45:58Z",
      "side": 1,
      "message": "can you elaborate please on the circumstances where this would be 0.",
      "revId": "d8e68a0a8a071bd919742558f114eae1bcb26e3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e8b691c_0b2307c2",
        "filename": "src/vnet/vxlan/encap.c",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 11
      },
      "writtenOn": "2019-12-18T22:17:23Z",
      "side": 1,
      "message": "I also do not see why l2_len value would have affected the subsequent vnet_l2_compute_flow_hash() call.  Please explain.",
      "parentUuid": "6c0812cb_674a5cae",
      "revId": "d8e68a0a8a071bd919742558f114eae1bcb26e3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36c63ccb_22c81deb",
        "filename": "src/vnet/vxlan/encap.c",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 11
      },
      "writtenOn": "2019-12-18T22:31:14Z",
      "side": 1,
      "message": "The IRB case you mentioned in the commit message should not leave l2_len field as 0.  Please look at l2_bvi_node.c where vnet_update_l2_len() is called to update it.  If you did find a case where l2_len is left as 0, something else needs to be fixed to address it which I doubt would be the case.",
      "parentUuid": "5e8b691c_0b2307c2",
      "revId": "d8e68a0a8a071bd919742558f114eae1bcb26e3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "728274cf_4147dad6",
        "filename": "src/vnet/vxlan/encap.c",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 2084
      },
      "writtenOn": "2019-12-19T09:43:50Z",
      "side": 1,
      "message": "I don\u0027t think graph node path for vxlan encap direction would traverse l2_bvi_tx node. In my case, packet trace show the node path is: af-packet-input -\u003e ethernet-iput -\u003e l2-input -\u003e l2-learn -\u003e l2-fwd -\u003e ip4-input -\u003e ip4-lookup -\u003e ip4-rewrite -\u003e vxlan4-encap -\u003e ip4-load-balance -\u003e ip4-rewrite -\u003e eth1-output -\u003e eth1-tx. and l2.l2-len is cleared by ip4-lookup to set ip.flow_hash\u003d0 at ip4_forward.h line 375 ip4_lookup_inline\nI will send separated email with vpp config, topo, etc to explain the detail.",
      "parentUuid": "36c63ccb_22c81deb",
      "revId": "d8e68a0a8a071bd919742558f114eae1bcb26e3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5723078f_62e69580",
        "filename": "src/vnet/vxlan/encap.c",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 11
      },
      "writtenOn": "2019-12-19T16:50:35Z",
      "side": 1,
      "message": "VXLAN tunnel is used to setup L2 overlay networks by connecting bridge domains (BDs) in separate hosts via underlay L3 network.  Thus, the VXLAN tunnel interfaces are supposed to be put in BDs and never have IP addresses/ARP assigned as how you are configuring it, such as the following command in the configs in your email: \"set ip arp static vxlan_tunnel1 1.1.1.2 00:1b:21:8b:48:c0\" and \"ip route add 10.0.2.0/24 table 1 via 1.1.1.2 vxlan_tunnel1\".  This is why you are getting your node path where vxlan-encap node is used after ip4-lookup which clears l2_len.  This is not a valid usage of VXLAN tunnel.  The proper VXLAN tunnel node path is usually: ...-\u003e l2-output -\u003e vxlan4-encap -\u003e ip4-load-balance -\u003e ip4-rewrite -\u003e ... where vxlan encap happens right after l2-output node, before ip4 forwarding nodes are used. Thus what you assumed to be a problem where l2-len is cleared by ip4-lookup which is later used by encap node happens only because your misuse of VXLAN tunnel.",
      "parentUuid": "728274cf_4147dad6",
      "revId": "d8e68a0a8a071bd919742558f114eae1bcb26e3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34f7befa_a8b49b82",
        "filename": "src/vnet/vxlan/encap.c",
        "patchSetId": 3
      },
      "lineNbr": 440,
      "author": {
        "id": 267
      },
      "writtenOn": "2019-12-18T20:45:58Z",
      "side": 1,
      "message": "maybe set this value to flow_hash0, then the load-balance node does not need to generate a new flow hash.",
      "revId": "d8e68a0a8a071bd919742558f114eae1bcb26e3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f77e974_c86b5f62",
        "filename": "src/vnet/vxlan/encap.c",
        "patchSetId": 3
      },
      "lineNbr": 440,
      "author": {
        "id": 11
      },
      "writtenOn": "2019-12-18T22:17:23Z",
      "side": 1,
      "message": "Agree, we may as well store the calculated hash for use with subsequent load balance operation.  The same code sequence is repeated in src/plugins/gtpu_encap.c, src/vnet/geneve/encap.c, src/vnet/vxlan-gdb/encap.c so they should also be fixed.",
      "parentUuid": "34f7befa_a8b49b82",
      "revId": "d8e68a0a8a071bd919742558f114eae1bcb26e3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e2f1bc2_089967dd",
        "filename": "src/vnet/vxlan/encap.c",
        "patchSetId": 3
      },
      "lineNbr": 440,
      "author": {
        "id": 2084
      },
      "writtenOn": "2019-12-19T09:43:50Z",
      "side": 1,
      "message": "ok,  to reuse inner header flow hash for outer header ECMP path selection is better to compute new one.\nso should I change all these cases in this commit? or fix them one by one? and how about UT test for other cases, should have really traffic to verify codes changes too?",
      "parentUuid": "3f77e974_c86b5f62",
      "revId": "d8e68a0a8a071bd919742558f114eae1bcb26e3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c23e715_2bbd6053",
        "filename": "src/vnet/vxlan/encap.c",
        "patchSetId": 3
      },
      "lineNbr": 440,
      "author": {
        "id": 11
      },
      "writtenOn": "2019-12-19T16:50:35Z",
      "side": 1,
      "message": "These should be almost identical code sequence with the same fix so I would think it is OK to fix with this commit.  There are no UT test case for encap followed by load balance so it should not matter.",
      "parentUuid": "0e2f1bc2_089967dd",
      "revId": "d8e68a0a8a071bd919742558f114eae1bcb26e3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}