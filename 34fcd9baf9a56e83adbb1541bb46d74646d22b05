{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "63a2299c_34d9b2fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 193
      },
      "writtenOn": "2025-02-05T18:55:51Z",
      "side": 1,
      "message": "Quick comment inline. Would just aborting if shmem_hdr is null solve the consistency issue you\u0027re seeing?",
      "revId": "34fcd9baf9a56e83adbb1541bb46d74646d22b05",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8d10406_41a4fa36",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 366
      },
      "writtenOn": "2025-02-05T20:54:22Z",
      "side": 1,
      "message": "I don\u0027t really have any comment on whether the code changes are the best approach to solve the problem you are observing. But this is definitely not a \"docs\" change. The subject should probably be \"api: vl_msg_api_alloc_internal improved to provide consistent behavior\" instead.",
      "revId": "34fcd9baf9a56e83adbb1541bb46d74646d22b05",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d686858_266d178c",
        "filename": "src/vlibapi/memory_shared.c",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 193
      },
      "writtenOn": "2025-02-05T18:55:51Z",
      "side": 1,
      "message": "These failures are protocol errors, i.e., the api memory/connection is not properly allocated/established, whereas may_return_null used lower is meant to allow memory allocations to soft fail if heap is full. \n\nNot sure we should be allowing null returns when the shmem_hdr is completely broken. In fact not sure why we\u0027re not aborting here as well ...",
      "revId": "34fcd9baf9a56e83adbb1541bb46d74646d22b05",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}