{
  "comments": [
    {
      "key": {
        "uuid": "25420701_7ac31f24",
        "filename": "src/vnet/devices/pipe/pipe.c",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 11
      },
      "writtenOn": "2018-10-18T16:22:11Z",
      "side": 1,
      "message": "There are multiple ethertypes for VLAN tags, such as 802.1q, 802.1ad, 802.1ah, etc. Perhaps we don\u0027t need this check and just let the else path for uncommon ethertype drop the packet.",
      "range": {
        "startLine": 258,
        "startChar": 15,
        "endLine": 258,
        "endChar": 33
      },
      "revId": "d614bf40985bb631eea701fec4fadb998c910e8c",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86e81f3a_cdadd347",
        "filename": "src/vnet/devices/pipe/pipe.c",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 320
      },
      "writtenOn": "2018-10-19T16:03:32Z",
      "side": 1,
      "message": "That \"else\" branch would not be reached in the L2 path - hence deliberately I have placed it in front. But upon further thinking, maybe dropping the frames is a bit too aggressive. So I think I will just remove this check as you suggest.",
      "parentUuid": "25420701_7ac31f24",
      "range": {
        "startLine": 258,
        "startChar": 15,
        "endLine": 258,
        "endChar": 33
      },
      "revId": "d614bf40985bb631eea701fec4fadb998c910e8c",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ee9b709_e464876c",
        "filename": "src/vnet/devices/pipe/pipe.c",
        "patchSetId": 2
      },
      "lineNbr": 390,
      "author": {
        "id": 11
      },
      "writtenOn": "2018-10-18T16:16:10Z",
      "side": 1,
      "message": "What\u0027s done here is optimized for L3 but added extra process for L2 in determine_next_node. I think a more balanced approach would be to always set l2_len above (it does not hurt L3 path as it is overlaid with L3 fields so will be overwritten) and do vlib_buffer_advance only in L3 mode, or do something like vlib_buffer_advance (b, is_l2? 0 : sizeof(ethernet_header_t))",
      "range": {
        "startLine": 390,
        "startChar": 3,
        "endLine": 390,
        "endChar": 22
      },
      "revId": "d614bf40985bb631eea701fec4fadb998c910e8c",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "981dc67a_7cab12f7",
        "filename": "src/vnet/devices/pipe/pipe.c",
        "patchSetId": 2
      },
      "lineNbr": 390,
      "author": {
        "id": 320
      },
      "writtenOn": "2018-10-19T16:03:32Z",
      "side": 1,
      "message": "Makes sense. I tried to preserve the same logic as in the ethernet-input node, but without the full parsing it is unnecessary.",
      "parentUuid": "6ee9b709_e464876c",
      "range": {
        "startLine": 390,
        "startChar": 3,
        "endLine": 390,
        "endChar": 22
      },
      "revId": "d614bf40985bb631eea701fec4fadb998c910e8c",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}