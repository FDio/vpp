{
  "comments": [
    {
      "key": {
        "uuid": "4d6d5612_2b76c16b",
        "filename": "src/plugins/af_xdp/af_xdp.h",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 361
      },
      "writtenOn": "2021-11-16T14:10:45Z",
      "side": 1,
      "message": "can you add a comment   /* fields below are accessed in control-plane only (cold) */ before it as is done in af_xdp_device_t below?",
      "revId": "20626184ecf1b1bdc2cd27e526756af33a9faab6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47738c89_78da6d71",
        "filename": "src/plugins/af_xdp/device.c",
        "patchSetId": 3
      },
      "lineNbr": 542,
      "author": {
        "id": 241
      },
      "writtenOn": "2021-11-16T17:41:15Z",
      "side": 1,
      "message": "Can you please keep it simple, (for the sake of maintainability)?\n\nfor (u32 i \u003d 0; i \u003c ad-\u003etxq_num; i++)\n  {\n     af_xdp_txq_t *txq \u003d vec_elt_at_index (ad-\u003etxqs, i);\n      txq-\u003equeue_index \u003d\n \tvnet_hw_if_register_tx_queue (vnm, ad-\u003ehw_if_index, i);\n   }\n\nfor (u32 j \u003d 0; j \u003c vlib_get_n_threads(); j++)\n  {\n    u32 qi \u003d ad-\u003etxqs[j % ad-\u003etxq_num].queue_index;\n    vnet_hw_if_tx_queue_assign_thread (vnm, qi, j);\n  }",
      "revId": "20626184ecf1b1bdc2cd27e526756af33a9faab6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e525170_6b3c8ee8",
        "filename": "src/plugins/af_xdp/device.c",
        "patchSetId": 3
      },
      "lineNbr": 542,
      "author": {
        "id": 361
      },
      "writtenOn": "2021-11-16T17:54:24Z",
      "side": 1,
      "message": "This is not that simple, because by default we want to make sure that the rxq and the txq belonging to the same Linux queue pair are scheduled on the same thread. This is to avoid locking in the dataplane, because of some idiosyncrasies of AF_XDP.",
      "parentUuid": "47738c89_78da6d71",
      "revId": "20626184ecf1b1bdc2cd27e526756af33a9faab6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "285d34c0_1e061172",
        "filename": "src/plugins/af_xdp/device.c",
        "patchSetId": 3
      },
      "lineNbr": 542,
      "author": {
        "id": 241
      },
      "writtenOn": "2021-11-17T06:18:33Z",
      "side": 1,
      "message": "Thanks Ben for the information. I would say still keep it simple. You can manually place the rxqs and txqs using CLI/API once interface is created and if required as you will have better view of number of threads, rxqs and txqs by then.",
      "parentUuid": "4e525170_6b3c8ee8",
      "revId": "20626184ecf1b1bdc2cd27e526756af33a9faab6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ee176ec_bf73e766",
        "filename": "src/plugins/af_xdp/device.c",
        "patchSetId": 3
      },
      "lineNbr": 545,
      "author": {
        "id": 361
      },
      "writtenOn": "2021-11-16T14:10:45Z",
      "side": 1,
      "message": "I\u0027d rather have the assignment in the \u0027else\u0027 branch of the \u0027if\u0027 below to make it clearer",
      "revId": "20626184ecf1b1bdc2cd27e526756af33a9faab6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20e0751a_e7378474",
        "filename": "src/plugins/af_xdp/device.c",
        "patchSetId": 3
      },
      "lineNbr": 549,
      "author": {
        "id": 361
      },
      "writtenOn": "2021-11-16T14:10:45Z",
      "side": 1,
      "message": "why the test \u0027i + 1 \u003c ad-\u003etxq_num\u0027?\nAlso maybe add a comment to explain that we set the rxq and txq of the same queue pair on the same thread by default to avoid locking",
      "revId": "20626184ecf1b1bdc2cd27e526756af33a9faab6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1886bdd8_0f4b19bd",
        "filename": "src/plugins/af_xdp/device.c",
        "patchSetId": 3
      },
      "lineNbr": 549,
      "author": {
        "id": 2414
      },
      "writtenOn": "2021-11-17T08:03:18Z",
      "side": 1,
      "message": "We should make sure a txq assigned to thread #0 (main thread), here reserve the last one for it.",
      "parentUuid": "20e0751a_e7378474",
      "revId": "20626184ecf1b1bdc2cd27e526756af33a9faab6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ffbba90_8090f66c",
        "filename": "src/plugins/af_xdp/device.c",
        "patchSetId": 3
      },
      "lineNbr": 560,
      "author": {
        "id": 361
      },
      "writtenOn": "2021-11-16T14:10:45Z",
      "side": 1,
      "message": "why is this loop needed? I think we already assigned the thread of all txq in the loop above?",
      "revId": "20626184ecf1b1bdc2cd27e526756af33a9faab6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ea0963d_f391ea3c",
        "filename": "src/plugins/af_xdp/device.c",
        "patchSetId": 3
      },
      "lineNbr": 560,
      "author": {
        "id": 2414
      },
      "writtenOn": "2021-11-17T08:03:18Z",
      "side": 1,
      "message": "5 threads and nic has 2 txq and 2 rxq, rx #0 -\u003e thread #2, rx #1 -\u003e thead #3, per thread do not has per txq, we need share txq.",
      "parentUuid": "4ffbba90_8090f66c",
      "revId": "20626184ecf1b1bdc2cd27e526756af33a9faab6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55b6d0fa_0d2f0f19",
        "filename": "src/plugins/af_xdp/output.c",
        "patchSetId": 3
      },
      "lineNbr": 218,
      "author": {
        "id": 361
      },
      "writtenOn": "2021-11-16T14:10:45Z",
      "side": 1,
      "message": "can we declare it const?",
      "revId": "20626184ecf1b1bdc2cd27e526756af33a9faab6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7480b4a_67a22731",
        "filename": "src/plugins/af_xdp/output.c",
        "patchSetId": 3
      },
      "lineNbr": 219,
      "author": {
        "id": 361
      },
      "writtenOn": "2021-11-16T14:10:45Z",
      "side": 1,
      "message": "can we declare it const?",
      "revId": "20626184ecf1b1bdc2cd27e526756af33a9faab6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}