{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "91f50337_d69c642d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 193
      },
      "writtenOn": "2023-06-01T18:37:34Z",
      "side": 1,
      "message": "Hi, Yang! This is really interesting but the current code is pretty invasive, as it expands several data structures that we typically avoid changing. Moreover, note that vlib buffer metadata is not guaranteed to survive transition through multiple nodes, i.e., if additional features are configured between nat and tcp/udp input metadata might be corrupted. \n\nOne suggestion would be to maybe glean the original dst ip/port in session_api just before notifying the app of the accept event, if a nat translation table exists. And we should enable this feature with a startup config session stanza flag as we don\u0027t want to be looking for nat dest ips always. It would probably be even better if we could do the nat table lookup only on demand, not on accept, as a request from VPPCOM_ATTR_GET_ORIGINAL_DST attr handler to session layer.",
      "revId": "7350ee4fef8f7b4bd838961bd45c0c7e423eb3fc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c525b81e_f3e4fbee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 2975
      },
      "writtenOn": "2023-06-02T03:31:58Z",
      "side": 1,
      "message": "Hi,Florin! Thanks for your reply.The code is invasive indeed, only taking into account my project needs which is latency sensitive.It\u0027s a good idea to fetch original dst info by lookup nat session table.\n\nI have considered querying nat session table every time the VPP receives a requset from vcl, but worried about higher latency.Would it be better attach original dst ip/port before notifying accept event? So that app can get attached info from cache memory directly instead of quering table every time.",
      "parentUuid": "91f50337_d69c642d",
      "revId": "7350ee4fef8f7b4bd838961bd45c0c7e423eb3fc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9d252b2_fd42426c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 193
      },
      "writtenOn": "2023-06-02T04:06:36Z",
      "side": 1,
      "message": "It should be possible, but then I\u0027d like to avoid doing this type of nat lookup for all applications, especially as nat will not always be configured. I suggested one option above with startup.conf config but probably a better alternative would be to add a new app flag (see app_attach_options_index_t) which would enable this feature per app. We could add these types of flags to vcl.conf and pass them down to vpp at attach time.",
      "parentUuid": "c525b81e_f3e4fbee",
      "revId": "7350ee4fef8f7b4bd838961bd45c0c7e423eb3fc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}