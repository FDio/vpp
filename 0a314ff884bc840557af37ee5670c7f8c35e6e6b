{
  "comments": [
    {
      "key": {
        "uuid": "658ecb43_fd2be463",
        "filename": "src/plugins/wg/README.md",
        "patchSetId": 10
      },
      "lineNbr": 4,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-09-01T15:29:01Z",
      "side": 1,
      "message": "sed -i -e \u0027s/[[:space:]]*$//\u0027 src/plugins/wg/README.md\n\naka. remove trailing whitespace",
      "revId": "0a314ff884bc840557af37ee5670c7f8c35e6e6b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "667dd99e_ce11b073",
        "filename": "src/plugins/wg/test/test_wg.py",
        "patchSetId": 10
      },
      "lineNbr": 102,
      "author": {
        "id": 267
      },
      "writtenOn": "2020-09-02T07:13:13Z",
      "side": 1,
      "message": "we don\u0027t use the CLI in unit tests. this would be better written:\n        t \u003d VppIpIpTunInterface(self, self.pg0,\n                                       self.pg0.remote_ip4,\n                                       self.pg2.remote_ip4)\n        t.add_vpp_config()\n        t.admin_up()\n        t.config_ip4()",
      "revId": "0a314ff884bc840557af37ee5670c7f8c35e6e6b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf990475_71159d66",
        "filename": "src/plugins/wg/test/test_wg.py",
        "patchSetId": 10
      },
      "lineNbr": 102,
      "author": {
        "id": 2280
      },
      "writtenOn": "2020-09-03T08:55:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "667dd99e_ce11b073",
      "revId": "0a314ff884bc840557af37ee5670c7f8c35e6e6b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d97da4a4_c8f7cac7",
        "filename": "src/plugins/wg/test/test_wg.py",
        "patchSetId": 10
      },
      "lineNbr": 114,
      "author": {
        "id": 267
      },
      "writtenOn": "2020-09-02T07:13:13Z",
      "side": 1,
      "message": "does this API exist only for testing purposes? A control plane should know how many peers it has added.\nif it\u0027s just for testing you can count with\n  peers_count \u003d len(self.vapi.wg_peers_dump())",
      "revId": "0a314ff884bc840557af37ee5670c7f8c35e6e6b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a84a501_289a473b",
        "filename": "src/plugins/wg/test/test_wg.py",
        "patchSetId": 10
      },
      "lineNbr": 114,
      "author": {
        "id": 2280
      },
      "writtenOn": "2020-09-03T08:55:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d97da4a4_c8f7cac7",
      "revId": "0a314ff884bc840557af37ee5670c7f8c35e6e6b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de505f64_02adc9fe",
        "filename": "src/plugins/wg/test/test_wg.py",
        "patchSetId": 10
      },
      "lineNbr": 128,
      "author": {
        "id": 267
      },
      "writtenOn": "2020-09-02T07:13:13Z",
      "side": 1,
      "message": "there are no tests here for any packets, signalling nor data. you really should add some otherwise this code is subject to breakage without you knowing and you\u0027ll be running your manual tests daily for years ðŸ˜Š\ni see scapy has wireguard:\n  https://scapy.readthedocs.io/en/latest/api/scapy.contrib.wireguard.html#\nwe can bump the scapy version we use to make it available.",
      "revId": "0a314ff884bc840557af37ee5670c7f8c35e6e6b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5edaa64c_3bbb30b0",
        "filename": "src/plugins/wg/wg_input.c",
        "patchSetId": 10
      },
      "lineNbr": 259,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-09-01T18:02:10Z",
      "side": 1,
      "message": "switch statements are inefficient in fastpath, suggest if...else with PREDICT_TRUE for most common case (MESSAGE_DATA first).",
      "revId": "0a314ff884bc840557af37ee5670c7f8c35e6e6b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee0f2e69_ed89e563",
        "filename": "src/plugins/wg/wg_input.c",
        "patchSetId": 10
      },
      "lineNbr": 277,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-09-01T18:02:10Z",
      "side": 1,
      "message": "You should avoid function calls in dataplane node for perf reasonds. consider using inline functions instead.",
      "revId": "0a314ff884bc840557af37ee5670c7f8c35e6e6b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20543f2a_b2a5e933",
        "filename": "src/plugins/wg/wg_input.c",
        "patchSetId": 10
      },
      "lineNbr": 278,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-09-01T18:02:10Z",
      "side": 1,
      "message": "consider using 1 entry cache, if result of lookup for packet 1 is X, there is good probability that packet 2 will be similar one and lookup result will be the same.",
      "revId": "0a314ff884bc840557af37ee5670c7f8c35e6e6b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "410aea29_d1dfe962",
        "filename": "src/plugins/wg/wg_input.c",
        "patchSetId": 10
      },
      "lineNbr": 282,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-09-01T18:02:10Z",
      "side": 1,
      "message": "pool_elt_at_index always gives you a non-null pointer so this check is not needed (there is ASSERT in debug image if something goes wrong here (i.e. pool elt is not valid))",
      "revId": "0a314ff884bc840557af37ee5670c7f8c35e6e6b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b902142b_ced8dc2d",
        "filename": "src/plugins/wg/wg_input.c",
        "patchSetId": 10
      },
      "lineNbr": 292,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-09-01T18:02:10Z",
      "side": 1,
      "message": "this is really bad idea, it is expensive operation and you should not do it per packet. If you need temporary storage area, just allocate per-thread tmp storage area on startup.",
      "revId": "0a314ff884bc840557af37ee5670c7f8c35e6e6b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00e08033_6cc62b96",
        "filename": "src/plugins/wg/wg_input.c",
        "patchSetId": 10
      },
      "lineNbr": 321,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-09-01T18:02:10Z",
      "side": 1,
      "message": "You probably want to use clib_memcpy_fast here....",
      "revId": "0a314ff884bc840557af37ee5670c7f8c35e6e6b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}