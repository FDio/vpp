{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0ab03ecc_fe84117c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 193
      },
      "writtenOn": "2023-08-08T04:58:06Z",
      "side": 1,
      "message": "I guess this was supposed to go in with the previous patch. Quick question inside",
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "199fb77d_26b86b3b",
        "filename": "src/vcl/vppcom.c",
        "patchSetId": 1
      },
      "lineNbr": 1057,
      "author": {
        "id": 193
      },
      "writtenOn": "2023-08-08T04:58:06Z",
      "side": 1,
      "message": "Wonder if the check lower shouldn\u0027t be done outside of this if, i.e., we shouldn\u0027t be checking if listener has non-block on it. If you manage to repro the issue can you test and also please add a comment to provide a bit of context",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1057,
        "endChar": 59
      },
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6d470a3_6fccdaf9",
        "filename": "src/vcl/vppcom.c",
        "patchSetId": 1
      },
      "lineNbr": 1057,
      "author": {
        "id": 2035
      },
      "writtenOn": "2023-08-09T02:03:04Z",
      "side": 1,
      "message": "I am currently following the process for a non-listen session, which involves calling the vcl_session_disconnected_handler and returning without any event reports. I would like to suggest that we add the evt to the unhandled_evts_vector, regardless of whether it is a listen or non-listen session.",
      "parentUuid": "199fb77d_26b86b3b",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1057,
        "endChar": 59
      },
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a325848c_306d5a30",
        "filename": "src/vcl/vppcom.c",
        "patchSetId": 1
      },
      "lineNbr": 1057,
      "author": {
        "id": 193
      },
      "writtenOn": "2023-08-09T17:37:17Z",
      "side": 1,
      "message": "We are adding it to unhandled_evts_vector lower. Just that we\u0027re adding it with postponed flag set. Are you hitting situations when app didn\u0027t receive the accept/connect notifications?",
      "parentUuid": "c6d470a3_6fccdaf9",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1057,
        "endChar": 59
      },
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "070a347b_efad7baa",
        "filename": "src/vcl/vppcom.c",
        "patchSetId": 1
      },
      "lineNbr": 1057,
      "author": {
        "id": 2035
      },
      "writtenOn": "2023-08-10T02:21:12Z",
      "side": 1,
      "message": "Sorry, I wrote it wrong before. What I meant was that the handling of BLOCK session directly calls vcl_session_disconnected_handler, so is listen session also handled this way?",
      "parentUuid": "a325848c_306d5a30",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1057,
        "endChar": 59
      },
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40294ecc_8832c2f7",
        "filename": "src/vcl/vppcom.c",
        "patchSetId": 1
      },
      "lineNbr": 1057,
      "author": {
        "id": 193
      },
      "writtenOn": "2023-08-10T04:47:57Z",
      "side": 1,
      "message": "Ow, I think I understood now your previous point. In theory, we could have a pending accept event and then vcl_session_disconnected_handler would mark it such that the accept ends up with session in state vpp_closing. However, that session would still need a read/write/epoll ctl to ultimately notify the app of the close. \n\nProbably that\u0027s better than trying to generate an event for a session that\u0027s not yet epolled. So yes, let\u0027s handle not yet accepted sessions like the blocking ones.",
      "parentUuid": "070a347b_efad7baa",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1057,
        "endChar": 59
      },
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d4b9242_1f10417c",
        "filename": "src/vcl/vppcom.c",
        "patchSetId": 1
      },
      "lineNbr": 1057,
      "author": {
        "id": 2035
      },
      "writtenOn": "2023-08-10T07:13:52Z",
      "side": 1,
      "message": "BTW, why we distiguish blocking and non-blocking session? Because in vcl_epoll_wait_handle_mq_event, we just process in the same way.",
      "parentUuid": "40294ecc_8832c2f7",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1057,
        "endChar": 59
      },
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e529df62_3686c5e6",
        "filename": "src/vcl/vppcom.c",
        "patchSetId": 1
      },
      "lineNbr": 1057,
      "author": {
        "id": 193
      },
      "writtenOn": "2023-08-10T15:40:22Z",
      "side": 1,
      "message": "We don\u0027t call vcl_session_disconnected_handler if the message is postponed. Instead we check if the session is closed or doesn\u0027t need event, i.e., session might\u0027ve been closed or taken out of epoll while waiting for the event to be drained, so no event should be generated.",
      "parentUuid": "7d4b9242_1f10417c",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1057,
        "endChar": 59
      },
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c12ca414_22c205c5",
        "filename": "src/vcl/vppcom.c",
        "patchSetId": 1
      },
      "lineNbr": 1057,
      "author": {
        "id": 2035
      },
      "writtenOn": "2023-08-11T03:40:14Z",
      "side": 1,
      "message": "Hmm. But why blocking sessions can\u0027t been postponed?",
      "parentUuid": "e529df62_3686c5e6",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1057,
        "endChar": 59
      },
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5457cbe4_28460ec4",
        "filename": "src/vcl/vppcom.c",
        "patchSetId": 1
      },
      "lineNbr": 1057,
      "author": {
        "id": 193
      },
      "writtenOn": "2023-08-11T15:37:53Z",
      "side": 1,
      "message": "Fair question. Expectation is that blocking sessions are not part of epoll instead they\u0027re used in a synchronous manner. So then in this function we\u0027re either 1) handling a burst of events received while blocking on read/write or 2) we\u0027re handling a burst of events in epoll_wait, more than fit in the events array provided by the app, some of which are for a blocking session which will eventually read/write and it will then be provided with updates. \n\nThat is, for 2) we\u0027re expecting blocking sessions to not be epolled.",
      "parentUuid": "c12ca414_22c205c5",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1057,
        "endChar": 59
      },
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7146672_b070f130",
        "filename": "src/vcl/vppcom.c",
        "patchSetId": 1
      },
      "lineNbr": 1057,
      "author": {
        "id": 2035
      },
      "writtenOn": "2023-08-14T02:26:58Z",
      "side": 1,
      "message": "OK, got it, thanks for the explanation.\nSo can you merge this patch, or some modifications are neededï¼Ÿ",
      "parentUuid": "5457cbe4_28460ec4",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1057,
        "endChar": 59
      },
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d79df655_853d739d",
        "filename": "src/vcl/vppcom.c",
        "patchSetId": 1
      },
      "lineNbr": 1057,
      "author": {
        "id": 2035
      },
      "writtenOn": "2023-08-14T02:35:50Z",
      "side": 1,
      "message": "Sorry, I missed the discussion earlier, I will submit a modification soon.",
      "parentUuid": "f7146672_b070f130",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1057,
        "endChar": 59
      },
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78f05a51_3b56f2b0",
        "filename": "src/vcl/vppcom.c",
        "patchSetId": 1
      },
      "lineNbr": 1057,
      "author": {
        "id": 2035
      },
      "writtenOn": "2023-08-14T02:53:06Z",
      "side": 1,
      "message": "In my understanding, we can\u0027t add evt to unhandled_evts_vector for a blocking listen session, right? Because blocking session not be epolled, then unhandled_evts_vector not be processed.\nThen this patch need not be changed?",
      "parentUuid": "d79df655_853d739d",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1057,
        "endChar": 59
      },
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d435ee8d_89ee7b15",
        "filename": "src/vcl/vppcom.c",
        "patchSetId": 1
      },
      "lineNbr": 1057,
      "author": {
        "id": 193
      },
      "writtenOn": "2023-08-14T16:33:14Z",
      "side": 1,
      "message": "Well, this is a session accepted on a blocking listener. unhandled_evts_vector is expected to be constantly processed, it\u0027s just that for blocking sessions we\u0027re not expecting those events to become epoll events. Nonetheless, your point stands. We shouldn\u0027t postpone that disconnect if listener was blocking. \n\nHowever, just realized that we should probably always just call disconnected/reset handlers if sessions have not yet been accepted. We already have the pending accept notification so we should be okay to just mark the session with VCL_ACCEPTED_F_CLOSED. So then the if on line 1057 should be:\n\n```\nif (vcl_session_has_attr (s, VCL_SESS_ATTR_NONBLOCK) \n    \u0026\u0026 !(s-\u003esession_state \u003d\u003d VCL_STATE_LISTEN \n       || s-\u003esession_state \u003d\u003d VCL_STATE_LISTEN_NO_MQ)) {}\n```\n\nThat is, we don\u0027t postpone events for not yet accepted sessions.",
      "parentUuid": "78f05a51_3b56f2b0",
      "range": {
        "startLine": 1057,
        "startChar": 0,
        "endLine": 1057,
        "endChar": 59
      },
      "revId": "d5e1ec53c7bd9e0ad4c5139639e9790e42966f18",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}