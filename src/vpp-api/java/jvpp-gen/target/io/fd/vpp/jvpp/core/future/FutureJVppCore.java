
package io.fd.vpp.jvpp.core.future;

/**
 * <p>Async facade extension adding specific methods for each request invocation
 * <br>It was generated by jvpp_future_facade_gen.py based on ['test.api.json'].
 */
public interface FutureJVppCore extends io.fd.vpp.jvpp.future.FutureJVppInvoker {

    java.util.concurrent.CompletionStage<io.fd.vpp.jvpp.core.dto.RequestNoArgsReply> requestNoArgs(io.fd.vpp.jvpp.core.dto.RequestNoArgs request);

    java.util.concurrent.CompletionStage<io.fd.vpp.jvpp.core.dto.RequestSingleArgReply> requestSingleArg(io.fd.vpp.jvpp.core.dto.RequestSingleArg request);

    java.util.concurrent.CompletionStage<io.fd.vpp.jvpp.core.dto.RequestTwoArgsReply> requestTwoArgs(io.fd.vpp.jvpp.core.dto.RequestTwoArgs request);

    java.util.concurrent.CompletionStage<io.fd.vpp.jvpp.core.dto.RequestWithSingleArrayReply> requestWithSingleArray(io.fd.vpp.jvpp.core.dto.RequestWithSingleArray request);

    java.util.concurrent.CompletionStage<io.fd.vpp.jvpp.core.dto.RequestWithArraysReply> requestWithArrays(io.fd.vpp.jvpp.core.dto.RequestWithArrays request);

    java.util.concurrent.CompletionStage<io.fd.vpp.jvpp.core.dto.RequestWithVariableLengthArrayReply> requestWithVariableLengthArray(io.fd.vpp.jvpp.core.dto.RequestWithVariableLengthArray request);

    java.util.concurrent.CompletionStage<io.fd.vpp.jvpp.core.dto.FooDetailsReplyDump> fooDump(io.fd.vpp.jvpp.core.dto.FooDump request);

    java.util.concurrent.CompletionStage<io.fd.vpp.jvpp.core.dto.RequestWithCustomTypeReply> requestWithCustomType(io.fd.vpp.jvpp.core.dto.RequestWithCustomType request);

    java.util.concurrent.CompletionStage<io.fd.vpp.jvpp.core.dto.RequestWithCustomTypeArrayReply> requestWithCustomTypeArray(io.fd.vpp.jvpp.core.dto.RequestWithCustomTypeArray request);

    java.util.concurrent.CompletionStage<io.fd.vpp.jvpp.core.dto.RequestWithCustomTypeVlaReply> requestWithCustomTypeVla(io.fd.vpp.jvpp.core.dto.RequestWithCustomTypeVla request);


//    @Override FIXME: add events
//    public io.fd.vpp.jvpp.core.notification.CoreEventRegistry getEventRegistry();

}
