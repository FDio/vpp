
unix {
# interactive
# cli-prompt <"prompt">
# runtime-dir <"dir">
# cli-line-mode
# cli-no-banner
# cli-no-pager
# poll-sleep-usec <%d>
# cli-pager-buffer-limit <%d>
# cli-history-limit <%d>
# coredump-size <memory_size|unlimited>
# startup-config <%s>
# exec <%s>
# pidfile <%s>
  nodaemon
  log /var/log/vpp/vpp.log
  full-coredump
  cli-listen /run/vpp/cli.sock
  gid vpp
}

acl-plugin {
# connection hash <buckets <%d>|memory <memory_size>
# connection count max<%d>
# main heap size <memory_size>
# hash lookup heap size <memory_size>
# hash lookup hash <buckets <%d>|memory <memory_size>>
# use tuple merge <%d>
# tuple merge split threshold <%d>
# reclassify sessions <%d>

}

api-queue {
# len[gth] <%d >= 1024>


}

api-segment {
## prefix <chroot_path>
## uid <uid>
## gid <gid>
## baseva <global_memory_baseva:%llx>
## global-size <global_memory_size:%lld[M|G]>
## global-pvt-heap-size <%lld[M|G]>
## api-pvt-heap-size <%lld[M|G]>
## api-size <%lld[M|G]>
## uid <username>
  gid vpp
}

api-trace {
## This stanza controls binary API tracing. Unless there is a very strong reason,
## please leave this feature enabled.
  on
## Additional parameters:
##
## To set the number of binary API trace records in the circular buffer, configure nitems
##
## nitems <nnn>
##
## To save the api message table decode tables, configure a filename. Results in /tmp/<filename>
## Very handy for understanding api message changes between versions, identifying missing
## plugins, and so forth.
##
## save-api-table <filename>
}

buffers {
## memory-size-in-mb <%d>
}

cj {
   ## Circular Journal
   # on
   # records <%d>
}

cpu {
	## In the VPP there is one main thread and optionally the user can create worker(s)
	## The main thread and worker thread(s) can be pinned to CPU core(s) manually or automatically

	## Manual pinning of thread(s) to CPU core(s)

	## Set logical CPU core where main thread runs, if main core is not set
	## VPP will use core 1 if available
	# main-core 1

	## Set logical CPU core(s) where worker threads are running
	# corelist-workers 2-3,18-19

	## Automatic pinning of thread(s) to CPU core(s)

	## Sets number of CPU core(s) to be skipped (1 ... N-1)
	## Skipped CPU core(s) are not used for pinning main thread and working thread(s).
	## The main thread is automatically pinned to the first available CPU core and worker(s)
	## are pinned to next free CPU core(s) after core assigned to main thread
	# skip-cores 4

	## Specify a number of workers to be created
	## Workers are pinned to N consecutive CPU cores while skipping "skip-cores" CPU core(s)
	## and main thread's CPU core
	# workers 2

	## Set scheduling policy and priority of main and worker threads

	## Scheduling policy options are: other (SCHED_OTHER), batch (SCHED_BATCH)
	## idle (SCHED_IDLE), fifo (SCHED_FIFO), rr (SCHED_RR)
	# scheduler-policy fifo

	## Scheduling priority is used only for "real-time policies (fifo and rr),
	## and has to be in the range of priorities supported for a particular policy
	# scheduler-priority 50

	# use-pthreads
	# thread-prefix <"prefix">
	# coremask-<%s> <bitmap_mask>
	# <name:%s> <count:%u>
}
dns {
# max-cache-size <65535>
# max-ttl <86400 seconds>

}

# dpdk {
    # no-hugetlb

	## Change default settings for all interfaces
	# dev default {
		## Number of receive queues, enables RSS
		## Default is 1
		# num-rx-queues 3

		## Number of transmit queues, Default is equal
		## to number of worker threads or 1 if no workers treads
		# num-tx-queues 3

		## Number of descriptors in transmit and receive rings
		## increasing or reducing number can impact performance
		## Default is 1024 for both rx and tx
		# num-rx-desc 512
		# num-tx-desc 512

		## VLAN strip offload mode for interface
		## Default is off
		# vlan-strip-offload on
	# }

	## Whitelist specific interface by specifying PCI address
	# dev 0000:02:00.0

	## Blacklist specific device type by specifying PCI vendor:device
        ## Whitelist entries take precedence
	# blacklist 8086:10fb

	## Set interface name
	# dev 0000:02:00.1 {
	#	name eth0
	# }

	## Whitelist specific interface by specifying PCI address and in
	## addition specify custom parameters for this interface
	# dev 0000:02:00.1 {
	#	num-rx-queues 2
	# }

	## Specify bonded interface and its slaves via PCI addresses
	##
	## Bonded interface in XOR load balance mode (mode 2) with L3 and L4 headers
	# vdev eth_bond0,mode=2,slave=0000:02:00.0,slave=0000:03:00.0,xmit_policy=l34
	# vdev eth_bond1,mode=2,slave=0000:02:00.1,slave=0000:03:00.1,xmit_policy=l34
	##
	## Bonded interface in Active-Back up mode (mode 1)
	# vdev eth_bond0,mode=1,slave=0000:02:00.0,slave=0000:03:00.0
	# vdev eth_bond1,mode=1,slave=0000:02:00.1,slave=0000:03:00.1

	## Change UIO driver used by VPP, Options are: igb_uio, vfio-pci,
	## uio_pci_generic or auto (default)
	# uio-driver vfio-pci

	## Disable multi-segment buffers, improves performance but
	## disables Jumbo MTU support
	# no-multi-seg

	## Increase number of buffers allocated, needed only in scenarios with
	## large number of interfaces and worker threads. Value is per CPU socket.
	## Default is 16384
	# num-mbufs 128000

	## Change hugepages allocation per-socket, needed only if there is need for
	## larger number of mbufs. Default is 256M on each detected CPU socket
	# socket-mem 2048,2048

	## Disables UDP / TCP TX checksum offload. Typically needed for use
	## faster vector PMDs (together with no-multi-seg)
	# no-tx-checksum-offload

	# enable-tcp-udp-checksum
	# decimal-interface-names
	# log-level <dpdk_log_level>
	# num-mem-channels <%d>
	# num-mbufs <%d>
	# uio-driver <%s>
	# socket-mem <%s> ! logs: "socket-mem argument is deprecated"
	# no-pci
	# no-vmbus
# }


ip {
# heap-size <memory_size>
}

ip6 {
# hash-buckets
# heap-size <memory_size>
}

l2learn {
# limit <%d>
}

l2tp {
# lookup-v6-src
# lookup-v6-src
# lookup-session-id
}

logging {
## size <%d>
## unthrottle-time <%d>
## default-log-level <vlib_log_level>
## default-syslog-log-level <vlib_log_level>
}

mactime {
# lookup-table-buckets <%u>
# lookup-table-memory <memory_size>
# timezone_offset <%d>
}

mc {
# interface  <%s>
# n-bytes <%d>
# max-n-bytes <%d>
# min-n-bytes <%d>
# seed <%d>
# window <%d>
# verbose
# no-validate
# min-delay <%f>
# max-delay <%f>
# no-delay
## number of packets to send.
# n-packets <%f>

}

nat {
# translation hash buckets %d
# translation hash memory %d
# user hash buckets %d
# user hash memory %d
# max translations per user %d
# outside VRF id %d
# outside ip6 VRF id %d
# inside VRF id %d
# static mapping only
# connection tracking
# deterministic
# nat64 bib hash buckets %d
# nat64 bib hash memory %d
# nat64 st hash buckets %d
# nat64 st hash memory %d
# out2in dpo
# dslite ce
# endpoint-dependent
}

oam {
# interval <%f>
# misses-allowed <%d>

}

# plugins {
	## Adjusting the plugin path depending on where the VPP plugins are
	#	path /ws/vpp/build-root/install-vpp-native/vpp/lib/vpp_plugins

	## Disable all plugins by default and then selectively enable specific plugins
	# plugin default { disable }
	# plugin dpdk_plugin.so { enable }
	# plugin acl_plugin.so { enable }

	## Enable all plugins by default and then selectively disable specific plugins
	# plugin dpdk_plugin.so { disable }
	# plugin acl_plugin.so { disable }
# }

punt {
# socket <%s>
}

session {
# event-queue-length < must be >= 2048>
# preallocated-sessions %d
# v4-session-table-buckets %d
# v4-halfopen-table-buckets %d
# v6-session-table-buckets %d
# v6-halfopen-table-buckets %d
# v4-session-table-memory <session_table_memory>

}

socksvr {
## setting default requires running VPP as root.
##  default
#   socket-name <%s>
}

statseg {
# socket-name <%s>
# default
# size <memory_size>
# per-node-counters <on|off>
}

tapcli {
# mtu <TAP_MTU_DEFAULT>
# disable
}

tcp {
# preallocated-connections <%d>
# preallocated-half-open-connections <%d>
# buffer-fail-fraction <%f>
# max-rx-fifo <memory_size>
# no-tx-pacing
# cc-algo <tcp_cc_algo>
}

tls {
# use-test-cert-in-ca
# ca-cert-path <%s>
}

tuntap {
# mtu <%d>
# enable
# disable
# ether[net]
# have-normal[-interface]
# name <%s>
}

vhost-user {
# coalesce-frames <%d>
# coalesce-time <%f>
# dont-dump-memory
}

vlib {
## memory-trace
## elog-events <%d>
## elog-post-mortem-dump
}
