/*
 * Copyright (c) 2018 Intel and/or its affiliates.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option version = "1.0.0";

/** \brief Configure dpi compile parameters and patterns
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param mode - compiler mode.
    @param flags_len - flags length
    @param flags - flags as a string
    @param pattern_len - pattern length
    @param pattern - pattern as a string
*/
autoreply define dpi_compile
{
  u32 client_index;
  u32 context;
  u32 mode;
  u8  flags_len;
  u8  flags[flags_len];
  u16 pattern_len;
  u8  pattern[pattern_len];
};

/** \brief Interface set dpi-bypass request
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param sw_if_index - interface used to reach neighbor
    @param is_ipv6 - if non-zero, enable ipv6-dpi-bypass, else ipv4-dpi-bypass
    @param enable - if non-zero enable, else disable
*/
define sw_interface_set_dpi_bypass
{
  u32 client_index;
  u32 context;
  u32 sw_if_index;
  u8 is_ipv6;
  u8 enable;
};

/** \brief Interface set dpi-bypass response
    @param context - sender context, to match reply w/ request
    @param retval - return code for the request
*/
define sw_interface_set_dpi_bypass_reply
{
  u32 context;
  i32 retval;
};

/*
 * Local Variables:
 * eval: (c-set-style "gnu")
 * End:
 */
