option version = "1.0.0";

/** \brief Configure Load-Balancer global parameters
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param ip4_src_address - IPv4 address to be used as source for IPv4 GRE traffic.
    @param ip6_src_address - IPv6 address to be used as source for IPv6 GRE traffic.
    @param n_sticky_buckets - Number of buckets *per worker thread* in the 
           established flow table (must be power of 2).
    @param flow_timeout - Time in seconds after which, if no packet is received
           for a given flow, the flow is removed from the established flow table.
*/
autoreply define lb_conf
{
  u32 client_index;
  u32 context;
  u32 ip4_src_address;
  u8 ip6_src_address[16];
  u32 sticky_buckets_per_core;
  u32 flow_timeout;
};

/** \brief Add a virtual address (or prefix)
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param ip_prefix - IP address (IPv4 in lower order 32 bits).
    @param prefix_length - IP prefix length (96 + 'IPv4 prefix length' for IPv4).
    @param encap - Encap is ip4 GRE(0) or ip6 GRE(1) or L3DSR(2).
    @param dscp - DSCP bit corresponding to VIP(applicable in L3DSR mode only).
    @param new_flows_table_length - Size of the new connections flow table used
           for this VIP (must be power of 2).
    @param is_del - The VIP should be removed.
*/
autoreply define lb_add_del_vip {
  u32 client_index;
  u32 context;
  u8 ip_prefix[16];
  u8 prefix_length;
  u8 encap;
  u8 dscp;
  u32 new_flows_table_length;
  u8 is_del;
};

/** \brief Add an application server for a given VIP
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param vip_ip_prefix - VIP IP address (IPv4 in lower order 32 bits).
    @param vip_ip_prefix - VIP IP prefix length (96 + 'IPv4 prefix length' for IPv4).
    @param as_address - The application server address (IPv4 in lower order 32 bits).
    @param is_del - The AS should be removed.
*/
autoreply define lb_add_del_as {
  u32 client_index;
  u32 context;
  u8 vip_ip_prefix[16];
  u8 vip_prefix_length;
  u8 as_address[16];
  u8 is_del;
};

/** \brief Define connection statistics structure
    @param ip_prefix - IP address (IPv4 in lower order 32 bits).
    @param prefix_length - IP prefix length (96 + 'IPv4 prefix length' for IPv4). only for vip stats.
    @param cur_conn - current live connections.
    @param max_conn - max live connections since last statistics reset.
    @param total_conn - aggregated live connections since last statistics reset.
*/
typeonly define lb_ip_addr
{
  u8 ip_prefix[16];
  u8 prefix_length;
};

/** \brief Request all vips
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
*/
define lb_get_vip_list{
  u32 client_index;
  u32 context;
};

/** \brief Reply all configured vips
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param retval - 0 means all ok
    @param vip_count - all vip numbers.
    @param vips - all vip addrs.
*/
define lb_get_vip_list_reply {
  u32 client_index;
  u32 context;
  i32 retval;
  u32 vip_count;
  vl_api_lb_ip_addr_t vips[vip_count];
};

/** \brief Define connection statistics structure
    @param ip_prefix - IP address (IPv4 in lower order 32 bits).
    @param prefix_length - IP prefix length (96 + 'IPv4 prefix length' for IPv4). only for vip stats.
    @param cur_conn - current live connections.
    @param max_conn - max live connections since last statistics reset.
    @param total_conn - aggregated live connections since last statistics reset.
*/
typeonly define lb_conn_count
{
  u8 ip_prefix[16];
  u8 prefix_length;
  u64 cur_conn;
  u64 max_conn;
  u64 total_conn;
};

/** \brief Request connection numbers per vip and per-as
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param ip_prefix - VIP address (IPv4 in lower order 32 bits).
    @param prefix_length - VIP prefix length (96 + 'IPv4 prefix length' for IPv4).
*/
define lb_get_vip_conn {
  u32 client_index;
  u32 context;
  u8 ip_prefix[16];
  u8 prefix_length;
};

/** \brief Reply connection numbers per vip and per-as
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param retval - 0 means all ok
    @param vip_conn - connection stats per vip
    @param as_count - as numbers associated with this vip.
    @param as_conns - connection stats per as
*/
define lb_get_vip_conn_reply {
  u32 client_index;
  u32 context;
  i32 retval;
  vl_api_lb_conn_count_t vip_conn;
  u32 as_count;
  vl_api_lb_conn_count_t as_conns[as_count];
};
