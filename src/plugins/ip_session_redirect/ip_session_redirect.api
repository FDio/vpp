/*
 * Copyright (c) 2021 Cisco and/or its affiliates.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option version = "0.1.0";
import "vnet/interface_types.api";
import "vnet/fib/fib_types.api";

/** \brief
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param table_index - classify table index
    @param match - classify session match
    @param n_paths - number of paths
    @param paths - the paths of the redirect
*/

define ip_session_redirect_add
{
  u32 client_index;
  u32 context;

  u32 table_index;
  u8 match[80];
  u8 n_paths;
  vl_api_fib_path_t paths[n_paths];

  option vat_help = "table <index> match <match> via <path>";
  option status="in_progress";
};

/** \brief
    @param context - sender context, to match reply w/ request
    @param retval - return value for request
    @param index - index of the new session redirect rule
*/

define ip_session_redirect_add_reply
{
  u32 context;
  i32 retval;

  u32 index;

  option status="in_progress";
};

/** \brief
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param index - session redirect rule index
*/

autoreply define ip_session_redirect_del
{
  u32 client_index;
  u32 context;

  u32 index;

  option vat_help = "<index>";
  option status="in_progress";
};

/** \brief
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param sw_if_index - interface index
    @param table_index - classifier table index
    @param is_add - true = add, false = del
    @param is_ip4 - true = ip4, false = ip6
*/

autoreply define ip_session_redirect_punt_add_del
{
  u32 client_index;
  u32 context;

  u32 sw_if_index;
  u32 table_index;
  bool is_add;
  bool is_ip4;

  option vat_help = "[add|del] [ip4|ip6] <interface> table <index>";
  option status="in_progress";
};

/*
 * Local Variables:
 * eval: (c-set-style "gnu")
 * End:
 */
