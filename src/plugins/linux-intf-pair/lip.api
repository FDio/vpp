/* Hey Emacs use -*- mode: C -*- */
/*
 * Copyright (c) 2016 Cisco and/or its affiliates.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** \file
    This file defines the vpp control-plane API messages
    used to control the LIP plugin
*/

option version = "1.0.0";
import "vnet/interface_types.api";

/** \brief Get the plugin version
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
*/
define lip_plugin_get_version
{
  u32 client_index;
  u32 context;
};

/** \brief Reply to get the plugin version
    @param context - returned sender context, to match reply w/ request
    @param major - Incremented every time a known breaking behavior change is introduced
    @param minor - Incremented with small changes, may be used to avoid buggy versions
*/
define lip_plugin_get_version_reply
{
  u32 context;
  u32 major;
  u32 minor;
};

/** \brief A description of a Host-Phy pair
 */
typedef lip
{
  vl_api_interface_index_t host_sw_if_index;
  vl_api_interface_index_t phy_sw_if_index;
};

/** \brief A description of an LIP policy
    @param is_add Is this the addition or removal of paths from the policy
           If the policy does not exist it is created. If the last path
           Is being removed, the policy is deleted
    @param policy The policy
 */
autoreply define lip_add_del
{
  u32 client_index;
  u32 context;
  u8 is_add;
  vl_api_lip_t pair;
};

/** \brief Policy description returned in the dump
 */
define lip_details
{
  u32 context;
  vl_api_lip_t pair;
};

/** \brief Dump all LIPs
 */
define lip_dump
{
  u32 client_index;
  u32 context;
};
