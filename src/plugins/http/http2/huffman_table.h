/* SPDX-License-Identifier: Apache-2.0
 * Copyright(c) 2025 Cisco Systems, Inc.
 */

/* generated by mk_huffman_table.py */

#ifndef SRC_PLUGINS_HTTP_HUFFMAN_TABLE_H_
#define SRC_PLUGINS_HTTP_HUFFMAN_TABLE_H_

#include <vppinfra/types.h>

typedef struct
{
  u8 code_len;
  u32 code;
} hpack_huffman_symbol_t;

static hpack_huffman_symbol_t huff_sym_table[] = {
  { 13, 0x1ff8 },    { 23, 0x7fffd8 },	 { 28, 0xfffffe2 },  { 28, 0xfffffe3 },
  { 28, 0xfffffe4 }, { 28, 0xfffffe5 },	 { 28, 0xfffffe6 },  { 28, 0xfffffe7 },
  { 28, 0xfffffe8 }, { 24, 0xffffea },	 { 30, 0x3ffffffc }, { 28, 0xfffffe9 },
  { 28, 0xfffffea }, { 30, 0x3ffffffd }, { 28, 0xfffffeb },  { 28, 0xfffffec },
  { 28, 0xfffffed }, { 28, 0xfffffee },	 { 28, 0xfffffef },  { 28, 0xffffff0 },
  { 28, 0xffffff1 }, { 28, 0xffffff2 },	 { 30, 0x3ffffffe }, { 28, 0xffffff3 },
  { 28, 0xffffff4 }, { 28, 0xffffff5 },	 { 28, 0xffffff6 },  { 28, 0xffffff7 },
  { 28, 0xffffff8 }, { 28, 0xffffff9 },	 { 28, 0xffffffa },  { 28, 0xffffffb },
  { 6, 0x14 },	     { 10, 0x3f8 },	 { 10, 0x3f9 },	     { 12, 0xffa },
  { 13, 0x1ff9 },    { 6, 0x15 },	 { 8, 0xf8 },	     { 11, 0x7fa },
  { 10, 0x3fa },     { 10, 0x3fb },	 { 8, 0xf9 },	     { 11, 0x7fb },
  { 8, 0xfa },	     { 6, 0x16 },	 { 6, 0x17 },	     { 6, 0x18 },
  { 5, 0x0 },	     { 5, 0x1 },	 { 5, 0x2 },	     { 6, 0x19 },
  { 6, 0x1a },	     { 6, 0x1b },	 { 6, 0x1c },	     { 6, 0x1d },
  { 6, 0x1e },	     { 6, 0x1f },	 { 7, 0x5c },	     { 8, 0xfb },
  { 15, 0x7ffc },    { 6, 0x20 },	 { 12, 0xffb },	     { 10, 0x3fc },
  { 13, 0x1ffa },    { 6, 0x21 },	 { 7, 0x5d },	     { 7, 0x5e },
  { 7, 0x5f },	     { 7, 0x60 },	 { 7, 0x61 },	     { 7, 0x62 },
  { 7, 0x63 },	     { 7, 0x64 },	 { 7, 0x65 },	     { 7, 0x66 },
  { 7, 0x67 },	     { 7, 0x68 },	 { 7, 0x69 },	     { 7, 0x6a },
  { 7, 0x6b },	     { 7, 0x6c },	 { 7, 0x6d },	     { 7, 0x6e },
  { 7, 0x6f },	     { 7, 0x70 },	 { 7, 0x71 },	     { 7, 0x72 },
  { 8, 0xfc },	     { 7, 0x73 },	 { 8, 0xfd },	     { 13, 0x1ffb },
  { 19, 0x7fff0 },   { 13, 0x1ffc },	 { 14, 0x3ffc },     { 6, 0x22 },
  { 15, 0x7ffd },    { 5, 0x3 },	 { 6, 0x23 },	     { 5, 0x4 },
  { 6, 0x24 },	     { 5, 0x5 },	 { 6, 0x25 },	     { 6, 0x26 },
  { 6, 0x27 },	     { 5, 0x6 },	 { 7, 0x74 },	     { 7, 0x75 },
  { 6, 0x28 },	     { 6, 0x29 },	 { 6, 0x2a },	     { 5, 0x7 },
  { 6, 0x2b },	     { 7, 0x76 },	 { 6, 0x2c },	     { 5, 0x8 },
  { 5, 0x9 },	     { 6, 0x2d },	 { 7, 0x77 },	     { 7, 0x78 },
  { 7, 0x79 },	     { 7, 0x7a },	 { 7, 0x7b },	     { 15, 0x7ffe },
  { 11, 0x7fc },     { 14, 0x3ffd },	 { 13, 0x1ffd },     { 28, 0xffffffc },
  { 20, 0xfffe6 },   { 22, 0x3fffd2 },	 { 20, 0xfffe7 },    { 20, 0xfffe8 },
  { 22, 0x3fffd3 },  { 22, 0x3fffd4 },	 { 22, 0x3fffd5 },   { 23, 0x7fffd9 },
  { 22, 0x3fffd6 },  { 23, 0x7fffda },	 { 23, 0x7fffdb },   { 23, 0x7fffdc },
  { 23, 0x7fffdd },  { 23, 0x7fffde },	 { 24, 0xffffeb },   { 23, 0x7fffdf },
  { 24, 0xffffec },  { 24, 0xffffed },	 { 22, 0x3fffd7 },   { 23, 0x7fffe0 },
  { 24, 0xffffee },  { 23, 0x7fffe1 },	 { 23, 0x7fffe2 },   { 23, 0x7fffe3 },
  { 23, 0x7fffe4 },  { 21, 0x1fffdc },	 { 22, 0x3fffd8 },   { 23, 0x7fffe5 },
  { 22, 0x3fffd9 },  { 23, 0x7fffe6 },	 { 23, 0x7fffe7 },   { 24, 0xffffef },
  { 22, 0x3fffda },  { 21, 0x1fffdd },	 { 20, 0xfffe9 },    { 22, 0x3fffdb },
  { 22, 0x3fffdc },  { 23, 0x7fffe8 },	 { 23, 0x7fffe9 },   { 21, 0x1fffde },
  { 23, 0x7fffea },  { 22, 0x3fffdd },	 { 22, 0x3fffde },   { 24, 0xfffff0 },
  { 21, 0x1fffdf },  { 22, 0x3fffdf },	 { 23, 0x7fffeb },   { 23, 0x7fffec },
  { 21, 0x1fffe0 },  { 21, 0x1fffe1 },	 { 22, 0x3fffe0 },   { 21, 0x1fffe2 },
  { 23, 0x7fffed },  { 22, 0x3fffe1 },	 { 23, 0x7fffee },   { 23, 0x7fffef },
  { 20, 0xfffea },   { 22, 0x3fffe2 },	 { 22, 0x3fffe3 },   { 22, 0x3fffe4 },
  { 23, 0x7ffff0 },  { 22, 0x3fffe5 },	 { 22, 0x3fffe6 },   { 23, 0x7ffff1 },
  { 26, 0x3ffffe0 }, { 26, 0x3ffffe1 },	 { 20, 0xfffeb },    { 19, 0x7fff1 },
  { 22, 0x3fffe7 },  { 23, 0x7ffff2 },	 { 22, 0x3fffe8 },   { 25, 0x1ffffec },
  { 26, 0x3ffffe2 }, { 26, 0x3ffffe3 },	 { 26, 0x3ffffe4 },  { 27, 0x7ffffde },
  { 27, 0x7ffffdf }, { 26, 0x3ffffe5 },	 { 24, 0xfffff1 },   { 25, 0x1ffffed },
  { 19, 0x7fff2 },   { 21, 0x1fffe3 },	 { 26, 0x3ffffe6 },  { 27, 0x7ffffe0 },
  { 27, 0x7ffffe1 }, { 26, 0x3ffffe7 },	 { 27, 0x7ffffe2 },  { 24, 0xfffff2 },
  { 21, 0x1fffe4 },  { 21, 0x1fffe5 },	 { 26, 0x3ffffe8 },  { 26, 0x3ffffe9 },
  { 28, 0xffffffd }, { 27, 0x7ffffe3 },	 { 27, 0x7ffffe4 },  { 27, 0x7ffffe5 },
  { 20, 0xfffec },   { 24, 0xfffff3 },	 { 20, 0xfffed },    { 21, 0x1fffe6 },
  { 22, 0x3fffe9 },  { 21, 0x1fffe7 },	 { 21, 0x1fffe8 },   { 23, 0x7ffff3 },
  { 22, 0x3fffea },  { 22, 0x3fffeb },	 { 25, 0x1ffffee },  { 25, 0x1ffffef },
  { 24, 0xfffff4 },  { 24, 0xfffff5 },	 { 26, 0x3ffffea },  { 23, 0x7ffff4 },
  { 26, 0x3ffffeb }, { 27, 0x7ffffe6 },	 { 26, 0x3ffffec },  { 26, 0x3ffffed },
  { 27, 0x7ffffe7 }, { 27, 0x7ffffe8 },	 { 27, 0x7ffffe9 },  { 27, 0x7ffffea },
  { 27, 0x7ffffeb }, { 28, 0xffffffe },	 { 27, 0x7ffffec },  { 27, 0x7ffffed },
  { 27, 0x7ffffee }, { 27, 0x7ffffef },	 { 27, 0x7fffff0 },  { 26, 0x3ffffee },
};

typedef struct
{
  u8 symbol;
  u8 code_len;
} hpack_huffman_code_t;

static hpack_huffman_code_t huff_code_table_fast[] = {
  { 0x30, 5 }, { 0x30, 5 }, { 0x30, 5 }, { 0x30, 5 }, { 0x30, 5 }, { 0x30, 5 },
  { 0x30, 5 }, { 0x30, 5 }, { 0x31, 5 }, { 0x31, 5 }, { 0x31, 5 }, { 0x31, 5 },
  { 0x31, 5 }, { 0x31, 5 }, { 0x31, 5 }, { 0x31, 5 }, { 0x32, 5 }, { 0x32, 5 },
  { 0x32, 5 }, { 0x32, 5 }, { 0x32, 5 }, { 0x32, 5 }, { 0x32, 5 }, { 0x32, 5 },
  { 0x61, 5 }, { 0x61, 5 }, { 0x61, 5 }, { 0x61, 5 }, { 0x61, 5 }, { 0x61, 5 },
  { 0x61, 5 }, { 0x61, 5 }, { 0x63, 5 }, { 0x63, 5 }, { 0x63, 5 }, { 0x63, 5 },
  { 0x63, 5 }, { 0x63, 5 }, { 0x63, 5 }, { 0x63, 5 }, { 0x65, 5 }, { 0x65, 5 },
  { 0x65, 5 }, { 0x65, 5 }, { 0x65, 5 }, { 0x65, 5 }, { 0x65, 5 }, { 0x65, 5 },
  { 0x69, 5 }, { 0x69, 5 }, { 0x69, 5 }, { 0x69, 5 }, { 0x69, 5 }, { 0x69, 5 },
  { 0x69, 5 }, { 0x69, 5 }, { 0x6F, 5 }, { 0x6F, 5 }, { 0x6F, 5 }, { 0x6F, 5 },
  { 0x6F, 5 }, { 0x6F, 5 }, { 0x6F, 5 }, { 0x6F, 5 }, { 0x73, 5 }, { 0x73, 5 },
  { 0x73, 5 }, { 0x73, 5 }, { 0x73, 5 }, { 0x73, 5 }, { 0x73, 5 }, { 0x73, 5 },
  { 0x74, 5 }, { 0x74, 5 }, { 0x74, 5 }, { 0x74, 5 }, { 0x74, 5 }, { 0x74, 5 },
  { 0x74, 5 }, { 0x74, 5 }, { 0x20, 6 }, { 0x20, 6 }, { 0x20, 6 }, { 0x20, 6 },
  { 0x25, 6 }, { 0x25, 6 }, { 0x25, 6 }, { 0x25, 6 }, { 0x2D, 6 }, { 0x2D, 6 },
  { 0x2D, 6 }, { 0x2D, 6 }, { 0x2E, 6 }, { 0x2E, 6 }, { 0x2E, 6 }, { 0x2E, 6 },
  { 0x2F, 6 }, { 0x2F, 6 }, { 0x2F, 6 }, { 0x2F, 6 }, { 0x33, 6 }, { 0x33, 6 },
  { 0x33, 6 }, { 0x33, 6 }, { 0x34, 6 }, { 0x34, 6 }, { 0x34, 6 }, { 0x34, 6 },
  { 0x35, 6 }, { 0x35, 6 }, { 0x35, 6 }, { 0x35, 6 }, { 0x36, 6 }, { 0x36, 6 },
  { 0x36, 6 }, { 0x36, 6 }, { 0x37, 6 }, { 0x37, 6 }, { 0x37, 6 }, { 0x37, 6 },
  { 0x38, 6 }, { 0x38, 6 }, { 0x38, 6 }, { 0x38, 6 }, { 0x39, 6 }, { 0x39, 6 },
  { 0x39, 6 }, { 0x39, 6 }, { 0x3D, 6 }, { 0x3D, 6 }, { 0x3D, 6 }, { 0x3D, 6 },
  { 0x41, 6 }, { 0x41, 6 }, { 0x41, 6 }, { 0x41, 6 }, { 0x5F, 6 }, { 0x5F, 6 },
  { 0x5F, 6 }, { 0x5F, 6 }, { 0x62, 6 }, { 0x62, 6 }, { 0x62, 6 }, { 0x62, 6 },
  { 0x64, 6 }, { 0x64, 6 }, { 0x64, 6 }, { 0x64, 6 }, { 0x66, 6 }, { 0x66, 6 },
  { 0x66, 6 }, { 0x66, 6 }, { 0x67, 6 }, { 0x67, 6 }, { 0x67, 6 }, { 0x67, 6 },
  { 0x68, 6 }, { 0x68, 6 }, { 0x68, 6 }, { 0x68, 6 }, { 0x6C, 6 }, { 0x6C, 6 },
  { 0x6C, 6 }, { 0x6C, 6 }, { 0x6D, 6 }, { 0x6D, 6 }, { 0x6D, 6 }, { 0x6D, 6 },
  { 0x6E, 6 }, { 0x6E, 6 }, { 0x6E, 6 }, { 0x6E, 6 }, { 0x70, 6 }, { 0x70, 6 },
  { 0x70, 6 }, { 0x70, 6 }, { 0x72, 6 }, { 0x72, 6 }, { 0x72, 6 }, { 0x72, 6 },
  { 0x75, 6 }, { 0x75, 6 }, { 0x75, 6 }, { 0x75, 6 }, { 0x3A, 7 }, { 0x3A, 7 },
  { 0x42, 7 }, { 0x42, 7 }, { 0x43, 7 }, { 0x43, 7 }, { 0x44, 7 }, { 0x44, 7 },
  { 0x45, 7 }, { 0x45, 7 }, { 0x46, 7 }, { 0x46, 7 }, { 0x47, 7 }, { 0x47, 7 },
  { 0x48, 7 }, { 0x48, 7 }, { 0x49, 7 }, { 0x49, 7 }, { 0x4A, 7 }, { 0x4A, 7 },
  { 0x4B, 7 }, { 0x4B, 7 }, { 0x4C, 7 }, { 0x4C, 7 }, { 0x4D, 7 }, { 0x4D, 7 },
  { 0x4E, 7 }, { 0x4E, 7 }, { 0x4F, 7 }, { 0x4F, 7 }, { 0x50, 7 }, { 0x50, 7 },
  { 0x51, 7 }, { 0x51, 7 }, { 0x52, 7 }, { 0x52, 7 }, { 0x53, 7 }, { 0x53, 7 },
  { 0x54, 7 }, { 0x54, 7 }, { 0x55, 7 }, { 0x55, 7 }, { 0x56, 7 }, { 0x56, 7 },
  { 0x57, 7 }, { 0x57, 7 }, { 0x59, 7 }, { 0x59, 7 }, { 0x6A, 7 }, { 0x6A, 7 },
  { 0x6B, 7 }, { 0x6B, 7 }, { 0x71, 7 }, { 0x71, 7 }, { 0x76, 7 }, { 0x76, 7 },
  { 0x77, 7 }, { 0x77, 7 }, { 0x78, 7 }, { 0x78, 7 }, { 0x79, 7 }, { 0x79, 7 },
  { 0x7A, 7 }, { 0x7A, 7 }, { 0x26, 8 }, { 0x2A, 8 }, { 0x2C, 8 }, { 0x3B, 8 },
  { 0x58, 8 }, { 0x5A, 8 }, { 0x00, 0 }, { 0x00, 0 },
};

typedef struct
{
  u32 first_code;
  u8 code_len;
  u8 symbols[29];
} hpack_huffman_group_t;

/* clang-format off */

static hpack_huffman_group_t huff_code_table_slow[] = {
  {
    0x3f8, /* first_code */
    10, /* code_len */
    {
      0x21, 0x22, 0x28, 0x29, 0x3F,
    } /* symbols */
  },
  {
    0x7fa, /* first_code */
    11, /* code_len */
    {
      0x27, 0x2B, 0x7C,
    } /* symbols */
  },
  {
    0xffa, /* first_code */
    12, /* code_len */
    {
      0x23, 0x3E,
    } /* symbols */
  },
  {
    0x1ff8, /* first_code */
    13, /* code_len */
    {
      0x00, 0x24, 0x40, 0x5B, 0x5D, 0x7E,
    } /* symbols */
  },
  {
    0x3ffc, /* first_code */
    14, /* code_len */
    {
      0x5E, 0x7D,
    } /* symbols */
  },
  {
    0x7ffc, /* first_code */
    15, /* code_len */
    {
      0x3C, 0x60, 0x7B,
    } /* symbols */
  },
  {
    0x7fff0, /* first_code */
    19, /* code_len */
    {
      0x5C, 0xC3, 0xD0,
    } /* symbols */
  },
  {
    0xfffe6, /* first_code */
    20, /* code_len */
    {
      0x80, 0x82, 0x83, 0xA2, 0xB8, 0xC2, 0xE0, 0xE2,
    } /* symbols */
  },
  {
    0x1fffdc, /* first_code */
    21, /* code_len */
    {
      0x99, 0xA1, 0xA7, 0xAC, 0xB0, 0xB1, 0xB3, 0xD1, 0xD8, 0xD9,
      0xE3, 0xE5, 0xE6,
    } /* symbols */
  },
  {
    0x3fffd2, /* first_code */
    22, /* code_len */
    {
      0x81, 0x84, 0x85, 0x86, 0x88, 0x92, 0x9A, 0x9C, 0xA0, 0xA3,
      0xA4, 0xA9, 0xAA, 0xAD, 0xB2, 0xB5, 0xB9, 0xBA, 0xBB, 0xBD,
      0xBE, 0xC4, 0xC6, 0xE4, 0xE8, 0xE9,
    } /* symbols */
  },
  {
    0x7fffd8, /* first_code */
    23, /* code_len */
    {
      0x01, 0x87, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8F, 0x93, 0x95,
      0x96, 0x97, 0x98, 0x9B, 0x9D, 0x9E, 0xA5, 0xA6, 0xA8, 0xAE,
      0xAF, 0xB4, 0xB6, 0xB7, 0xBC, 0xBF, 0xC5, 0xE7, 0xEF,
    } /* symbols */
  },
  {
    0xffffea, /* first_code */
    24, /* code_len */
    {
      0x09, 0x8E, 0x90, 0x91, 0x94, 0x9F, 0xAB, 0xCE, 0xD7, 0xE1,
      0xEC, 0xED,
    } /* symbols */
  },
  {
    0x1ffffec, /* first_code */
    25, /* code_len */
    {
      0xC7, 0xCF, 0xEA, 0xEB,
    } /* symbols */
  },
  {
    0x3ffffe0, /* first_code */
    26, /* code_len */
    {
      0xC0, 0xC1, 0xC8, 0xC9, 0xCA, 0xCD, 0xD2, 0xD5, 0xDA, 0xDB,
      0xEE, 0xF0, 0xF2, 0xF3, 0xFF,
    } /* symbols */
  },
  {
    0x7ffffde, /* first_code */
    27, /* code_len */
    {
      0xCB, 0xCC, 0xD3, 0xD4, 0xD6, 0xDD, 0xDE, 0xDF, 0xF1, 0xF4,
      0xF5, 0xF6, 0xF7, 0xF8, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE,
    } /* symbols */
  },
  {
    0xfffffe2, /* first_code */
    28, /* code_len */
    {
      0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x0B, 0x0C, 0x0E,
      0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x17, 0x18, 0x19,
      0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x7F, 0xDC, 0xF9,
    } /* symbols */
  },
  {
    0x3ffffffc, /* first_code */
    30, /* code_len */
    {
      0x0A, 0x0D, 0x16,
    } /* symbols */
  },
};

/* clang format-on */

always_inline hpack_huffman_group_t *
hpack_huffman_get_group (u32 value)
{
  if (value < 0xFF400000)
    return &huff_code_table_slow[0];
  else if (value < 0xFFA00000)
    return &huff_code_table_slow[1];
  else if (value < 0xFFC00000)
    return &huff_code_table_slow[2];
  else if (value < 0xFFF00000)
    return &huff_code_table_slow[3];
  else if (value < 0xFFF80000)
    return &huff_code_table_slow[4];
  else if (value < 0xFFFE0000)
    return &huff_code_table_slow[5];
  else if (value < 0xFFFE6000)
    return &huff_code_table_slow[6];
  else if (value < 0xFFFEE000)
    return &huff_code_table_slow[7];
  else if (value < 0xFFFF4800)
    return &huff_code_table_slow[8];
  else if (value < 0xFFFFB000)
    return &huff_code_table_slow[9];
  else if (value < 0xFFFFEA00)
    return &huff_code_table_slow[10];
  else if (value < 0xFFFFF600)
    return &huff_code_table_slow[11];
  else if (value < 0xFFFFF800)
    return &huff_code_table_slow[12];
  else if (value < 0xFFFFFBC0)
    return &huff_code_table_slow[13];
  else if (value < 0xFFFFFE20)
    return &huff_code_table_slow[14];
  else if (value < 0xFFFFFFF0)
    return &huff_code_table_slow[15];
  else
    return &huff_code_table_slow[16];
}

#endif /* SRC_PLUGINS_HTTP_HUFFMAN_TABLE_H_ */
