{
  "comments": [
    {
      "key": {
        "uuid": "0991bc46_11c4acd3",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-01-23T06:30:30Z",
      "side": 1,
      "message": "We\u0027ll need a per session max fifo size.",
      "range": {
        "startLine": 424,
        "startChar": 31,
        "endLine": 424,
        "endChar": 40
      },
      "revId": "09a75295c0b92229e9cf8c9f2cd2402293d67c89",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d30bd0cc_c4645ef2",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-01-23T14:48:57Z",
      "side": 1,
      "message": "By \"per session\", do you mean the per-UE (IP endpoint) shared max fifo size?\nOr do you mean the per-TCP-session?",
      "parentUuid": "0991bc46_11c4acd3",
      "range": {
        "startLine": 424,
        "startChar": 31,
        "endLine": 424,
        "endChar": 40
      },
      "revId": "09a75295c0b92229e9cf8c9f2cd2402293d67c89",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c78141a1_017af0d7",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-01-23T15:40:44Z",
      "side": 1,
      "message": "Per session layer session. We\u0027ll have use cases that want extremely large fifos so we\u0027ll want to support those in a generic way. For instance, MCBU has a use case where they use 56MB fifos. \n\nAt attach time, we pass to the \"app sublayer\" a requested fifo size that gets stored into the segment manger properties. We could either interpret that as a max or as a \"start\". If the latter, we\u0027ll have to pass one more value at attach time. \n\nFor starters, we could simplify and just use macro defined very large value and then use fifo utilization \"dynamics\" to bound the growth.",
      "parentUuid": "d30bd0cc_c4645ef2",
      "range": {
        "startLine": 424,
        "startChar": 31,
        "endLine": 424,
        "endChar": 40
      },
      "revId": "09a75295c0b92229e9cf8c9f2cd2402293d67c89",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0090d480_394430b0",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 2
      },
      "lineNbr": 457,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-01-23T06:30:30Z",
      "side": 1,
      "message": "I think that most of these functions are better suited for the segment manager, since they interact a lot with the fifo segment. \n\nAlso, we\u0027ll have to guard the calls to these functions based on fifo \"utilization\", to avoid the churn of constantly grabbing all of these data structures.",
      "range": {
        "startLine": 457,
        "startChar": 0,
        "endLine": 457,
        "endChar": 28
      },
      "revId": "09a75295c0b92229e9cf8c9f2cd2402293d67c89",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21a8da37_627c43ef",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 2
      },
      "lineNbr": 457,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-01-23T14:48:57Z",
      "side": 1,
      "message": "Agree to move them to segment manager.\n\nSegment Manager doesn\u0027t have a pointer to app (application_t*). So I guess the function would be something like this. Right?\n  void\n  segment_manager_fifo_tuning_increase (segment_manager_t* sm,\n                                        svm_fifo_t* f,\n                                        application_t* app);\n\nI\u0027m not so sure what you mean by `based on fifo \"utilization\"`.\nAdopting the fifo-utilization as one of the factors is fine, but did you mean the fifo-utilization should be only one factor to determine fifo size change? If so, how can we reflect the memory pressure?\n\nIt would be possible to separate the logic into (1) fifo size update (based on current fifo-size, max-fifo-size, fifo utilization, and optional factors in a custom logic), and (2) max-fifo-size update (based on memory pressure).",
      "parentUuid": "0090d480_394430b0",
      "range": {
        "startLine": 457,
        "startChar": 0,
        "endLine": 457,
        "endChar": 28
      },
      "revId": "09a75295c0b92229e9cf8c9f2cd2402293d67c89",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ed86d52_3f383e5f",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 2
      },
      "lineNbr": 457,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-01-23T15:40:44Z",
      "side": 1,
      "message": "Segment manager has an app_wrk_index which it can use to retrieve the app worker and the application, if need be. Note that app_worker_t is not the application_t. The relationship is application_t has N app_worker_t. Although in the case of builtin-apps, like the proxy, the relationship is 1-1. \n\nI believe you only need the app on the custom fifo branch, so you could limit retrieval to that branch. \n\nMoreover, you could still keep the first part of the function here, and based on the flag, as you do lower, you could call an app_worker function that eventually asks the application to do the tuning. On the else branch you call the default segment manager tuning, which as far as I can tell does not need the app. \n\nAs for the utilization, I meant that in this function, if we detect that the session does not need a fifo update, e.g., utilization is under 50% or some other number, then segment_manager_fifo_tuning_increase should not be called. Similar logic for decrease, i.e., if utilization is over x%, we don\u0027t try to decrease. \n\nI guess I\u0027m suggesting to check cursize, max_deq (as you have them in the default functions) first and based on them decide what to do.",
      "parentUuid": "21a8da37_627c43ef",
      "range": {
        "startLine": 457,
        "startChar": 0,
        "endLine": 457,
        "endChar": 28
      },
      "revId": "09a75295c0b92229e9cf8c9f2cd2402293d67c89",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f916741_155f3727",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-01-23T15:40:44Z",
      "side": 1,
      "message": "Per comment above, this is actually the app_worker_t",
      "range": {
        "startLine": 466,
        "startChar": 23,
        "endLine": 466,
        "endChar": 57
      },
      "revId": "09a75295c0b92229e9cf8c9f2cd2402293d67c89",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a14044a_74a79412",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 2
      },
      "lineNbr": 1147,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-01-23T06:30:30Z",
      "side": 1,
      "message": "Move these to the application workers. That is, have the application workers set these flags, if needed, prior to notifying the applications about session creation events. \n\nIt feels more natural because they have a pointer to the app either way and it makes more sense for them to verify if the applications have requested special handling of the sessions",
      "range": {
        "startLine": 1143,
        "startChar": 0,
        "endLine": 1147,
        "endChar": 49
      },
      "revId": "09a75295c0b92229e9cf8c9f2cd2402293d67c89",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d223f67_6580a101",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 2
      },
      "lineNbr": 1147,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-01-23T14:48:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a14044a_74a79412",
      "range": {
        "startLine": 1143,
        "startChar": 0,
        "endLine": 1147,
        "endChar": 49
      },
      "revId": "09a75295c0b92229e9cf8c9f2cd2402293d67c89",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}