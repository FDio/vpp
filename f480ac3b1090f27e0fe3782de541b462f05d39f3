{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "32f36a48_d183cc70",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 2220
      },
      "writtenOn": "2023-03-16T10:15:54Z",
      "side": 1,
      "message": "Hi Ole,\nCould you please review this patch? It adds codegen of new rpc style, like:\n```\n  rpc lcp_itf_pair_get returns lcp_itf_pair_get_reply\n    stream lcp_itf_pair_details;\n```\n\n0. to vapi.hpp - new template class Service, which is basically a combination of Reply and Dump classes\n1. to —Å vapi - codegen of endianess methods for stream types\n2. to cpp vapi - codegen of new template\n\nHowever, it doesn\u0027t add the full support for C vapi, only for C++ (which I\u0027m extensively using). I hope that smb else will add the same thing for C vapi.",
      "revId": "f480ac3b1090f27e0fe3782de541b462f05d39f3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "194b1e43_01cfb02b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 2220
      },
      "writtenOn": "2023-03-16T10:23:49Z",
      "side": 1,
      "message": "Just realized I was wrong about c vapi, it doesn\u0027t add anything to it :) everything was generated properly.",
      "parentUuid": "32f36a48_d183cc70",
      "revId": "f480ac3b1090f27e0fe3782de541b462f05d39f3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24102019_68cfdb39",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 601
      },
      "writtenOn": "2023-05-08T10:56:02Z",
      "side": 1,
      "message": "would you like to give the code a go in the unit test? might be also a good example of usage for others. there is vapi_cpp_test for c++ code. vapi_c_test should not be required to modify if I understand correctly.",
      "revId": "f480ac3b1090f27e0fe3782de541b462f05d39f3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "663401a7_1591eb89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 2220
      },
      "writtenOn": "2023-05-10T14:29:07Z",
      "side": 1,
      "message": "Hello Klement,\nSure! In fact, I\u0027ve already written a simple UT, but still struggle how can I run it together with vpp. Do we have a make target for this?",
      "parentUuid": "24102019_68cfdb39",
      "revId": "f480ac3b1090f27e0fe3782de541b462f05d39f3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ae1fc46_6050b935",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 601
      },
      "writtenOn": "2023-05-10T17:55:24Z",
      "side": 1,
      "message": "Hi,\n\nthe C++ test code should go in src/vpp-api/vapi/vapi_cpp_test.cpp\n\nYou then run \n\nmake test[-debug] TEST\u003dvapi",
      "parentUuid": "663401a7_1591eb89",
      "revId": "f480ac3b1090f27e0fe3782de541b462f05d39f3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}