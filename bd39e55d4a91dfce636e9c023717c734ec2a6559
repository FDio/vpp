{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b63a1cd4_527a0b15",
        "filename": "src/vnet/ip/ip_frag.c",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 267
      },
      "writtenOn": "2023-02-22T21:39:59Z",
      "side": 1,
      "message": "a per-thread frag-ID would be better to save the atomic operation.",
      "revId": "bd39e55d4a91dfce636e9c023717c734ec2a6559",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2b5391d_e1b7f18a",
        "filename": "src/vnet/ip/ip_frag.c",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1737
      },
      "writtenOn": "2023-02-23T00:52:19Z",
      "side": 1,
      "message": "per-thread frag-ID may be not a good solution:\n1. frag-id only have 16 bit, thread id will waster 6-8 bit, so there may be so many duplicated frag packets in reass node if pps is very hight.\n2. fragment is a heavy operation, the effect of atomic is very small compare to it.",
      "parentUuid": "b63a1cd4_527a0b15",
      "revId": "bd39e55d4a91dfce636e9c023717c734ec2a6559",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "785ef611_6934a125",
        "filename": "src/vnet/ip/ip_frag.c",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 2919
      },
      "writtenOn": "2023-02-24T07:21:47Z",
      "side": 1,
      "message": "Maybe we do not need a  this running_fragment_id, get 16 bits Identification from the original ip header.Identification  is the unique value when the sender sends IP packets, and to copy this field to each partition after the packet is fragmented.",
      "parentUuid": "b2b5391d_e1b7f18a",
      "revId": "bd39e55d4a91dfce636e9c023717c734ec2a6559",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label.                         A minumum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bd39e55d4a91dfce636e9c023717c734ec2a6559",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bd39e55d4a91dfce636e9c023717c734ec2a6559",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}