{
  "comments": [
    {
      "key": {
        "uuid": "dc3de3ac_1031f561",
        "filename": "test/test_ipsec_ah.py",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 601
      },
      "writtenOn": "2017-12-14T12:45:15Z",
      "side": 1,
      "message": "please don\u0027t mention obvious class hierarchy, \u0027class TestIpsecAh(VppTestCase):\u0027 says it clearly\n\nalso, please move this code block where it belongs - into the class docstring itself, so that it looks like this:\n\nclass TestIpsecAh(VppTestCase):\n   \"\"\" \u003ctitle\u003e\n\n       \u003cdescription...\u003e\n   \"\"\"\n\nthat way it\u0027s where it needs to be and it\u0027ll also be attached to HTML documentation generated by sphinx in the correct place\n\ntest framework only uses first line of the docstring when running the testcase(s)",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 54
      },
      "revId": "bff8277a775af6e0c5f62ff620e716943009ca41",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac1fdcaf_56e80833",
        "filename": "test/test_ipsec_ah.py",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 601
      },
      "writtenOn": "2017-12-14T12:45:15Z",
      "side": 1,
      "message": "please change all these packet counts to 257\n\nthe reason for this is to make sure the graph node processes more than one frame and also odd number makes sure that both quad/double loop (if present) and single loop is tested",
      "range": {
        "startLine": 20,
        "startChar": 53,
        "endLine": 20,
        "endChar": 56
      },
      "revId": "bff8277a775af6e0c5f62ff620e716943009ca41",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f564bba1_5bb92a41",
        "filename": "test/test_ipsec_ah.py",
        "patchSetId": 3
      },
      "lineNbr": 264,
      "author": {
        "id": 601
      },
      "writtenOn": "2017-12-14T12:45:15Z",
      "side": 1,
      "message": "as all these packets are the same, could we please optimize this?\n\ne.g.\n\ndef gen_pkts(self, sw_intf, src, dst, count\u003d1):\n    return [Ether(src\u003dsw_intf.remote_mac, dst\u003dsw_intf.local_mac) /\n            IP(src\u003dsrc, dst\u003ddst) / ICMP() /\n            \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n            ] * count\n\nit also applies to other places/functions",
      "range": {
        "startLine": 256,
        "startChar": 0,
        "endLine": 264,
        "endChar": 25
      },
      "revId": "bff8277a775af6e0c5f62ff620e716943009ca41",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "594f5350_c6885297",
        "filename": "test/test_ipsec_ah.py",
        "patchSetId": 3
      },
      "lineNbr": 327,
      "author": {
        "id": 601
      },
      "writtenOn": "2017-12-14T12:45:15Z",
      "side": 1,
      "message": "using unittest.assert* methods or self.assert_* methods is preferred and also these tests should be split..\n\ne.g.\n\nself.assert_equal(decrypt_pkt.src, self.remote_pg1_lb_addr)\nself.assert_equal(decrypt_pkt.dst, self.remote_pg0_lb_addr)\n\nalso applies to different places\n\nthe advantage of this approach is that it prints a more detailed description instead of just \"AssertionError\"",
      "range": {
        "startLine": 325,
        "startChar": 16,
        "endLine": 327,
        "endChar": 63
      },
      "revId": "bff8277a775af6e0c5f62ff620e716943009ca41",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f703cd43_d40d6fe8",
        "filename": "test/test_ipsec_esp.py",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 601
      },
      "writtenOn": "2017-12-14T12:45:15Z",
      "side": 1,
      "message": "please don\u0027t mention obvious class hierarchy, \u0027class TestIpsecAh(VppTestCase):\u0027 says it clearly\n\nalso, please move this code block where it belongs - into the class docstring itself, so that it looks like this:\n\nclass TestIpsecEsp(VppTestCase):\n   \"\"\" \u003ctitle\u003e\n\n       \u003cdescription...\u003e\n   \"\"\"\n\nthat way it\u0027s where it needs to be and it\u0027ll also be attached to HTML documentation generated by sphinx in the correct place\n\ntest framework only uses first line of the docstring when running the testcase(s)",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 55
      },
      "revId": "bff8277a775af6e0c5f62ff620e716943009ca41",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e4f0519_c117dca1",
        "filename": "test/test_ipsec_esp.py",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 601
      },
      "writtenOn": "2017-12-14T12:45:15Z",
      "side": 1,
      "message": "please change all these packet counts to 257\n\nthe reason for this is to make sure the graph node processes more than one frame and also odd number makes sure that both quad/double loop (if present) and single loop is tested",
      "range": {
        "startLine": 20,
        "startChar": 54,
        "endLine": 20,
        "endChar": 57
      },
      "revId": "bff8277a775af6e0c5f62ff620e716943009ca41",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}