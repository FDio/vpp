{
  "comments": [
    {
      "key": {
        "uuid": "d5fc19fb_5faa4a7b",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 1
      },
      "lineNbr": 553,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T02:34:35Z",
      "side": 1,
      "message": "I suspect this could be replaced with: transport_max_tx_dequeue (tc) - tc-\u003esnd_nxt",
      "range": {
        "startLine": 553,
        "startChar": 0,
        "endLine": 553,
        "endChar": 32
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a47575d_ec402c4c",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 1
      },
      "lineNbr": 553,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-22T06:51:15Z",
      "side": 1,
      "message": "Oh yes. I added almost redundant function. Let me remove it.\nIt is equivalent to `transport_max_tx_dequeue (tc) - offset`.",
      "parentUuid": "d5fc19fb_5faa4a7b",
      "range": {
        "startLine": 553,
        "startChar": 0,
        "endLine": 553,
        "endChar": 32
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75de7091_6368de06",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 1
      },
      "lineNbr": 553,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T07:10:59Z",
      "side": 1,
      "message": "Thanks!",
      "parentUuid": "5a47575d_ec402c4c",
      "range": {
        "startLine": 553,
        "startChar": 0,
        "endLine": 553,
        "endChar": 32
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ab54c6b_5d69d695",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 1
      },
      "lineNbr": 553,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T07:11:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75de7091_6368de06",
      "range": {
        "startLine": 553,
        "startChar": 0,
        "endLine": 553,
        "endChar": 32
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c5241c2_ca31a86f",
        "filename": "src/vnet/tcp/tcp.c",
        "patchSetId": 1
      },
      "lineNbr": 312,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T22:57:03Z",
      "side": 1,
      "message": "Move the init function to tcp_rack.h/c and only call it when enabled/needed. Check where tcp_bt_init is called.",
      "range": {
        "startLine": 306,
        "startChar": 0,
        "endLine": 312,
        "endChar": 16
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5006b923_20435ce7",
        "filename": "src/vnet/tcp/tcp.c",
        "patchSetId": 1
      },
      "lineNbr": 312,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c5241c2_ca31a86f",
      "range": {
        "startLine": 306,
        "startChar": 0,
        "endLine": 312,
        "endChar": 16
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfab6bb4_2efc09d2",
        "filename": "src/vnet/tcp/tcp.c",
        "patchSetId": 1
      },
      "lineNbr": 1454,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T02:15:52Z",
      "side": 1,
      "message": "Could you push a patch with this now because it\u0027s broken on master?",
      "range": {
        "startLine": 1448,
        "startChar": 0,
        "endLine": 1454,
        "endChar": 41
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c367cbed_a423b293",
        "filename": "src/vnet/tcp/tcp.c",
        "patchSetId": 1
      },
      "lineNbr": 1454,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-22T06:51:15Z",
      "side": 1,
      "message": "Done:\nhttps://gerrit.fd.io/r/c/vpp/+/29590",
      "parentUuid": "dfab6bb4_2efc09d2",
      "range": {
        "startLine": 1448,
        "startChar": 0,
        "endLine": 1454,
        "endChar": 41
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91f57d88_b57245bd",
        "filename": "src/vnet/tcp/tcp.c",
        "patchSetId": 1
      },
      "lineNbr": 1454,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T07:10:59Z",
      "side": 1,
      "message": "Thanks!",
      "parentUuid": "c367cbed_a423b293",
      "range": {
        "startLine": 1448,
        "startChar": 0,
        "endLine": 1454,
        "endChar": 41
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04fe1c47_768fd5b5",
        "filename": "src/vnet/tcp/tcp.c",
        "patchSetId": 1
      },
      "lineNbr": 1454,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T07:11:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91f57d88_b57245bd",
      "range": {
        "startLine": 1448,
        "startChar": 0,
        "endLine": 1454,
        "endChar": 41
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ea520a5_8cd2ab3b",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "As much as possible let\u0027s avoid unneeded dependencies and empty changes (like the line lower)",
      "range": {
        "startLine": 58,
        "startChar": 17,
        "endLine": 58,
        "endChar": 39
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37666eee_5d6758e4",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ea520a5_8cd2ab3b",
      "range": {
        "startLine": 58,
        "startChar": 17,
        "endLine": 58,
        "endChar": 39
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1118387_073b7e48",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "Not neeeded",
      "range": {
        "startLine": 74,
        "startChar": 16,
        "endLine": 74,
        "endChar": 38
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c95cad0_4d648a1f",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1118387_073b7e48",
      "range": {
        "startLine": 74,
        "startChar": 16,
        "endLine": 74,
        "endChar": 38
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56573aa1_b4bd522e",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "Given that alloc doesn\u0027t need tc, I guess it can be removed",
      "range": {
        "startLine": 103,
        "startChar": 17,
        "endLine": 103,
        "endChar": 39
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d2d6329_bd9ffe9b",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56573aa1_b4bd522e",
      "range": {
        "startLine": 103,
        "startChar": 17,
        "endLine": 103,
        "endChar": 39
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "366692d7_b3bf4ffb",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "There\u0027s a copy on line 116: *ns \u003d *bts; So not needed",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 130,
        "endChar": 29
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a06bfaa_d26e7518",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "366692d7_b3bf4ffb",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 130,
        "endChar": 29
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "371d18d2_5e844107",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "Not needed",
      "range": {
        "startLine": 136,
        "startChar": 17,
        "endLine": 136,
        "endChar": 40
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fc57c7f_bda20a36",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "371d18d2_5e844107",
      "range": {
        "startLine": 136,
        "startChar": 17,
        "endLine": 136,
        "endChar": 40
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "180d26ed_5248395e",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "Interesting. If this is a bug, feel free to upstream it separately",
      "range": {
        "startLine": 143,
        "startChar": 1,
        "endLine": 143,
        "endChar": 57
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86b1cc6d_52c9da3d",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Sorry, this is another trace of my struggling of debug. Let me just remove this.\nProbably this is not needed. I will revisit this to check if such a tx_time tweak is needed.",
      "parentUuid": "180d26ed_5248395e",
      "range": {
        "startLine": 143,
        "startChar": 1,
        "endLine": 143,
        "endChar": 57
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0526a691_18891688",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "Not needed",
      "range": {
        "startLine": 207,
        "startChar": 19,
        "endLine": 207,
        "endChar": 42
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9739a28b_8c66b642",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0526a691_18891688",
      "range": {
        "startLine": 207,
        "startChar": 19,
        "endLine": 207,
        "endChar": 42
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb40f676_10ae3216",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "I assume you had more changes but at this point these are not needed",
      "range": {
        "startLine": 221,
        "startChar": 3,
        "endLine": 221,
        "endChar": 5
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b83ca39c_1488690f",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb40f676_10ae3216",
      "range": {
        "startLine": 221,
        "startChar": 3,
        "endLine": 221,
        "endChar": 5
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e154b22_c898ea6d",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-22T01:51:34Z",
      "side": 1,
      "message": "This is an allocation of a new BTS, and I suspect that the `flags` can be uninitialized value. So the assignment here should be \"\u003d\", instead of \"|\u003d\", in my opinion.",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5a5273e_b21f96b0",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "bt_alloc_sample does pool_get_zero (bt-\u003esamples, bts); So bts should be zeroed before the flags are set",
      "parentUuid": "5e154b22_c898ea6d",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52e4bcf8_98eae03a",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Thanks. let me revert this.",
      "parentUuid": "f5a5273e_b21f96b0",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56e20ea4_383f5d19",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-22T01:51:34Z",
      "side": 1,
      "message": "Before applying this change, the `tcp_bt_track_tx` extended the SACKED Tail-BTS with non-SACKED bytes. And (seemingly) it made the SACKED/non-SACKED management corrupted.",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fb5dbc5_c88d5606",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "Wow, quite the corner case. Could you push a patch with this change. Move the comment above. \n\nAlso, if you have the time it would be good to catch it with a unit test",
      "parentUuid": "56e20ea4_383f5d19",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c1e572b_1c46dd86",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "I will do. Thanks.",
      "parentUuid": "5fb5dbc5_c88d5606",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acfc8679_387a90d0",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 524,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "Could you add this with the other changes in a separate patch? Eventually all should ideally be unit tested or handed over to Patrick/Aidan for additional testing",
      "range": {
        "startLine": 524,
        "startChar": 6,
        "endLine": 524,
        "endChar": 46
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b34d5ea_a3834675",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 524,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "I will do. Thanks.",
      "parentUuid": "acfc8679_387a90d0",
      "range": {
        "startLine": 524,
        "startChar": 6,
        "endLine": 524,
        "endChar": 46
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b42abee_7b15462a",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 584,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "Is the editor fixing these? As a convention, although asymmetrical and not precisely always followed, we leave one liners without brackets (consume less vertical space). When pushing new code, it\u0027s better to avoid this simple changes",
      "range": {
        "startLine": 584,
        "startChar": 5,
        "endLine": 584,
        "endChar": 6
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f42eb9fd_47be4756",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 584,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Sorry. I had another line here for debug. Let me remove unnecessary brackets.",
      "parentUuid": "3b42abee_7b15462a",
      "range": {
        "startLine": 584,
        "startChar": 5,
        "endLine": 584,
        "endChar": 6
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d1d6d99_6c34973f",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 597,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "Is this only an optimization to minimize the number of samples? If yes, please add it to the separate patch(es)",
      "range": {
        "startLine": 597,
        "startChar": 2,
        "endLine": 597,
        "endChar": 38
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bde7df0d_cba317f5",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 597,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Excuse me. I added this section (line 597-622) with already-removed debug logging, to make sure the behavior on each condition, when I saw some problems around ByteTracker.\nI planned to add it temporary but I forgot to revert this change. Sorry.\nNow I\u0027m going to revert this.",
      "parentUuid": "2d1d6d99_6c34973f",
      "range": {
        "startLine": 597,
        "startChar": 2,
        "endLine": 597,
        "endChar": 38
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaaa0f73_b1bb8a5d",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 610,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "modulo arithmetic for these, i.e., seq_lt/gt and this should be mandatory because the while above stops when seq_leq (cur-\u003emax_seq, blk-\u003eend) doesn\u0027t hold, i.e., seq_gt(cur-\u003emax_seq, blk-\u003eend)\n\nAnd wrt to the comment lower, I think it should be prev[A:B] + cur[B:C] -\u003e prev[A:X] and cur[X:D]. The existing comment \"extend previous to include the newly sacked bytes\" already suggests this, at least to me ....",
      "range": {
        "startLine": 610,
        "startChar": 12,
        "endLine": 610,
        "endChar": 37
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6de890d_2c124fb1",
        "filename": "src/vnet/tcp/tcp_bt.c",
        "patchSetId": 1
      },
      "lineNbr": 610,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "aaaa0f73_b1bb8a5d",
      "range": {
        "startLine": 610,
        "startChar": 12,
        "endLine": 610,
        "endChar": 37
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "414fe3e1_2d6405c9",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 1
      },
      "lineNbr": 1122,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-22T01:51:34Z",
      "side": 1,
      "message": "I see this condition plays a role to prevent duplicate/redundant calls of `session_add_self_custom_tx_evt`. However, I found that the custom_tx event is canceled by some reason, whereas the `tcp_session_custom_tx` is not really called, so that TCP_CONN_RXT_PENDING flag is eternally ON. If such a case happens, the `tcp_session_custom_tx` will never been called and the transaction would stall.\nSo commenting-out this if-condition is a temporary workaround for now. Fixing the underlying problem (that custom_tx event is silently canceled) should be the correct approach.",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "571ef0f9_8db0f1fe",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 1
      },
      "lineNbr": 1122,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T15:43:51Z",
      "side": 1,
      "message": "Could be that with the recent changes tcp_session_custom_tx exits without clearing the flag.",
      "parentUuid": "414fe3e1_2d6405c9",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4a83766_070aa98f",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 1
      },
      "lineNbr": 1122,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T16:26:15Z",
      "side": 1,
      "message": "I bundled the first reply to this with the bt review. Let\u0027s deal with it after the first set of cleanups go in but, intuitively, it should not be needed.",
      "parentUuid": "571ef0f9_8db0f1fe",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e29a594_29b2528e",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 1
      },
      "lineNbr": 1122,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "OK. Let me check it again and revisit.",
      "parentUuid": "c4a83766_070aa98f",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a46174af_cdd78409",
        "filename": "src/vnet/tcp/tcp_timer.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T02:34:35Z",
      "side": 1,
      "message": "Haven\u0027t read the details but this doesn\u0027t look too good. As much as possible, let\u0027s avoid dependencies on session layer. That is, the timer code should not need to understand that there\u0027s such a thing as a session layer, if possible.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 33
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12fb278a_aba44657",
        "filename": "src/vnet/tcp/tcp_timer.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-22T06:51:15Z",
      "side": 1,
      "message": "session.h is included to use `transport_time_now`.\nBut I agree that having `expire_at` and updating it would be not a good idea at all.\n\nWhat alternative approach would you recommend to achieve \"if RTO timer is set, cancel it and set TLP timer with the same expiration time\"?\n\nOne approach would be to abolish the RTO (retransmit) timer and introduce a general timer, whose behavior would change upon another parameter.\n\nvoid\ntcp_timer_general_handler (tcp_connection_t * tc)\n{\n  if (tc-\u003etimer_mode \u003d\u003d TLP)\n    tcp_timer_tlp_handler (tc);\n  else if (tc-\u003etimer_mode \u003d\u003d REO)\n    tcp_timer_reo_handler (tc);\n  else if (tc-\u003etimer_mode \u003d\u003d RTO)\n    tcp_timer_retransmit_handler (tc);\n}",
      "parentUuid": "a46174af_cdd78409",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 33
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4322875c_ed37dc05",
        "filename": "src/vnet/tcp/tcp_timer.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T07:10:59Z",
      "side": 1,
      "message": "I might have to better understand how this works, i.e., read the code and maybe have a chat afterwards. What do other implementations do?",
      "parentUuid": "12fb278a_aba44657",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 33
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77945855_77ef1b56",
        "filename": "src/vnet/tcp/tcp_timer.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Each implementation of FreeBSD and Linux is sharing a single timer and the behavior at the timer expiration is switched by conditions.",
      "parentUuid": "4322875c_ed37dc05",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 33
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85775f28_c9ec6af6",
        "filename": "src/vnet/tcp/tcp_timer.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-22T01:51:34Z",
      "side": 1,
      "message": "The RACK specification defines that TLP (Tail Loss Probe) timer and REO (RACK REOrdering) timer have priority to RTO (Retransmit TimeOut) timer. So `tcp_retransmit_timer_set` should fail if either of TLP/REO timers is active.\nHowever, I suppose `tcp_retransmit_timer_force_update` should have priority than everything, so it is named \"force\". Right?",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f1c9c5d_9f53f502",
        "filename": "src/vnet/tcp/tcp_timer.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T16:26:15Z",
      "side": 1,
      "message": "This forces the timer update in that it doesn\u0027t check and reset the timer if tc-\u003esnd_una \u003d\u003d tc-\u003esnd_nxt. It\u0027s used for syn/fin when retransmit timer pops. The latter should not needed it, I think, on the data path. I\u0027ll have to check on the syn retransmit path. \n\nI\u0027ll push a patch for data path, but for syns/fins we might be stuck needing it.",
      "parentUuid": "85775f28_c9ec6af6",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b39dda07_f0d8009e",
        "filename": "src/vnet/tcp/tcp_types.h",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T02:34:35Z",
      "side": 1,
      "message": "This is THZ above, no?",
      "range": {
        "startLine": 88,
        "startChar": 8,
        "endLine": 88,
        "endChar": 34
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4af84bec_b1a6f27d",
        "filename": "src/vnet/tcp/tcp_types.h",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-22T06:51:15Z",
      "side": 1,
      "message": "They are different:\n  THZ \u003d 1/TCP_TICK \u003d 1/0.000001 \u003d 10^6\n  TCP_TIMER_TICKS_PER_SECOND \u003d 1/TCP_TIMER_TICK \u003d 1/0.0001 \u003d 10^4\n\nPerhaps, the units of timer related variables should be (more) consistent. At this moment, some are u32 in TCP_TIMER_TICK, and others are f64 in seconds.",
      "parentUuid": "b39dda07_f0d8009e",
      "range": {
        "startLine": 88,
        "startChar": 8,
        "endLine": 88,
        "endChar": 34
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05ba0c39_54f6eafa",
        "filename": "src/vnet/tcp/tcp_types.h",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T07:10:59Z",
      "side": 1,
      "message": "Ow, I missed that. Maybe call it TCP_TIMER_HZ, to be similar to THZ. So everything that has to be used with timers, should be in ticks. As for the floats, if you\u0027re thinking about tcp_cfg.cleanup_time, that is not used with timers. I know, not very convincing ...",
      "parentUuid": "4af84bec_b1a6f27d",
      "range": {
        "startLine": 88,
        "startChar": 8,
        "endLine": 88,
        "endChar": 34
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5947fc0c_ffac8458",
        "filename": "src/vnet/tcp/tcp_types.h",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Let\u0027s rename it to TCP_TIMER_HZ, if it is still needed after reconsideration.\nThe timer durations in float (in seconds) are used in tcp_rack.c. I understand they should be converted into ticks.",
      "parentUuid": "05ba0c39_54f6eafa",
      "range": {
        "startLine": 88,
        "startChar": 8,
        "endLine": 88,
        "endChar": 34
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a42637a_0d4f78f1",
        "filename": "src/vnet/tcp/tcp_types.h",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-22T01:51:34Z",
      "side": 1,
      "message": "In the current revision, RACK (byte-tracker based) and non-RACK (scoreboard based) are using a common TCP_CONN_FAST_RECOVERY flag. So the condition to express in-FastRecovery-by-RACK is not very intuitive: It is like `(tc-\u003erack.reordering_seen)`.\n\nI\u0027m thinking to add another flag TCP_CONN_RACK_RECOVERY. Then, it will be easier to manage the congestion state.",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c01897f_a5422211",
        "filename": "src/vnet/tcp/tcp_types.h",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T16:26:15Z",
      "side": 1,
      "message": "Not sure at this point. Ideally, the architecture of the congestion control should be independent of the intricacies of how congestion is detected. That is, we have flags for fast (FAST_RECOVERY) and timer based recovery (RECOVERY) and then within the \"guts\" of the code we decide how to handle those. \n\nThis has the advantage that externally (from outside cc), it\u0027s easy to understand tcp\u0027s state",
      "parentUuid": "0a42637a_0d4f78f1",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "347166a4_1996fde1",
        "filename": "src/vnet/tcp/tcp_types.h",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-23T07:31:31Z",
      "side": 1,
      "message": "Thanks for important idea.",
      "parentUuid": "6c01897f_a5422211",
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08dc81b5_c357941c",
        "filename": "src/vnet/tcp/tcp_types.h",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-10-22T02:34:35Z",
      "side": 1,
      "message": "Ouch, would love to be able to avoid this.",
      "range": {
        "startLine": 329,
        "startChar": 6,
        "endLine": 329,
        "endChar": 15
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "216981ab_a5844392",
        "filename": "src/vnet/tcp/tcp_types.h",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-10-22T06:51:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "08dc81b5_c357941c",
      "range": {
        "startLine": 329,
        "startChar": 6,
        "endLine": 329,
        "endChar": 15
      },
      "revId": "43b8f448b1f9718599e8585c507ce821bc1d31b8",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}