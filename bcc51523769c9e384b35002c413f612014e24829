{
  "comments": [
    {
      "key": {
        "uuid": "bad7f627_5ef2c11e",
        "filename": "src/vnet/session/application_worker.c",
        "patchSetId": 9
      },
      "lineNbr": 450,
      "author": {
        "id": 1957
      },
      "writtenOn": "2020-01-31T07:52:03Z",
      "side": 1,
      "message": "Need to add check if app actually implements a callback (i.e. fifo_tuning_callback !\u003d NULL)\nSince SESSION_F_BIT_CUSTOM_FIFO_TUNING is set on session if at least single app implements fifo tuning callbacks. But if there\u0027s more apps not implementing it - we\u0027ll get segfault from here (actually that\u0027s what i\u0027m seeing now while testing with our tcp proxy app where we don\u0027t maintain segment/fifo control for server-side).",
      "revId": "bcc51523769c9e384b35002c413f612014e24829",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2500cf34_742f1855",
        "filename": "src/vnet/session/application_worker.c",
        "patchSetId": 9
      },
      "lineNbr": 450,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-01-31T09:08:17Z",
      "side": 1,
      "message": "Oh. That\u0027s a problem.\nI\u0027m not sure about the condition, but I suppose that multiple apps (one of them has fifo_tuning_callback) are associated to the session and only one of them (first one?) is associated to the session (by s-\u003eapp_wrk_index) and it may be without the fifo_tuning_callback. Right?\nIf so, adding NULL-check seems not sufficient to resolve the problem.",
      "parentUuid": "bad7f627_5ef2c11e",
      "revId": "bcc51523769c9e384b35002c413f612014e24829",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff6d4281_ae6de5bc",
        "filename": "src/vnet/session/application_worker.c",
        "patchSetId": 9
      },
      "lineNbr": 450,
      "author": {
        "id": 1957
      },
      "writtenOn": "2020-01-31T12:41:30Z",
      "side": 1,
      "message": "I\u0027ve added fifo_tuning_callback test and that resolved the core however caused severe speed degradataion. I tried 2 options: (a) return 0 from app_worker_session_fifo_tuning  when callback is not available; (b) fall-back to segment_manager_fifo_tuning call if callback is NULL. Neither worked good.\n\nOn the other hand adding same tuning callback (basically duplicating one taken from hs_proxy) on the server-side helped to get proper download speed.\n\nI guess some sanity test is still needed to either not core if callback is NULL or we should turn it into ASSERT if our expectation is that callback should always be implemented.",
      "parentUuid": "2500cf34_742f1855",
      "revId": "bcc51523769c9e384b35002c413f612014e24829",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "863acb3d_a52300f0",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 9
      },
      "lineNbr": 415,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-01-30T14:59:20Z",
      "side": 1,
      "message": "Why can\u0027t the app call svm_fifo_set_size? We gave it all the info and the fifo. For sure at one point the app will do if (act \u003d\u003d ENQ) {} else {} why do that again here?",
      "range": {
        "startLine": 398,
        "startChar": 0,
        "endLine": 415,
        "endChar": 0
      },
      "revId": "bcc51523769c9e384b35002c413f612014e24829",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "844775f1_108204f9",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 9
      },
      "lineNbr": 415,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-01-31T00:29:03Z",
      "side": 1,
      "message": "Thanks for the comment.\nIt is OK to delegate svm_fifo_set_size() to the app too. In the case, the return type of app_worker_session_fifo_tuning() and callback function can be void.\n\nThe intention of calling svm_fifo_set_size() here is just to be defensive against the possible case that the app\u0027s callback attempts to set too small or too large size for the fifo. For the same purpose, the session_fifo_tuning() may need to check return-value is not larger than the dropped len (in the case of ..._ACTION_DEQUEUED), although it is not implemented in the previous revision.",
      "parentUuid": "863acb3d_a52300f0",
      "range": {
        "startLine": 398,
        "startChar": 0,
        "endLine": 415,
        "endChar": 0
      },
      "revId": "bcc51523769c9e384b35002c413f612014e24829",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "796e8e51_cda12929",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 9
      },
      "lineNbr": 415,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-01-31T03:39:31Z",
      "side": 1,
      "message": "Ow. Still, since the app can do whatever it pleases once we give it the fifo, we can ask it to apply the update, and if we want to make sure everything is fine, assert or validate that the fifo size is within bounds after the call. \n\nI would prefer that we kept the function return value as an int in case we decide in the future we want to return some error codes.",
      "parentUuid": "844775f1_108204f9",
      "range": {
        "startLine": 398,
        "startChar": 0,
        "endLine": 415,
        "endChar": 0
      },
      "revId": "bcc51523769c9e384b35002c413f612014e24829",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52710dc0_526e8164",
        "filename": "src/vnet/session/session.c",
        "patchSetId": 9
      },
      "lineNbr": 415,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-01-31T03:54:08Z",
      "side": 1,
      "message": "Agreed. Let me update so.",
      "parentUuid": "796e8e51_cda12929",
      "range": {
        "startLine": 398,
        "startChar": 0,
        "endLine": 415,
        "endChar": 0
      },
      "revId": "bcc51523769c9e384b35002c413f612014e24829",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}