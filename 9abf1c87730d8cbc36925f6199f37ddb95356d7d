{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8f7657e7_c8d7d18e",
        "filename": "src/plugins/quic/quic.c",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 193
      },
      "writtenOn": "2025-05-21T02:02:32Z",
      "side": 1,
      "message": "Can we make quic_wrk_ctx_get get only a thread and get quic_main in it, not to pass it in always?",
      "range": {
        "startLine": 146,
        "startChar": 4,
        "endLine": 146,
        "endChar": 20
      },
      "revId": "9abf1c87730d8cbc36925f6199f37ddb95356d7d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d266b17_af83b855",
        "filename": "src/plugins/quic/quic.c",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 10
      },
      "writtenOn": "2025-05-21T14:47:04Z",
      "side": 1,
      "message": "No, because it is used both in the quic_* [quic engine] plugins as well as in the quic plugin.  Cross plugin symbol lookup requires a pointer in each local \u003cplugin\u003e_main structure, so there\u0027s no way to know which pointer to use in the inline function.\n\nIn theory, we could do so if quic_main (or a pointer to it) was moved into the vnet library, but that is unacceptable IMHO.",
      "parentUuid": "8f7657e7_c8d7d18e",
      "range": {
        "startLine": 146,
        "startChar": 4,
        "endLine": 146,
        "endChar": 20
      },
      "revId": "9abf1c87730d8cbc36925f6199f37ddb95356d7d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8b83f33_909dd85c",
        "filename": "src/plugins/quic/quic.c",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 193
      },
      "writtenOn": "2025-05-21T23:50:00Z",
      "side": 1,
      "message": "won\u0027t `extern quic_main_t quic_main;` in quic.h solve the problem? That is, there\u0027s only 1 main that we need to use in quic framework and in quic engines, and the engines will include quic.h",
      "parentUuid": "6d266b17_af83b855",
      "range": {
        "startLine": 146,
        "startChar": 4,
        "endLine": 146,
        "endChar": 20
      },
      "revId": "9abf1c87730d8cbc36925f6199f37ddb95356d7d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68c54161_26ae089c",
        "filename": "src/plugins/quic/quic.c",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 10
      },
      "writtenOn": "2025-05-22T13:54:29Z",
      "side": 1,
      "message": "That does not resolve the symbol reference for the dynamic linker at runtime.",
      "parentUuid": "b8b83f33_909dd85c",
      "range": {
        "startLine": 146,
        "startChar": 4,
        "endLine": 146,
        "endChar": 20
      },
      "revId": "9abf1c87730d8cbc36925f6199f37ddb95356d7d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff533eff_28eaa477",
        "filename": "src/plugins/quic/quic.c",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 193
      },
      "writtenOn": "2025-05-22T15:58:02Z",
      "side": 1,
      "message": "sigh, okay..",
      "parentUuid": "68c54161_26ae089c",
      "range": {
        "startLine": 146,
        "startChar": 4,
        "endLine": 146,
        "endChar": 20
      },
      "revId": "9abf1c87730d8cbc36925f6199f37ddb95356d7d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}