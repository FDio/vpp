{
  "comments": [
    {
      "key": {
        "uuid": "033f08e6_6af17145",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 193
      },
      "writtenOn": "2021-10-20T21:16:46Z",
      "side": 1,
      "message": "Is the kernel reference still valid? We\u0027re just following rfc 1122 at this point, I think.",
      "range": {
        "startLine": 10,
        "startChar": 54,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "04bec504f125e51debfa2dca6b358d2eb7d137b0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0980fbe7_70460912",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 2576
      },
      "writtenOn": "2021-10-21T06:24:39Z",
      "side": 1,
      "message": "I feel it still is, I was mainly referring to the rfc1122 logic from inside the function",
      "parentUuid": "033f08e6_6af17145",
      "range": {
        "startLine": 10,
        "startChar": 54,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "04bec504f125e51debfa2dca6b358d2eb7d137b0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5235da6_3b5cfd86",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 193
      },
      "writtenOn": "2021-10-22T00:20:29Z",
      "side": 1,
      "message": "Is there anything in the new function that\u0027s not already implied by rfc1122, i.e., time wait processing + new iss? I\u0027m okay with acknowledging the kernel\u0027s implementation but just wanted to confirm the code is only standards/rfc compliant.",
      "parentUuid": "0980fbe7_70460912",
      "range": {
        "startLine": 10,
        "startChar": 54,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "04bec504f125e51debfa2dca6b358d2eb7d137b0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcf29eab_c90115fb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 2576
      },
      "writtenOn": "2021-10-23T07:23:50Z",
      "side": 1,
      "message": "OK, see what you\u0027re asking now and you\u0027re right. The code is standard/rfc compliant. I can remove the kernel acknowledging if it is confusing.",
      "parentUuid": "a5235da6_3b5cfd86",
      "range": {
        "startLine": 10,
        "startChar": 54,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "04bec504f125e51debfa2dca6b358d2eb7d137b0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b26e428_8abefcd8",
        "filename": "src/vnet/tcp/tcp_input.c",
        "patchSetId": 3
      },
      "lineNbr": 2589,
      "author": {
        "id": 193
      },
      "writtenOn": "2021-10-20T21:16:46Z",
      "side": 1,
      "message": "To follow vpp comments pattern, could you start this with ** and shift the text lower to the left?",
      "range": {
        "startLine": 2589,
        "startChar": 1,
        "endLine": 2589,
        "endChar": 2
      },
      "revId": "04bec504f125e51debfa2dca6b358d2eb7d137b0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9952738a_0987718c",
        "filename": "src/vnet/tcp/tcp_input.c",
        "patchSetId": 3
      },
      "lineNbr": 2589,
      "author": {
        "id": 2576
      },
      "writtenOn": "2021-10-21T06:24:39Z",
      "side": 1,
      "message": "sure",
      "parentUuid": "1b26e428_8abefcd8",
      "range": {
        "startLine": 2589,
        "startChar": 1,
        "endLine": 2589,
        "endChar": 2
      },
      "revId": "04bec504f125e51debfa2dca6b358d2eb7d137b0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}