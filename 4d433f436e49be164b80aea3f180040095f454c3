{
  "comments": [
    {
      "key": {
        "uuid": "7139d926_6c4d06d8",
        "filename": "src/vnet/ipsec/ipsec_output.h",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 2465
      },
      "writtenOn": "2022-05-18T13:33:55Z",
      "side": 1,
      "message": "Do we really need to duplicate the entire ipsec4_out_spd_add_flow_cache_entry just to pass in a ipsec4_spd_5tuple_t instead? Why not just pass in the struct members like:\n\nipsec4_out_spd_add_flow_cache_entry (im, ip4_5tuple-\u003eproto, ip4_5tuple-\u003eip4_addr[0].as_u32 ... etc);",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59be2218_b81f810f",
        "filename": "src/vnet/ipsec/ipsec_output.h",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1854
      },
      "writtenOn": "2022-05-18T18:16:10Z",
      "side": 1,
      "message": "Indeed we can do that, however idea is to get rid in the end of the function ipsec_output_policy_match and leave only ipsec_output_policy_match_n, and use features like loop unwinding to get better performance. Then also  ipsec4_out_spd_add_flow_cache_entry can be removed for the sake of  ipsec4_out_spd_add_flow_cache_entry_n. In the end  ipsec4_out_spd_add_flow_cache_entry_n should be also rewritten to add cache entries in bursts - then it is better to pass to it one array of arguments instead of five. Rewriting ipsec_flow_cache_entry to work in the burst mode is beyond the scope of this patch, but we can have now at least api we agree on for the future development.",
      "parentUuid": "7139d926_6c4d06d8",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbd67239_bfad0313",
        "filename": "src/vnet/ipsec/ipsec_output.h",
        "patchSetId": 2
      },
      "lineNbr": 333,
      "author": {
        "id": 2465
      },
      "writtenOn": "2022-05-18T13:33:55Z",
      "side": 1,
      "message": "As per comment on other patch, can the functions be moved in a separate commit before the fp changes here? That will make it easier to review and see what has changed.",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd333b6f_7a73639d",
        "filename": "src/vnet/ipsec/ipsec_output.h",
        "patchSetId": 2
      },
      "lineNbr": 333,
      "author": {
        "id": 1854
      },
      "writtenOn": "2022-05-18T18:16:10Z",
      "side": 1,
      "message": "Sure that\u0027s good idea.",
      "parentUuid": "cbd67239_bfad0313",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e15beb29_9d386f95",
        "filename": "src/vnet/ipsec/ipsec_spd_fp_lookup.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 2465
      },
      "writtenOn": "2022-05-16T17:14:45Z",
      "side": 1,
      "message": "I haven\u0027t been able to match anything using the fast path with the attached script - let me know if I\u0027ve missed anything.\n\nI think there\u0027s two issues with running this script with fast path:\n1. We are adding input rules also to the fast path at `src/vnet/ipsec/ipsec_spd_policy.c:170` however there\u0027s currently no lookup implemented in inbound side. As such any inbound rules added to fast path are \"lost\" and can\u0027t be matched (I\u0027ve also highlighted this in the \"ipsec: add/delete ipsec fast path policy\" commit).\n2. If we change it so only outbound rules are added to fast path, it still doesn\u0027t seem to match the outbound rule here - I haven\u0027t debugged that or reviewed the matching logic yet to understand why.\n\nHere\u0027s the script:\n```\ncreate packet-generator interface pg0\n\nset int ip address pg0 10.10.10.10/24\n\nip route add 30.30.30.30/16 via 10.10.10.10 pg0\nset ip neighbor pg0 30.30.30.30 00:11:22:33:44:55 static count 1\n\nipsec spd add 1\nset interface ipsec spd pg0 1\n\nipsec policy add spd 1 priority 1 inbound action bypass local-ip-range 0.0.0.0 - 255.255.255.255 remote-ip-range 0.0.0.0 - 255.255.255.255\nipsec policy add spd 1 priority 1 outbound action bypass local-ip-range 0.0.0.0 - 255.255.255.255 remote-ip-range 0.0.0.0 - 255.255.255.255\n\nset int state pg0 up\n\ntrace add pg-input 100\n\npacket-generator new {\n  name ipsec\n  limit 1\n  rate 1e4\n  node ip4-input\n  interface pg0\n  size 100-100\n  data {\n   UDP: 20.20.20.20 -\u003e 30.30.30.30\n   UDP: 4321 -\u003e 1234\n    length 72\n    incrementing 100\n  }\n}\n```\n\ntrace output:\n```\n...\n01:52:04:093586: ipsec4-output-feature\n  spd 1 policy -1\n01:52:04:093605: error-drop\n  rx:pg0\n```\n\nAn integration test could catch this type of thing - shouldn\u0027t be too difficult to repurpose `test/test_ipsec_spd_flow_cache_output.py` for something like this.",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c10df85_6d6fdb5e",
        "filename": "src/vnet/ipsec/ipsec_spd_fp_lookup.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1854
      },
      "writtenOn": "2022-05-18T09:26:30Z",
      "side": 1,
      "message": "Currently I am working on such set of tests.",
      "parentUuid": "e15beb29_9d386f95",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8651062a_278526d6",
        "filename": "src/vnet/ipsec/ipsec_spd_fp_lookup.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 2465
      },
      "writtenOn": "2022-05-24T10:52:48Z",
      "side": 1,
      "message": "Did you resolve this comment? I think it\u0027s not yet resolved. The above script still does not work with the latest patch set for me. The packet is not matching in the fast path.\n\n```\nDBGvpp# show error\n   Count                  Node                              Reason               Severity \n         1             null-node                      blackholed packets           error  \n         1       ipsec4-output-feature             IPSec policy (no match)         error \n...\n\n```\n\n+\n\n```\nDBGvpp# show trace\n...\n00:00:07:828651: ipsec4-output-feature\n  spd 1 policy -1\n```",
      "parentUuid": "5c10df85_6d6fdb5e",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32a1857e_eca7731d",
        "filename": "src/vnet/ipsec/ipsec_spd_fp_lookup.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1854
      },
      "writtenOn": "2022-05-24T12:15:39Z",
      "side": 1,
      "message": "Please recheck with latest patchset (8) there have been added lines\n171 !(policy-\u003etype \u003d\u003d IPSEC_SPD_POLICY_IP4_INBOUND_PROTECT ||\n172 policy-\u003etype \u003d\u003d IPSEC_SPD_POLICY_IP4_INBOUND_BYPASS ||\n173 policy-\u003etype \u003d\u003d IPSEC_SPD_POLICY_IP4_INBOUND_DISCARD ||\n174 policy-\u003etype \u003d\u003d IPSEC_SPD_POLICY_IP6_INBOUND_PROTECT ||\n175 policy-\u003etype \u003d\u003d IPSEC_SPD_POLICY_IP6_INBOUND_BYPASS ||\n176 policy-\u003etype \u003d\u003d IPSEC_SPD_POLICY_IP6_INBOUND_DISCARD)\nwhich should prevent inbound policies from beeing added to fast path spd. Meanwhile I will try to reproduce your results as well.",
      "parentUuid": "8651062a_278526d6",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4af33411_4dcf38c6",
        "filename": "src/vnet/ipsec/ipsec_spd_fp_lookup.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 2465
      },
      "writtenOn": "2022-05-24T12:22:38Z",
      "side": 1,
      "message": "Yes - it\u0027s fixed 1) but it hasn\u0027t resolved 2). See my original comment.\n\nRun the attached script and then `packet-generator enable` in CLI to send traffic, see if you can reproduce.",
      "parentUuid": "32a1857e_eca7731d",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65257104_e6124309",
        "filename": "src/vnet/ipsec/ipsec_spd_fp_lookup.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1854
      },
      "writtenOn": "2022-05-24T13:12:03Z",
      "side": 1,
      "message": "This is the output for your script on the latest patch set. Also I\u0027ve addopted flow cache python test for fast path and outbound policies are still matched correctly.\n\nNo packets in trace buffer\n------------------- Start of thread 1 vpp_wk_0 -------------------\nPacket 1\n\n\n\n00:00:25:969553: pg-input\nstream ipsec, 100 bytes, sw_if_index 3\ncurrent data 0, length 100, buffer-pool 0, ref-count 1, trace handle 0x1000000\nUDP: 20.20.20.20 -\u003e 30.30.30.30\ntos 0x00, ttl 64, length 100, checksum 0x1626 dscp CS0 ecn NON_ECN\nfragment id 0x0000\nUDP: 4321 -\u003e 1234\nlength 72, checksum 0xa143\n00:00:25:970990: ip4-input\nUDP: 20.20.20.20 -\u003e 30.30.30.30\ntos 0x00, ttl 64, length 100, checksum 0x1626 dscp CS0 ecn NON_ECN\nfragment id 0x0000\nUDP: 4321 -\u003e 1234\nlength 72, checksum 0xa143\n00:00:25:971017: ipsec4-input-feature\nUDP: sa_id 0 spd 1 policy 0 spi 66051 (0x00010203) seq 67438087\n00:00:25:971030: ip4-lookup\nfib 0 dpo-idx 2 flow hash: 0x00000000\nUDP: 20.20.20.20 -\u003e 30.30.30.30\ntos 0x00, ttl 64, length 100, checksum 0x1626 dscp CS0 ecn NON_ECN\nfragment id 0x0000\nUDP: 4321 -\u003e 1234\nlength 72, checksum 0xa143\n00:00:25:971046: ip4-rewrite\ntx_sw_if_index 3 dpo-idx 2 : ipv4 via 30.30.30.30 pg0: mtu:9000 next:3 flags:[features ] 00112233445502fe117ecb860800 flow hash: 0x00000000\n00000000: 00112233445502fe117ecb86080045000064000000003f111726141414141e1e\n00000020: 1e1e10e104d20048a143000102030405060708090a0b0c0d0e0f1011\n00:00:25:971055: ipsec4-output-feature\nspd 1 policy 1\n00:00:25:971073: pg0-output\npg0\nIP4: 02:fe:11:7e:cb:86 -\u003e 00:11:22:33:44:55\nUDP: 20.20.20.20 -\u003e 30.30.30.30\ntos 0x00, ttl 63, length 100, checksum 0x1726 dscp CS0 ecn NON_ECN\nfragment id 0x0000\nUDP: 4321 -\u003e 1234\nlength 72, checksum 0xa143\n00:00:25:971100: pg0-tx\nbuffer 0xffffdb: current data -14, length 114, buffer-pool 0, ref-count 1, trace handle 0x1000000\nip4\nIP4: 02:fe:11:7e:cb:86 -\u003e 00:11:22:33:44:55\nUDP: 20.20.20.20 -\u003e 30.30.30.30\ntos 0x00, ttl 63, length 100, checksum 0x1726 dscp CS0 ecn NON_ECN\nfragment id 0x0000\nUDP: 4321 -\u003e 1234\nlength 72, checksum 0xa143",
      "parentUuid": "4af33411_4dcf38c6",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0a57451_75c5a608",
        "filename": "src/vnet/ipsec/ipsec_spd_fp_lookup.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 2465
      },
      "writtenOn": "2022-05-24T15:09:30Z",
      "side": 1,
      "message": "Just double checking, that trace is definitely with `ipv4-outbound-spd-fast-path on`?\n\nThis matches what I see and expect with fast path off, with fast path on I get no match in ipsec4-output-feature still.",
      "parentUuid": "65257104_e6124309",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f78442c_b85d789a",
        "filename": "src/vnet/ipsec/ipsec_spd_fp_lookup.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1849
      },
      "writtenOn": "2022-05-25T12:18:41Z",
      "side": 1,
      "message": "Yes we haven\u0027t - the problem was addressed and are doing final polish to the patches. Will send out soon.",
      "parentUuid": "c0a57451_75c5a608",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1eef1271_c59721b5",
        "filename": "src/vnet/ipsec/ipsec_spd_fp_lookup.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1854
      },
      "writtenOn": "2022-06-02T08:21:55Z",
      "side": 1,
      "message": "Hi Zachary yes you are right. I will work on fix",
      "parentUuid": "c0a57451_75c5a608",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47b15eb4_3cdf15b8",
        "filename": "src/vnet/ipsec/ipsec_spd_fp_lookup.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 2465
      },
      "writtenOn": "2022-06-06T08:59:22Z",
      "side": 1,
      "message": "I still have an issue with failing to match in fast path the port ranges in this script:\n\n----\n\ncreate packet-generator interface pg0 \n\nset int ip address pg0 10.10.10.10/24\n\nip route add 30.30.30.30/16 via 10.10.10.10 pg0 \nset ip neighbor pg0 30.30.30.30 00:11:22:33:44:55 static count 1\n\nipsec spd add 1\nset interface ipsec spd pg0 1\n\nipsec policy add spd 1 priority 1 inbound action bypass local-ip-range 0.0.0.0 - 255.255.255.255 remote-ip-range 0.0.0.0 - 255.255.255.255\nipsec policy add spd 1 priority 1 outbound action bypass local-ip-range 0.0.0.0 - 255.255.255.255 remote-ip-range 0.0.0.0 - 255.255.255.255 local-port-range 1000-2000 remote-port-range 5000-6000\n\nset int state pg0 up\n\ntrace add pg-input 100 \n\npacket-generator new { \\ \n  name ipsec \\\n  limit 1 \\ \n  rate 1e4 \\\n  node ip4-input \\\n  interface pg0 \\\n  size 100-100 \\\n  data { \\ \n   UDP: 20.20.20.20 -\u003e 30.30.30.30 \\\n   UDP: 1234 -\u003e 5678 \\\n    length 72 \\\n    incrementing 100 \\\n  } \\ \n}\n\nshow ipsec spd \n\npacket-generator enable",
      "parentUuid": "1eef1271_c59721b5",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47703fa4_30cf938f",
        "filename": "src/vnet/ipsec/ipsec_spd_fp_lookup.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1854
      },
      "writtenOn": "2022-06-06T11:47:27Z",
      "side": 1,
      "message": "I\u0027ll dobule check",
      "parentUuid": "47b15eb4_3cdf15b8",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "206deb6c_5d5cec17",
        "filename": "src/vnet/ipsec/ipsec_spd_fp_lookup.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1854
      },
      "writtenOn": "2022-06-06T14:00:02Z",
      "side": 1,
      "message": "Problem is in these lines:\n406   if (PREDICT_TRUE ((policy-\u003eprotocol \u003d\u003d IP_PROTOCOL_TCP) ||\n407         (policy-\u003eprotocol \u003d\u003d IP_PROTOCOL_UDP) ||\n408         (policy-\u003eprotocol \u003d\u003d IP_PROTOCOL_SCTP)))\n409     {\n410       tuple-\u003elport \u003d policy-\u003elport.start;\n411       tuple-\u003erport \u003d policy-\u003erport.start;\n412     }\n413   else\n414     {\n415       tuple-\u003elport \u003d 0;\n416       tuple-\u003erport \u003d 0;\n417     }\nwhen you add policy like you do policy-\u003eprotocol is 0. It is none of the protocols mentioned in the condition and so else part is executed. If you set protocol explicitely to UDP it will work. I\u0027ll have to think yet how to fix it.",
      "parentUuid": "47703fa4_30cf938f",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef6a5387_86a517a8",
        "filename": "src/vnet/ipsec/ipsec_spd_fp_lookup.h",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1854
      },
      "writtenOn": "2022-06-06T14:34:45Z",
      "side": 1,
      "message": "I\u0027ve examined the code. So in the cli command (see ipsec_policy_add_del_command_fn in ipsec_cli.c)if you don\u0027t specify protocol it will be set to 0 by memset, which is defined as IP_PROTOCOL_IP6_HOP_BY_HOP_OPTIONS in enum ip_protocol. Question is if such setting is correct and expected? Did you want to specify this particular protocol or did you understand such definition of policy as you\u0027ve provied as applying to any protocol? If second behaviour is desired, it is not how cli command works.",
      "parentUuid": "206deb6c_5d5cec17",
      "revId": "4d433f436e49be164b80aea3f180040095f454c3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}