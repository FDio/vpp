{
  "comments": [
    {
      "key": {
        "uuid": "f64fa607_37965d69",
        "filename": "src/vnet/interface/rx_queue.c",
        "patchSetId": 12
      },
      "lineNbr": 88,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-11-25T13:26:55Z",
      "side": 1,
      "message": "it should be queue_index instead of queue_id.",
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3f4cd15_7e0bcb0f",
        "filename": "src/vnet/interface/rx_queue.c",
        "patchSetId": 12
      },
      "lineNbr": 88,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-12-03T13:29:00Z",
      "side": 1,
      "message": "fixed, thanks",
      "parentUuid": "f64fa607_37965d69",
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c362637_8fc52bea",
        "filename": "src/vnet/interface/rx_queue.c",
        "patchSetId": 12
      },
      "lineNbr": 168,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-11-25T11:12:09Z",
      "side": 1,
      "message": "clib_file_main_t *fm \u003d \u0026file_main;",
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d074855f_922cc8e6",
        "filename": "src/vnet/interface/rx_queue.c",
        "patchSetId": 12
      },
      "lineNbr": 183,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-11-25T11:12:09Z",
      "side": 1,
      "message": "Please remove this check.\nvirtio interface doesn\u0027t register any file index for interrupt mode.",
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99c63ce9_88e1652f",
        "filename": "src/vnet/interface/rx_queue.c",
        "patchSetId": 12
      },
      "lineNbr": 183,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-12-03T13:33:49Z",
      "side": 1,
      "message": "Sp how do you get interrupts in the interrupt mode?",
      "parentUuid": "d074855f_922cc8e6",
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ae5cdef_287b5b68",
        "filename": "src/vnet/interface/rx_queue.c",
        "patchSetId": 12
      },
      "lineNbr": 183,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-12-07T10:19:59Z",
      "side": 1,
      "message": "It registers the interrupt handler(s) with PCI infra.",
      "parentUuid": "99c63ce9_88e1652f",
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bdccd02_11097cdc",
        "filename": "src/vnet/interface/rx_queue.c",
        "patchSetId": 12
      },
      "lineNbr": 189,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-11-25T11:12:09Z",
      "side": 1,
      "message": "Please add the following code before calling the \u0027rx_mode_change_function\u0027.\n\n if ((mode \u003d\u003d VNET_HW_IF_RX_MODE_INTERRUPT ||\n         mode \u003d\u003d VNET_HW_IF_RX_MODE_ADAPTIVE) \u0026\u0026 rxq-\u003efile_index !\u003d ~0) \n  {\n    clib_file_t *f \u003d clib_file_get (fm, rxq-\u003efile_index);\n    fm-\u003efile_update (f, UNIX_FILE_UPDATE_ADD);\n  }",
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47103717_d5020859",
        "filename": "src/vnet/interface/rx_queue.c",
        "patchSetId": 12
      },
      "lineNbr": 189,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-12-03T13:33:49Z",
      "side": 1,
      "message": "why?",
      "parentUuid": "0bdccd02_11097cdc",
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b291ad2f_89a76446",
        "filename": "src/vnet/interface/rx_queue.c",
        "patchSetId": 12
      },
      "lineNbr": 189,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-12-07T10:19:59Z",
      "side": 1,
      "message": "We need to add the unix file when switches to interrupt mode.",
      "parentUuid": "47103717_d5020859",
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b15c1a16_01268650",
        "filename": "src/vnet/interface/rx_queue.c",
        "patchSetId": 12
      },
      "lineNbr": 202,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-11-25T11:12:09Z",
      "side": 1,
      "message": "Please add the following code after calling the \u0027rx_mode_change_function\u0027. \n if (mode \u003d\u003d VNET_HW_IF_RX_MODE_POLLING \u0026\u0026 rxq-\u003efile_index !\u003d ~0)\n  {\n    clib_file_t *f \u003d clib_file_get (fm, rxq-\u003efile_index);\n    fm-\u003efile_update (f, UNIX_FILE_UPDATE_DELETE);\n  }",
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9aff51db_8172faaa",
        "filename": "src/vnet/interface/rx_queue.c",
        "patchSetId": 12
      },
      "lineNbr": 202,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-12-03T13:33:49Z",
      "side": 1,
      "message": "why?",
      "parentUuid": "b15c1a16_01268650",
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c38feb7_719521bd",
        "filename": "src/vnet/interface/rx_queue.c",
        "patchSetId": 12
      },
      "lineNbr": 202,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-12-07T10:19:59Z",
      "side": 1,
      "message": "We need to remove the unix file when switches to poll mode.",
      "parentUuid": "9aff51db_8172faaa",
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be8f8db5_55317c6d",
        "filename": "src/vnet/interface/rx_queue_funcs.h",
        "patchSetId": 12
      },
      "lineNbr": 22,
      "author": {
        "id": 845
      },
      "writtenOn": "2020-11-25T17:08:50Z",
      "side": 1,
      "message": "I am a bit worried about having a \"public\" vnet_hw_if_register_rx_queue function which leaves VPP in an \"incomplete\" state. It would be better imho to have this function as internal to the framework, and maybe add something like vnet_hw_if_register_all_rx_queues which would take all the queue_ids, generate all the queue_indexes at once, and do the update_runtime_data. It\u0027s a bit more complicated but ensures a \"clear\" semantic between the driver and the framework and prevents error such as \"I only half updated the state of vnet and forgot to update_runtime_data\".",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 32
      },
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96733853_237428e3",
        "filename": "src/vnet/interface/rx_queue_funcs.h",
        "patchSetId": 12
      },
      "lineNbr": 22,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-12-03T13:29:42Z",
      "side": 1,
      "message": "Today we don\u0027t have \"public\" function, all are just \"functions\". Writing drivers requires significant understanding of the infra so I\u0027m sure driver writers will make it right.\n\nAnother argument here is that runtime data will also cover TX, so you want to do it once for both rx and tx queues.",
      "parentUuid": "be8f8db5_55317c6d",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 32
      },
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba52cf65_336e9e50",
        "filename": "src/vnet/interface/rx_queue_funcs.h",
        "patchSetId": 12
      },
      "lineNbr": 25,
      "author": {
        "id": 845
      },
      "writtenOn": "2020-11-25T17:08:50Z",
      "side": 1,
      "message": "Same, these functions require an update_runtime_data and shouldn\u0027t be usable from outside the framework (maybe in the future they can be hidden?).",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 25,
        "endChar": 78
      },
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f755244_5606a2b7",
        "filename": "src/vnet/interface/rx_queue_funcs.h",
        "patchSetId": 12
      },
      "lineNbr": 25,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-12-03T13:29:00Z",
      "side": 1,
      "message": "same",
      "parentUuid": "ba52cf65_336e9e50",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 25,
        "endChar": 78
      },
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07bf9d94_d6c8b55a",
        "filename": "src/vnet/interface/rx_queue_funcs.h",
        "patchSetId": 12
      },
      "lineNbr": 31,
      "author": {
        "id": 845
      },
      "writtenOn": "2020-11-25T17:08:50Z",
      "side": 1,
      "message": "Same as before, this function shouldn\u0027t be exposed as it doesn\u0027t update_runtime_data.",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 31,
        "endChar": 31
      },
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62f262f2_941902e0",
        "filename": "src/vnet/interface/rx_queue_funcs.h",
        "patchSetId": 12
      },
      "lineNbr": 31,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-12-03T13:29:00Z",
      "side": 1,
      "message": "same",
      "parentUuid": "07bf9d94_d6c8b55a",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 31,
        "endChar": 31
      },
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "effe9340_80cb5ebc",
        "filename": "src/vnet/interface/rx_queue_funcs.h",
        "patchSetId": 12
      },
      "lineNbr": 34,
      "author": {
        "id": 845
      },
      "writtenOn": "2020-11-25T17:08:50Z",
      "side": 1,
      "message": "Same",
      "range": {
        "startLine": 34,
        "startChar": 5,
        "endLine": 34,
        "endChar": 41
      },
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d32293ad_9133abd2",
        "filename": "src/vnet/interface/rx_queue_funcs.h",
        "patchSetId": 12
      },
      "lineNbr": 34,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-12-03T13:29:00Z",
      "side": 1,
      "message": "same",
      "parentUuid": "effe9340_80cb5ebc",
      "range": {
        "startLine": 34,
        "startChar": 5,
        "endLine": 34,
        "endChar": 41
      },
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "311e106f_22c19efe",
        "filename": "src/vnet/interface/rx_queue_funcs.h",
        "patchSetId": 12
      },
      "lineNbr": 36,
      "author": {
        "id": 845
      },
      "writtenOn": "2020-11-25T17:08:50Z",
      "side": 1,
      "message": "If the \"public\" functions exposed to the driver (and to the API/CLI layer) are properly doing the update_runtime_data, there is no reason that this function is exposed as well.",
      "range": {
        "startLine": 36,
        "startChar": 5,
        "endLine": 36,
        "endChar": 35
      },
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48a57eca_aac35398",
        "filename": "src/vnet/interface/rx_queue_funcs.h",
        "patchSetId": 12
      },
      "lineNbr": 36,
      "author": {
        "id": 9
      },
      "writtenOn": "2020-12-03T13:29:00Z",
      "side": 1,
      "message": "same",
      "parentUuid": "311e106f_22c19efe",
      "range": {
        "startLine": 36,
        "startChar": 5,
        "endLine": 36,
        "endChar": 35
      },
      "revId": "9df0134f832bd896bdf35099c530246fb22da5ce",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}