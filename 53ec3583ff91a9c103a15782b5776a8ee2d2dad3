{
  "comments": [
    {
      "key": {
        "uuid": "6e8ab507_3dccd655",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-02T09:00:31Z",
      "side": 1,
      "message": "Except that u8 name[64] does not imply \\x00 will occur anywhere in the 64 bytes. But the VPP code seldom expects that, using strncpy and other dangerous functions.\n\nIdeally, fixed size string and u8 could differ by caring (or not, respectively) about the value being NULL terminated (and that after the NULL no non-null characters are present within the size).",
      "range": {
        "startLine": 17,
        "startChar": 22,
        "endLine": 17,
        "endChar": 45
      },
      "revId": "53ec3583ff91a9c103a15782b5776a8ee2d2dad3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7547f69b_98324490",
        "filename": "src/plugins/map/map_api.c",
        "patchSetId": 8
      },
      "lineNbr": 142,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-02T09:00:31Z",
      "side": 1,
      "message": "How do you know the destination already has NULL at the last character? Was there a memset making sure of that?",
      "range": {
        "startLine": 142,
        "startChar": 50,
        "endLine": 142,
        "endChar": 71
      },
      "revId": "53ec3583ff91a9c103a15782b5776a8ee2d2dad3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c58f997c_04340d83",
        "filename": "src/vpp-api/python/vpp_papi/tests/test_vpp_serializer.py",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-02T09:00:31Z",
      "side": 1,
      "message": "Assert size and name?",
      "range": {
        "startLine": 28,
        "startChar": 40,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "53ec3583ff91a9c103a15782b5776a8ee2d2dad3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4888ea73_16ce107e",
        "filename": "src/vpp-api/python/vpp_papi/vpp_serializer.py",
        "patchSetId": 8
      },
      "lineNbr": 130,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-02T09:00:31Z",
      "side": 1,
      "message": "Why not just use this as the second argument to ljust()?",
      "range": {
        "startLine": 130,
        "startChar": 20,
        "endLine": 130,
        "endChar": 26
      },
      "revId": "53ec3583ff91a9c103a15782b5776a8ee2d2dad3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c832693_3e4fbdd1",
        "filename": "src/vpp-api/python/vpp_papi/vpp_serializer.py",
        "patchSetId": 8
      },
      "lineNbr": 131,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-02T09:00:31Z",
      "side": 1,
      "message": "We should check that the length of this is not more than self.limit?",
      "range": {
        "startLine": 131,
        "startChar": 19,
        "endLine": 131,
        "endChar": 38
      },
      "revId": "53ec3583ff91a9c103a15782b5776a8ee2d2dad3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1af36474_a2be51af",
        "filename": "src/vpp/api/vpe.api",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-02T11:09:33Z",
      "side": 1,
      "message": "A bump is probably warranted.",
      "range": {
        "startLine": 22,
        "startChar": 18,
        "endLine": 22,
        "endChar": 23
      },
      "revId": "53ec3583ff91a9c103a15782b5776a8ee2d2dad3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}