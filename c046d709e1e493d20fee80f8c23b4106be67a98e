{
  "comments": [
    {
      "key": {
        "uuid": "abc5320c_9f5f50d1",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 7
      },
      "lineNbr": 785,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-11-13T16:50:29Z",
      "side": 1,
      "message": "This can give you unintended results. For example, using [0] you can see at the end of [1] that filtering for a command (sw_interface_add_del_mac_address) can give you the reply (sw_interface_add_del_mac_address_reply) value instead.\n\n[0] https://gerrit.fd.io/r/c/csit/+/23406/4/resources/libraries/python/PapiExecutor.py\n[1] https://logs.fd.io/production/vex-yul-rot-jenkins-1/vpp-csit-verify-device-master-1n-skx/4313/archives/log.html.gz#s1-s1-s1-s1-s1-t1-k2-k9-k2-k1-k1-k2-k1",
      "range": {
        "startLine": 785,
        "startChar": 21,
        "endLine": 785,
        "endChar": 37
      },
      "revId": "c046d709e1e493d20fee80f8c23b4106be67a98e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68295a53_9a8d6e10",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 7
      },
      "lineNbr": 785,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-11-13T16:54:44Z",
      "side": 1,
      "message": "IS the intent to strip off the \u0027_reply\u0027?",
      "parentUuid": "abc5320c_9f5f50d1",
      "range": {
        "startLine": 785,
        "startChar": 21,
        "endLine": 785,
        "endChar": 37
      },
      "revId": "c046d709e1e493d20fee80f8c23b4106be67a98e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc565423_ccd99581",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 7
      },
      "lineNbr": 785,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-11-13T17:36:51Z",
      "side": 1,
      "message": "If an app relies on both sw_interface_add_del_mac_address and sw_interface_add_del_mac_address_reply, it should be able to get both name_crc values (not the reply value twice).\nWell, sw_interface_add_del_mac_address_reply is autoreply, I have chosen that just because it happened to be first in dict key order.\nAs crc cannot contain underscores, some rsplit() action should recover the complete name for equality checking purposes.",
      "parentUuid": "68295a53_9a8d6e10",
      "range": {
        "startLine": 785,
        "startChar": 21,
        "endLine": 785,
        "endChar": 37
      },
      "revId": "c046d709e1e493d20fee80f8c23b4106be67a98e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "949dcc84_a6b8f361",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 7
      },
      "lineNbr": 785,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-11-14T16:35:21Z",
      "side": 1,
      "message": "The [\u0027reply\u0027] value does not have to end on _reply, it could end on _details (for dumps).\n\nMy previous comment has been written in style that assumes users will list reply names explicitly, but maybe it is better to accept only \"service\" messages like this (by line 781 raising otherwise).\nBy the way, do we want to include also event messages here?",
      "parentUuid": "dc565423_ccd99581",
      "range": {
        "startLine": 785,
        "startChar": 21,
        "endLine": 785,
        "endChar": 37
      },
      "revId": "c046d709e1e493d20fee80f8c23b4106be67a98e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}