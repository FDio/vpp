{
  "comments": [
    {
      "key": {
        "uuid": "49a495c3_55789774",
        "filename": "src/vlib/unix/input.c",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 10
      },
      "writtenOn": "2019-04-18T15:28:46Z",
      "side": 1,
      "message": "Since f may no longer point to a valid memory location (i.e. when fm-\u003efile_pool is reallocated in the read_function() ), then it should be reset here.\n\n    f \u003d fm-\u003efile_pool + i;\n\nOtherwise in the case where both EPOLLIN and EPOLLOUT are set, there will still be memory corruption in the if (e-\u003eevents \u0026 EPOLLOUT) code block below.",
      "revId": "c2120532fe45db0d3aea00797934441d51dbb9b6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77b08246_35d07349",
        "filename": "src/vlib/unix/input.c",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 193
      },
      "writtenOn": "2019-04-18T16:07:06Z",
      "side": 1,
      "message": "I would typically expect this to be an issue on accepts/fd exchanges, because that\u0027s when a new file is added to the pool. So, if I were to guess, only on EPOLLIN we\u0027d have the pool realloc happen. But I\u0027ve been surprised before, and your point is quite valid :-)\n\nIf we want to protect against all possible issues, we should pool_get_elt_at_index after each handler call ...",
      "parentUuid": "49a495c3_55789774",
      "revId": "c2120532fe45db0d3aea00797934441d51dbb9b6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}