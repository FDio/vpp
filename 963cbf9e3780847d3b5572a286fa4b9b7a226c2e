{
  "comments": [
    {
      "key": {
        "uuid": "10948f1a_71ae73e9",
        "filename": "test/test_reassembly.py",
        "patchSetId": 2
      },
      "lineNbr": 181,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-12-12T15:37:38Z",
      "side": 1,
      "message": "Can we put the result of this into a variable, such as \"should_skip_for_aarch64\"?\nThat would save some space, but hide the implementation; not sure if it is worth overall.",
      "range": {
        "startLine": 181,
        "startChar": 21,
        "endLine": 181,
        "endChar": 64
      },
      "revId": "963cbf9e3780847d3b5572a286fa4b9b7a226c2e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43cbcd6c_77f7e7db",
        "filename": "test/test_reassembly.py",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-12-12T15:37:38Z",
      "side": 1,
      "message": "\"test is known to fail on aarch64\"\n\nIt is possible the test logic works correctly, and it is just exposing an unknown bug in VPP visible only on aarch64.\n\"Known to fail\" should sound more neutral with respect to whether it the test code (or VPP, or both) causing the failure.",
      "range": {
        "startLine": 182,
        "startChar": 21,
        "endLine": 182,
        "endChar": 51
      },
      "revId": "963cbf9e3780847d3b5572a286fa4b9b7a226c2e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6a2b8_5d2ee540",
        "filename": "test/test_reassembly.py",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1496
      },
      "writtenOn": "2018-12-12T17:41:28Z",
      "side": 1,
      "message": "I can write a decorator that that extends @unittest.expectedfailure. Then if/when the bug is fixed, it will show up as an unexpectedsuccess.  Is that what you are asking for?",
      "parentUuid": "43cbcd6c_77f7e7db",
      "range": {
        "startLine": 182,
        "startChar": 21,
        "endLine": 182,
        "endChar": 51
      },
      "revId": "963cbf9e3780847d3b5572a286fa4b9b7a226c2e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfefc7ee_eb99007c",
        "filename": "test/test_reassembly.py",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 576
      },
      "writtenOn": "2018-12-13T08:32:22Z",
      "side": 1,
      "message": "A note about expected failures/unexpected successes: the test runner will not report these in the summary since there is no support for these.",
      "parentUuid": "87f6a2b8_5d2ee540",
      "range": {
        "startLine": 182,
        "startChar": 21,
        "endLine": 182,
        "endChar": 51
      },
      "revId": "963cbf9e3780847d3b5572a286fa4b9b7a226c2e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39f9588a_b85bdad2",
        "filename": "test/test_reassembly.py",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1496
      },
      "writtenOn": "2018-12-13T13:12:35Z",
      "side": 1,
      "message": "Understood.  I think there is a distinction between \"this is what we do\" and \"this is valuable to do\".  My thought is that \"expectedfailure\" offers the ability for the community to get more involved, as tests can be introduced as they are discovered, instead of only once they have been addressed.  You ll have way more experience in that area than I do.  What do you all think?",
      "parentUuid": "dfefc7ee_eb99007c",
      "range": {
        "startLine": 182,
        "startChar": 21,
        "endLine": 182,
        "endChar": 51
      },
      "revId": "963cbf9e3780847d3b5572a286fa4b9b7a226c2e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0429c1ed_b6671611",
        "filename": "test/test_reassembly.py",
        "patchSetId": 2
      },
      "lineNbr": 182,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-12-20T15:25:49Z",
      "side": 1,
      "message": "I think the best compromise is to keep \"skipIf\" for now, but add a TODO to create \"expectFailureIf\" decorator (and for the runner to report its results correctly).",
      "parentUuid": "39f9588a_b85bdad2",
      "range": {
        "startLine": 182,
        "startChar": 21,
        "endLine": 182,
        "endChar": 51
      },
      "revId": "963cbf9e3780847d3b5572a286fa4b9b7a226c2e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}