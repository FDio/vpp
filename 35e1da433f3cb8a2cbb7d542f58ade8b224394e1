{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "67575a6e_3e9670f2",
        "filename": "src/vnet/tcp/tcp_inlines.h",
        "patchSetId": 3
      },
      "lineNbr": 346,
      "author": {
        "id": 193
      },
      "writtenOn": "2023-12-21T19:29:33Z",
      "side": 1,
      "message": "This only ends up generating a reset in response. Any reason why you\u0027d want to avoid doing that? \n\nAlso, if there is such a need, we should drop it in the reset node not here.",
      "revId": "35e1da433f3cb8a2cbb7d542f58ade8b224394e1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3836b4c4_db5c988e",
        "filename": "src/vnet/tcp/tcp_inlines.h",
        "patchSetId": 3
      },
      "lineNbr": 346,
      "author": {
        "id": 2708
      },
      "writtenOn": "2023-12-22T01:26:00Z",
      "side": 1,
      "message": "If tc is NULL then tcp_input_set_error_next will set next as TCP_INPUT_NEXT_RESET ,hence a reset response generated for incoming reset packets on closed state",
      "parentUuid": "67575a6e_3e9670f2",
      "revId": "35e1da433f3cb8a2cbb7d542f58ade8b224394e1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "408258f6_9227d52f",
        "filename": "src/vnet/tcp/tcp_inlines.h",
        "patchSetId": 3
      },
      "lineNbr": 346,
      "author": {
        "id": 193
      },
      "writtenOn": "2023-12-22T02:42:14Z",
      "side": 1,
      "message": "Yup. Those in theory should be harmless, hence my previous question, i.e., is there any reason why you\u0027d want to avoid them? \n\nAlso, if we want to avoid them, we should do it in the reset node.",
      "parentUuid": "3836b4c4_db5c988e",
      "revId": "35e1da433f3cb8a2cbb7d542f58ade8b224394e1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label.                         A minumum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "35e1da433f3cb8a2cbb7d542f58ade8b224394e1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Verified=MIN"],"failingAtoms":["label:Verified=MAX"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "35e1da433f3cb8a2cbb7d542f58ade8b224394e1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}