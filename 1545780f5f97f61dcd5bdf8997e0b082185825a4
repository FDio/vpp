{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "377f8e88_83949558",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 10
      },
      "writtenOn": "2023-06-08T21:36:00Z",
      "side": 1,
      "message": "This is good to go once Nathan \u0026 Stanislav verify in their respective use case tests.\n\nAll comments welcome!",
      "revId": "1545780f5f97f61dcd5bdf8997e0b082185825a4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24500233_9a332c98",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 2220
      },
      "writtenOn": "2023-06-09T07:23:55Z",
      "side": 1,
      "message": "Hi Dave,\n\nThanks a lot for the patch, all works flawlessly for me. I\u0027ve run multiple times all my UTs (including `sw_interface_set_tx_placement` and `sw_interface_tx_placement_details` and many other I use, e.g. linux-cp also uses auto-endiann).\n\nBut we still need this change, otherwise I get _details with a byte-swapped context:\n```\ndiff --git a/src/vnet/interface_api.c b/src/vnet/interface_api.c\nindex c3e78e5c7..c9403ca9e 100644\n--- a/src/vnet/interface_api.c\n+++ b/src/vnet/interface_api.c\n@@ -1214,7 +1214,7 @@ out:\n static void\n send_interface_tx_placement_details (vnet_hw_if_tx_queue_t **all_queues,\n                                     u32 index, vl_api_registration_t *rp,\n-                                    u32 native_context)\n+                                    u32 context)\n {\n   vnet_main_t *vnm \u003d vnet_get_main ();\n   vl_api_sw_interface_tx_placement_details_t *rmp;\n@@ -1223,7 +1223,6 @@ send_interface_tx_placement_details (vnet_hw_if_tx_queue_t **all_queues,\n   uword *bitmap \u003d q[0]-\u003ethreads;\n   u32 hw_if_index \u003d q[0]-\u003ehw_if_index;\n   vnet_hw_interface_t *hw_if \u003d vnet_get_hw_interface (vnm, hw_if_index);\n-  u32 context \u003d clib_host_to_net_u32 (native_context);\n \n   n_bits \u003d clib_bitmap_count_set_bits (bitmap);\n   u32 n \u003d n_bits * sizeof (u32);\n```",
      "parentUuid": "377f8e88_83949558",
      "revId": "1545780f5f97f61dcd5bdf8997e0b082185825a4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "002dfe96_644ccde6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 10
      },
      "writtenOn": "2023-06-09T15:15:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24500233_9a332c98",
      "revId": "1545780f5f97f61dcd5bdf8997e0b082185825a4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}