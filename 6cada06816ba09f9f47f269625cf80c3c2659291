{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9fa10234_a5f3ba40",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 3138
      },
      "writtenOn": "2025-01-09T15:42:45Z",
      "side": 1,
      "message": "Hi Florin,\n\nI have updated the asynchronous processing logic by incorporating separate handlers for handshake, read, and write events. The additional debug logs will be removed upon the completion of comprehensive testing. During testing with the DPDK engine with \"http tps\", below crash was observed following the handshake completion and data transfer. Could you please review the changes? and provide your inputs.\n\nBelow is the config of http tps:\nhttp tps  uri tls://0.0.0.0/443 private-segment-size  4294901760 fifo-size 128\n\nUsing below comand to send the traffic:\nroot@cn106-2004:~/Varun/Perf# curl  --output Index.html  --tlsv1.2 --tls-max 1.2   https://13.0.0.5/test_file_1K  -k\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  1024  100  1024    0     0   4762      0 --:--:-- --:--:-- --:--:--  4762\n\nBelow is the stack trace for the crash during http disconnect:\n\nDBGvpp# 1: /root/TLS_Plugin/VPP_J9/src/plugins/tlsopenssl/tls_openssl.c:140 (openssl_ctx_get_w_thread) assertion `! pool_is_free (openssl_main.ctx_pool[thread_index], _e)\u0027 fails\n\nThread 4 \"vpp_wk_0\" received signal SIGABRT, Aborted.\n[Switching to Thread 0xffffaedccf00 (LWP 100322)]\n__pthread_kill_implementation (threadid\u003d281473615449856, signo\u003dsigno@entry\u003d6, no_tid\u003dno_tid@entry\u003d0) at ./nptl/pthread_kill.c:44\n44      ./nptl/pthread_kill.c: No such file or directory.\n(gdb) bt\n#0  __pthread_kill_implementation (threadid\u003d281473615449856, signo\u003dsigno@entry\u003d6, no_tid\u003dno_tid@entry\u003d0) at ./nptl/pthread_kill.c:44\n#1  0x0000fffff700f254 in __pthread_kill_internal (signo\u003d6, threadid\u003d\u003coptimized out\u003e) at ./nptl/pthread_kill.c:78\n#2  0x0000fffff6fca67c in __GI_raise (sig\u003dsig@entry\u003d6) at ../sysdeps/posix/raise.c:26\n#3  0x0000fffff6fb7130 in __GI_abort () at ./stdlib/abort.c:79\n#4  0x0000aaaaaaaa67a8 in os_panic () at /root/TLS_Plugin/VPP_J9/src/vpp/vnet/main.c:440\n#5  0x0000fffff7260264 in debugger () at /root/TLS_Plugin/VPP_J9/src/vppinfra/error.c:84\n#6  0x0000fffff726000c in _clib_error (how_to_die\u003d2, function_name\u003d0x0, line_number\u003d0, fmt\u003d0xffffb5582a38 \"%s:%d (%s) assertion `%s\u0027 fails\") at /root/TLS_Plugin/VPP_J9/src/vppinfra/error.c:143\n#7  0x0000ffffb5575cbc in openssl_ctx_get_w_thread (ctx_index\u003d0, thread_index\u003d1 \u0027\\001\u0027) at /root/TLS_Plugin/VPP_J9/src/plugins/tlsopenssl/tls_openssl.c:140\n#8  0x0000fffff7ad0b3c in tls_ctx_get_w_thread (ctx_handle\u003d268435456, thread_index\u003d1 \u0027\\001\u0027) at /root/TLS_Plugin/VPP_J9/src/vnet/tls/tls_inlines.h:46\n#9  0x0000fffff7ad2164 in tls_connection_get (ctx_index\u003d268435456, thread_index\u003d1) at /root/TLS_Plugin/VPP_J9/src/vnet/tls/tls.c:826\n#10 0x0000fffff7a52088 in transport_get_connection (tp\u003dTRANSPORT_PROTO_TLS, conn_index\u003d268435456, thread_index\u003d1 \u0027\\001\u0027) at /root/TLS_Plugin/VPP_J9/src/vnet/session/transport.h:159\n#11 0x0000fffff7a4dad8 in session_get_transport (s\u003d0xffffbbe5b100) at /root/TLS_Plugin/VPP_J9/src/vnet/session/session.c:1922\n#12 0x0000fffff7a4d984 in session_is_valid (si\u003d1, thread_index\u003d1 \u0027\\001\u0027) at /root/TLS_Plugin/VPP_J9/src/vnet/session/session.c:272\n#13 0x0000fffff7a90c10 in session_get_if_valid (si\u003d1, thread_index\u003d1) at /root/TLS_Plugin/VPP_J9/src/vnet/session/session.h:418\n#14 0x0000fffff7a88bc4 in session_get_from_handle_if_valid (handle\u003d...) at /root/TLS_Plugin/VPP_J9/src/vnet/session/session.h:433\n#15 0x0000fffff7a8dec0 in vnet_disconnect_session (a\u003d0xffffaedcbf68) at /root/TLS_Plugin/VPP_J9/src/vnet/session/application.c:1505\n#16 0x0000ffffb637401c in http_disconnect_transport (hc\u003d0xffffbcddc040) at /root/TLS_Plugin/VPP_J9/src/plugins/http/http.c:206\n#17 0x0000ffffb6378c88 in http_conn_timeout_cb (hc_handlep\u003d0x1000000) at /root/TLS_Plugin/VPP_J9/src/plugins/http/http.c:253\n#18 0x0000fffff7a7b100 in session_event_dispatch_ctrl (wrk\u003d0xffffb7cb6bc0, elt\u003d0xffffbbe5598c) at /root/TLS_Plugin/VPP_J9/src/vnet/session/session_node.c:1696\n#19 0x0000fffff7a72744 in session_queue_node_fn (vm\u003d0xffffbad74640, node\u003d0xffffbcd7f440, frame\u003d0x0) at /root/TLS_Plugin/VPP_J9/src/vnet/session/session_node.c:2004\n#20 0x0000fffff73b302c in dispatch_node (vm\u003d0xffffbad74640, node\u003d0xffffbcd7f440, type\u003dVLIB_NODE_TYPE_INPUT, dispatch_state\u003dVLIB_NODE_STATE_POLLING, frame\u003d0x0, last_time_stamp\u003d9775975604295)\n    at /root/TLS_Plugin/VPP_J9/src/vlib/main.c:949\n#21 0x0000fffff73aeca0 in vlib_main_or_worker_loop (vm\u003d0xffffbad74640, is_main\u003d0) at /root/TLS_Plugin/VPP_J9/src/vlib/main.c:1578\n#22 0x0000fffff73ae5f0 in vlib_worker_loop (vm\u003d0xffffbad74640) at /root/TLS_Plugin/VPP_J9/src/vlib/main.c:1737\n#23 0x0000fffff73e4bfc in vlib_worker_thread_fn (arg\u003d0xffffb8178080) at /root/TLS_Plugin/VPP_J9/src/vlib/threads.c:1650\n#24 0x0000fffff73dfe20 in vlib_worker_thread_bootstrap_fn (arg\u003d0xffffb8178080) at /root/TLS_Plugin/VPP_J9/src/vlib/threads.c:448\n#25 0x0000fffff700d5c8 in start_thread (arg\u003d0x0) at ./nptl/pthread_create.c:442\n#26 0x0000fffff7075edc in thread_start () at ../sysdeps/unix/sysv/linux/aarch64/clone.S:79\n(gdb)",
      "revId": "6cada06816ba09f9f47f269625cf80c3c2659291",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9070fce_c6d1ddd5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 193
      },
      "writtenOn": "2025-01-09T16:12:45Z",
      "side": 1,
      "message": "We had a bug in this area that was fixed 3 months ago. Are you testing with latest code?",
      "parentUuid": "9fa10234_a5f3ba40",
      "revId": "6cada06816ba09f9f47f269625cf80c3c2659291",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67cc721f_f1385dee",
        "filename": "src/plugins/tlsopenssl/tls_openssl.c",
        "patchSetId": 8
      },
      "lineNbr": 444,
      "author": {
        "id": 193
      },
      "writtenOn": "2025-01-09T16:12:45Z",
      "side": 1,
      "message": "We need to handle these better, i.e., the if lower also check for wrote \u003c 0. Can\u0027t we keep on handling async operations closer to fifo operations, e.g., openssl_write_from_fifo_into_ssl? \n\nIdeally we want to keep tls logic independent of sync or async copy operations.",
      "range": {
        "startLine": 436,
        "startChar": 0,
        "endLine": 444,
        "endChar": 5
      },
      "revId": "6cada06816ba09f9f47f269625cf80c3c2659291",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffaf084b_b4997458",
        "filename": "src/plugins/tlsopenssl/tls_openssl.c",
        "patchSetId": 8
      },
      "lineNbr": 444,
      "author": {
        "id": 3138
      },
      "writtenOn": "2025-01-10T12:55:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "67cc721f_f1385dee",
      "range": {
        "startLine": 436,
        "startChar": 0,
        "endLine": 444,
        "endChar": 5
      },
      "revId": "6cada06816ba09f9f47f269625cf80c3c2659291",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b44cfcfd_974a8219",
        "filename": "src/plugins/tlsopenssl/tls_openssl.c",
        "patchSetId": 8
      },
      "lineNbr": 444,
      "author": {
        "id": 193
      },
      "writtenOn": "2025-01-14T00:54:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffaf084b_b4997458",
      "range": {
        "startLine": 436,
        "startChar": 0,
        "endLine": 444,
        "endChar": 5
      },
      "revId": "6cada06816ba09f9f47f269625cf80c3c2659291",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}