{
  "comments": [
    {
      "key": {
        "uuid": "d547ab6f_a3706d9e",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-07-22T04:08:38Z",
      "side": 1,
      "message": "I guess this is a limitation of the current design, i.e. we track the wrong thing in vlsl-\u003evls_wrk_index. However, given that you\u0027re not initializing this value, I suspect that using vlsl-\u003evls_wrk_index from might be enough :-)",
      "range": {
        "startLine": 62,
        "startChar": 6,
        "endLine": 62,
        "endChar": 23
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06ab884c_a69f14cd",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 2035
      },
      "writtenOn": "2020-07-22T11:07:15Z",
      "side": 1,
      "message": "Yes, fixed!",
      "parentUuid": "d547ab6f_a3706d9e",
      "range": {
        "startLine": 62,
        "startChar": 6,
        "endLine": 62,
        "endChar": 23
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fec2595d_f1647ef6",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-07-22T04:08:38Z",
      "side": 1,
      "message": "I wonder if just testing for vls-\u003emt_n_threads \u003e 1 is not enough.",
      "range": {
        "startLine": 138,
        "startChar": 6,
        "endLine": 138,
        "endChar": 55
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c24d10a6_aa0ebd9e",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 2035
      },
      "writtenOn": "2020-07-22T11:07:15Z",
      "side": 1,
      "message": "Now, vls worker is global, and vls allocation/free should be protected for all vcl workers.",
      "parentUuid": "fec2595d_f1647ef6",
      "range": {
        "startLine": 138,
        "startChar": 6,
        "endLine": 138,
        "endChar": 55
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f2dcc51_48194f5c",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-07-22T17:00:20Z",
      "side": 1,
      "message": "As long as we increment vls_mt_n_threads whenever adding a new worker, the two tests should be  identical. We don\u0027t want to increment vls_mt_n_threads?",
      "parentUuid": "c24d10a6_aa0ebd9e",
      "range": {
        "startLine": 138,
        "startChar": 6,
        "endLine": 138,
        "endChar": 55
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90d9091c_1f533d4c",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-07-22T04:08:38Z",
      "side": 1,
      "message": "Much better test! Now, we could maybe improve the places where we call this, but for now let\u0027s leave it like this. I guess it relies on us not bouncing a session between workers, but that should be okay, for now at least.\n\nProbably we need to add a test to make sure we don\u0027t try to migrate a session when vls_mt_supported() is not on.",
      "range": {
        "startLine": 250,
        "startChar": 2,
        "endLine": 250,
        "endChar": 52
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26cdb07b_4d5458f2",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 2035
      },
      "writtenOn": "2020-07-22T11:07:15Z",
      "side": 1,
      "message": "OK, add ASSERT here.",
      "parentUuid": "90d9091c_1f533d4c",
      "range": {
        "startLine": 250,
        "startChar": 2,
        "endLine": 250,
        "endChar": 52
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7c9040f_25e762ac",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-07-22T17:00:20Z",
      "side": 1,
      "message": "I was thinking that if we reach this point when vls_mt_supported() is false to just return.",
      "parentUuid": "26cdb07b_4d5458f2",
      "range": {
        "startLine": 250,
        "startChar": 2,
        "endLine": 250,
        "endChar": 52
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba05861b_abeb6a9d",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 265,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-07-22T04:08:38Z",
      "side": 1,
      "message": "This looks like trouble, because it\u0027s peeking from one worker\u0027s pool into another\u0027s. We need this https://gerrit.fd.io/r/c/vpp/+/27955/3/src/vcl/vcl_locked.c#1423 for the clone that happens lower.",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 265,
        "endChar": 14
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53982222_112e3601",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 265,
      "author": {
        "id": 2035
      },
      "writtenOn": "2020-07-22T11:07:15Z",
      "side": 1,
      "message": "Outside, we own vls-\u003elock and share the same vls with original vcl workerâ€˜s session, so it should be safe enough I think.",
      "parentUuid": "ba05861b_abeb6a9d",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 265,
        "endChar": 14
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0dca8a56_50459a00",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 265,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-07-22T17:00:20Z",
      "side": 1,
      "message": "That\u0027s the lock for a a session. The problem here is the fact one thread/vcl worker A is trying to read into the pool of another thread/vcl worker B. While that is happening, thread B could be reallocating the underlying vcl session pool (could happen when it accepts a new session for instance). That means A is probably copying a dangling reference that could already be corrupted. Pools are also not thread safe, so if B changes the underlying bitmap while A is trying to do a pool_elt_at_index(), results could be unexpected.",
      "parentUuid": "53982222_112e3601",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 265,
        "endChar": 14
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4dd9b7b_520dbd70",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 954,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-07-22T04:08:38Z",
      "side": 1,
      "message": "Shouldn\u0027t this just be vls_mt_add()?",
      "range": {
        "startLine": 951,
        "startChar": 0,
        "endLine": 954,
        "endChar": 15
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f141a80b_b05a7802",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 954,
      "author": {
        "id": 2035
      },
      "writtenOn": "2020-07-22T11:07:15Z",
      "side": 1,
      "message": "Fixed!",
      "parentUuid": "e4dd9b7b_520dbd70",
      "range": {
        "startLine": 951,
        "startChar": 0,
        "endLine": 954,
        "endChar": 15
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8590405d_de0ab624",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 1016,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-07-22T04:08:38Z",
      "side": 1,
      "message": "I think this needs to be vls_mt_supported(). Meaning, we don\u0027t need to concern ourselves with sharing the mq and session pool if all threads are actually vcl workers.",
      "range": {
        "startLine": 1015,
        "startChar": 0,
        "endLine": 1016,
        "endChar": 11
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62baaf56_f3911aa8",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 1016,
      "author": {
        "id": 2035
      },
      "writtenOn": "2020-07-22T11:07:15Z",
      "side": 1,
      "message": "Fixed!",
      "parentUuid": "8590405d_de0ab624",
      "range": {
        "startLine": 1015,
        "startChar": 0,
        "endLine": 1016,
        "endChar": 11
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a85dcc1f_7b55cca6",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 1120,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-07-22T04:08:38Z",
      "side": 1,
      "message": "Hm, shouldn\u0027t we remove the sessions in all vcl workers when one does a close? From the app\u0027s perspective the fd is shared, so the expectation is that it will be removed. \n\nCurrently we don\u0027t have an rpc that allows us to ask the other workers to remove the vcl sessions but we should probably add one.",
      "range": {
        "startLine": 1116,
        "startChar": 0,
        "endLine": 1120,
        "endChar": 19
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "575dabc6_75ba9bd4",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 1120,
      "author": {
        "id": 2035
      },
      "writtenOn": "2020-07-22T11:07:15Z",
      "side": 1,
      "message": "Fixed!",
      "parentUuid": "a85dcc1f_7b55cca6",
      "range": {
        "startLine": 1116,
        "startChar": 0,
        "endLine": 1120,
        "endChar": 19
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e23f4f7_64d6d67a",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 1139,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-07-22T04:08:38Z",
      "side": 1,
      "message": "Shouldn\u0027t this be just vls_mt_add()?",
      "range": {
        "startLine": 1136,
        "startChar": 5,
        "endLine": 1139,
        "endChar": 15
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16273180_09f87efa",
        "filename": "src/vcl/vcl_locked.c",
        "patchSetId": 3
      },
      "lineNbr": 1139,
      "author": {
        "id": 2035
      },
      "writtenOn": "2020-07-22T11:07:15Z",
      "side": 1,
      "message": "Fixed!",
      "parentUuid": "8e23f4f7_64d6d67a",
      "range": {
        "startLine": 1136,
        "startChar": 5,
        "endLine": 1139,
        "endChar": 15
      },
      "revId": "da17e822e88ac7899e62e447dd6ab67d07c3b492",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}