{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f4197233_5463eefa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 2352
      },
      "writtenOn": "2023-10-06T10:54:31Z",
      "side": 1,
      "message": "recheck\n\nUnrelated failure - \nrun LDP thru host stack iperf3 test                                 2.36 FAIL [ temp dir used by test case: /tmp/vpp-unittest-SanityTestCase ]\n\nMessage: \u0027Symlink to failed testcase directory: /tmp/vpp-failed-unittests/vpp-unittest-TestVPPInterfacesQemu-FAILED -\u003e vpp-unittest-TestVPPInterfacesQemu\u0027",
      "revId": "d3d2d4e2f9ec08c7874f64e7a894373a4a6ab1a6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1fa8e7f4_c1cb0a6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 2352
      },
      "writtenOn": "2023-10-06T12:46:09Z",
      "side": 1,
      "message": "hey folks - based on several reports of looping netlink messages, I backported the code from lcpng (https://github.com/pimvanpelt/lcpng/blob/main/lcpng_netlink.c#L246) which is immune to this problem. \n\nTwo folks who reported this problem, confirmed that this gerrit addresses their issue. Please take a look.",
      "revId": "d3d2d4e2f9ec08c7874f64e7a894373a4a6ab1a6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75f0e7b7_7250d16e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 366
      },
      "writtenOn": "2023-10-10T22:02:50Z",
      "side": 1,
      "message": "This seems like it would stop the problem in the typical case where asynchronous announcements are being processed, but it does not address the case where the netlink socket overflows and has to be re-opened. In this case, dump requests are sent and synchronous messages are processed. It seems like the same looping issue could occur.",
      "revId": "d3d2d4e2f9ec08c7874f64e7a894373a4a6ab1a6",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}