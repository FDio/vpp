{
  "comments": [
    {
      "key": {
        "uuid": "155b9317_285c2a68",
        "filename": "src/vnet/gso/node.c",
        "patchSetId": 18
      },
      "lineNbr": 499,
      "author": {
        "id": 680
      },
      "writtenOn": "2020-04-01T17:01:48Z",
      "side": 1,
      "message": "Do we need to worry about memsetting t0-\u003egho to 0? It was set to 0 by the called function prior to changing to pass by reference. The called function does not do that anymore. Maybe it should.",
      "revId": "272c808906554c5a7a4e9a036e85150e9a4daa2b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9488a6d8_08d43d44",
        "filename": "src/vnet/gso/node.c",
        "patchSetId": 18
      },
      "lineNbr": 499,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-04-02T15:35:14Z",
      "side": 1,
      "message": "In my opinion, we don\u0027t need memset inside the vnet_generic_header_offset_parser function as it will initialize memory runtime and will be expensive. We can save cycles by initializing local struct to \u00270\u0027.\nHere, it is unique case, where \"t\" is getting memory from vlib_add_trace dynamically. I am not sure, this memory is initialized to \u00270\u0027 or we need to memset it explicitly here by calling vnet_generic_header_offset_parser().",
      "parentUuid": "155b9317_285c2a68",
      "revId": "272c808906554c5a7a4e9a036e85150e9a4daa2b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}