{
  "comments": [
    {
      "key": {
        "uuid": "81211ec8_10eee621",
        "filename": "src/vat/vat.py",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-01-07T17:40:44Z",
      "side": 1,
      "message": "Should this be ValueError?\nint(\u0027foo\u0027)\nTraceback (most recent call last):\n  File \"\u003cinput\u003e\", line 1, in \u003cmodule\u003e\nValueError: invalid literal for int() with base 10: \u0027foo\u0027",
      "range": {
        "startLine": 113,
        "startChar": 8,
        "endLine": 113,
        "endChar": 27
      },
      "revId": "30d6d47ede34d4bb62302a8c2e413db75f093f78",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44d3fbb4_cd876217",
        "filename": "src/vat/vat.py",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-01-07T17:40:44Z",
      "side": 1,
      "message": "Should this be a class attribute?\n(also makes writing unit tests a little easier)",
      "range": {
        "startLine": 267,
        "startChar": 8,
        "endLine": 267,
        "endChar": 35
      },
      "revId": "30d6d47ede34d4bb62302a8c2e413db75f093f78",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb01f503_2c4ceda4",
        "filename": "src/vpp-api/python/vpp_papi/vpp_serializer.py",
        "patchSetId": 1
      },
      "lineNbr": 403,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-01-07T17:40:44Z",
      "side": 1,
      "message": "Think about if we want to add this context into the exception so that it is readily available to the handler without parsing?",
      "range": {
        "startLine": 402,
        "startChar": 0,
        "endLine": 403,
        "endChar": 61
      },
      "revId": "30d6d47ede34d4bb62302a8c2e413db75f093f78",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a8b222e_0af235a1",
        "filename": "src/vpp-api/python/vpp_papi/vpp_transport_shmem.py",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-01-07T17:40:44Z",
      "side": 1,
      "message": "Do you want a custom exception here, explaining why we\u0027re barfing and how to fix it?  If you would like me to add them, let me know.  I was thinking it could return what I\u0027m looking for and maybe the current value of LD_LIBRARY_PATH? (I imagine it could remove the need of ~50-200 LOC in test.) Overkill?",
      "range": {
        "startLine": 62,
        "startChar": 8,
        "endLine": 62,
        "endChar": 47
      },
      "revId": "30d6d47ede34d4bb62302a8c2e413db75f093f78",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}