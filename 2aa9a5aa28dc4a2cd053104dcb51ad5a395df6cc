{
  "comments": [
    {
      "key": {
        "uuid": "b7061fc1_fd635e0b",
        "filename": "src/vnet/ipsec/ah_encrypt.c",
        "patchSetId": 6
      },
      "lineNbr": 172,
      "author": {
        "id": 267
      },
      "writtenOn": "2019-05-20T12:22:52Z",
      "side": 1,
      "message": "prefetch counter here and increment later.",
      "revId": "2aa9a5aa28dc4a2cd053104dcb51ad5a395df6cc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ce8e412_f18d1392",
        "filename": "src/vnet/ipsec/ah_encrypt.c",
        "patchSetId": 6
      },
      "lineNbr": 172,
      "author": {
        "id": 189
      },
      "writtenOn": "2019-05-21T12:14:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7061fc1_fd635e0b",
      "revId": "2aa9a5aa28dc4a2cd053104dcb51ad5a395df6cc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43b2aa3d_4d623460",
        "filename": "src/vnet/ipsec/ah_encrypt.c",
        "patchSetId": 6
      },
      "lineNbr": 356,
      "author": {
        "id": 267
      },
      "writtenOn": "2019-05-20T12:22:52Z",
      "side": 1,
      "message": "can we set this in the previous loop, so we don\u0027t need to reload the SA in this loop? or save it on the pd?",
      "revId": "2aa9a5aa28dc4a2cd053104dcb51ad5a395df6cc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "866e9400_521b9067",
        "filename": "src/vnet/ipsec/ah_encrypt.c",
        "patchSetId": 6
      },
      "lineNbr": 356,
      "author": {
        "id": 189
      },
      "writtenOn": "2019-05-21T12:14:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43b2aa3d_4d623460",
      "revId": "2aa9a5aa28dc4a2cd053104dcb51ad5a395df6cc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7eddb634_2d6d16f2",
        "filename": "src/vnet/ipsec/ipsec_sa.c",
        "patchSetId": 6
      },
      "lineNbr": 254,
      "author": {
        "id": 267
      },
      "writtenOn": "2019-05-20T12:22:52Z",
      "side": 1,
      "message": "check for v6 tunnel here.",
      "revId": "2aa9a5aa28dc4a2cd053104dcb51ad5a395df6cc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7fe9ced_a77499bd",
        "filename": "src/vnet/ipsec/ipsec_sa.c",
        "patchSetId": 6
      },
      "lineNbr": 254,
      "author": {
        "id": 189
      },
      "writtenOn": "2019-05-21T12:14:04Z",
      "side": 1,
      "message": "AH uses these templates also in non-tunnel mode so checking won\u0027t help. Not sure if we can check ip family here in non tunnel mode though.. any ideas?",
      "parentUuid": "7eddb634_2d6d16f2",
      "revId": "2aa9a5aa28dc4a2cd053104dcb51ad5a395df6cc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df2a4c39_c20ae963",
        "filename": "src/vnet/ipsec/ipsec_sa.c",
        "patchSetId": 6
      },
      "lineNbr": 254,
      "author": {
        "id": 267
      },
      "writtenOn": "2019-05-26T18:49:46Z",
      "side": 1,
      "message": "there\u0027s no data copied from the SA here. so we can define const static headers in the ah_encrypt node.",
      "parentUuid": "e7fe9ced_a77499bd",
      "revId": "2aa9a5aa28dc4a2cd053104dcb51ad5a395df6cc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2112bf2b_ed4f7d5e",
        "filename": "src/vnet/ipsec/ipsec_sa.h",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 267
      },
      "writtenOn": "2019-05-20T12:22:52Z",
      "side": 1,
      "message": "can we keep the union?",
      "revId": "2aa9a5aa28dc4a2cd053104dcb51ad5a395df6cc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}