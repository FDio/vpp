{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6c58ff61_0a3bae7b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 361
      },
      "writtenOn": "2025-01-20T09:15:13Z",
      "side": 1,
      "message": "A few nitpicks, but the most important in my opinion is to at least test for APIs",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd7869bc_8a6f39e3",
        "filename": "src/plugins/sflow/sflow.c",
        "patchSetId": 15
      },
      "lineNbr": 97,
      "author": {
        "id": 361
      },
      "writtenOn": "2025-01-20T09:15:13Z",
      "side": 1,
      "message": "leftovers?",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36fbfac1_413b5aec",
        "filename": "src/plugins/sflow/sflow.c",
        "patchSetId": 15
      },
      "lineNbr": 97,
      "author": {
        "id": 2352
      },
      "writtenOn": "2025-01-20T15:24:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd7869bc_8a6f39e3",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "445e545c_c3383156",
        "filename": "src/plugins/sflow/sflow.c",
        "patchSetId": 15
      },
      "lineNbr": 167,
      "author": {
        "id": 361
      },
      "writtenOn": "2025-01-20T09:15:13Z",
      "side": 1,
      "message": "leftovers?",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd9acfd4_927e9746",
        "filename": "src/plugins/sflow/sflow.c",
        "patchSetId": 15
      },
      "lineNbr": 167,
      "author": {
        "id": 2352
      },
      "writtenOn": "2025-01-20T15:24:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "445e545c_c3383156",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "654a6f38_7f4741b3",
        "filename": "src/plugins/sflow/sflow.c",
        "patchSetId": 15
      },
      "lineNbr": 438,
      "author": {
        "id": 366
      },
      "writtenOn": "2025-01-23T16:48:23Z",
      "side": 1,
      "message": "You can edge-trigger on events by calling vlib_process_signal_event() when an interface is enabled/disabled or when sflow records are enqueued. Then you could retrieve the events here with vlib_process_get_events().\n\nThat approach could avoid the need for this process node wake up every 1s when sflow is not enabled. It would allow for the wait time to be set higher because an event signal could cause a longer wait to be terminated early.",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01f1d123_b0075e54",
        "filename": "src/plugins/sflow/sflow.c",
        "patchSetId": 15
      },
      "lineNbr": 567,
      "author": {
        "id": 361
      },
      "writtenOn": "2025-01-20T09:15:13Z",
      "side": 1,
      "message": "leftovers?",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79ddfcac_6ea99c9b",
        "filename": "src/plugins/sflow/sflow.c",
        "patchSetId": 15
      },
      "lineNbr": 567,
      "author": {
        "id": 2352
      },
      "writtenOn": "2025-01-20T15:24:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01f1d123_b0075e54",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a201263f_83b696e3",
        "filename": "src/plugins/sflow/sflow.c",
        "patchSetId": 15
      },
      "lineNbr": 577,
      "author": {
        "id": 361
      },
      "writtenOn": "2025-01-20T09:15:13Z",
      "side": 1,
      "message": "leftovers?",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e2d7262_071e4dc0",
        "filename": "src/plugins/sflow/sflow.c",
        "patchSetId": 15
      },
      "lineNbr": 577,
      "author": {
        "id": 2352
      },
      "writtenOn": "2025-01-20T15:24:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a201263f_83b696e3",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "adeab672_39f47ca1",
        "filename": "src/plugins/sflow/sflow_psample.c",
        "patchSetId": 15
      },
      "lineNbr": 39,
      "author": {
        "id": 366
      },
      "writtenOn": "2025-01-23T16:48:23Z",
      "side": 1,
      "message": "All of the code in this file and in sflow_usersock.c is indented by 2 chars. It\u0027s not consistent with the other files in the plugin.\n\nSimilarly, there seems to be a mix of camelCase and lowercase_with_underscores in function declarations in those 2 files, while the other files in the plugin seem to use lowercase_with_underscores. Its nice to be consistent and use one style. If not across the entire plugin, at least within a given file.",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79d6c663_9c4d5efa",
        "filename": "src/plugins/sflow/sflow_psample.c",
        "patchSetId": 15
      },
      "lineNbr": 57,
      "author": {
        "id": 366
      },
      "writtenOn": "2025-01-23T16:48:23Z",
      "side": 1,
      "message": "There are copies of setCloseOnExec() and setNonBlocking() in both sflow_psample.c and sflow_usersock.c. They appear to be identical. Can those be moved to some common file?",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5117fa0_dea31769",
        "filename": "test/test_sflow.py",
        "patchSetId": 15
      },
      "lineNbr": 39,
      "author": {
        "id": 361
      },
      "writtenOn": "2025-01-20T09:15:13Z",
      "side": 1,
      "message": "you should at least check the APIs in your test\nCLI is optional but API is mandatory",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f7f88fb_0c3b28f4",
        "filename": "test/test_sflow.py",
        "patchSetId": 15
      },
      "lineNbr": 39,
      "author": {
        "id": 2352
      },
      "writtenOn": "2025-01-20T15:24:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e5117fa0_dea31769",
      "revId": "4dbaded4d67c7c4bfe69885fc819140feab40b3e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}