{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3aa39d15_ab3e08f0",
        "filename": "src/vnet/tcp/tcp_input.c",
        "patchSetId": 3
      },
      "lineNbr": 2606,
      "author": {
        "id": 193
      },
      "writtenOn": "2025-08-07T06:12:08Z",
      "side": 1,
      "message": "First observation is that this comment should be c-style, above the function call. \n\nSecond, I think this works, although as you\u0027ve noted it will not be the most efficient. After thinking a bit about it, one option we could explore to improve this would be to add a session api that only removes the session from the lookup table (basically a wrapper for `session_lookup_del_session` that takes as input a transport connection) and allow the programmed cleanup to proceed without canceling it.",
      "range": {
        "startLine": 2606,
        "startChar": 0,
        "endLine": 2606,
        "endChar": 69
      },
      "revId": "02c8a9a27f5bae58a226567424c4a1911ab53898",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2180ab67_e4cf4893",
        "filename": "src/vnet/tcp/tcp_input.c",
        "patchSetId": 3
      },
      "lineNbr": 2606,
      "author": {
        "id": 3242
      },
      "writtenOn": "2025-08-11T08:50:02Z",
      "side": 1,
      "message": "I made a new patch for that you mentioned. Also, please find test code for it. The test shows the patch is working.",
      "parentUuid": "3aa39d15_ab3e08f0",
      "range": {
        "startLine": 2606,
        "startChar": 0,
        "endLine": 2606,
        "endChar": 69
      },
      "revId": "02c8a9a27f5bae58a226567424c4a1911ab53898",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cc432df_54ca2beb",
        "filename": "src/vnet/tcp/tcp_input.c",
        "patchSetId": 3
      },
      "lineNbr": 2606,
      "author": {
        "id": 3242
      },
      "writtenOn": "2025-08-20T04:46:51Z",
      "side": 1,
      "message": "I tried to use `session_lookup_del_session` instead of `tcp_cancel_cleanup\u0027 but it makes error at `NginxPerfCpsInterruptModeTest` in hs-test on aarch64. I reproduced the error on x86_64 then found hundreds of \"Failed requests\" from the test result log. I think, in `session_lookup_del_session` case, session possibly hold invalid index for a moment. Because, once the transport_connection is reused its index will be reused too even it\u0027s still referenced by previous session for a moment. If the previous session do something while the moment it\u0027ll be problematic.",
      "parentUuid": "2180ab67_e4cf4893",
      "range": {
        "startLine": 2606,
        "startChar": 0,
        "endLine": 2606,
        "endChar": 69
      },
      "revId": "02c8a9a27f5bae58a226567424c4a1911ab53898",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "472c1b2c_e42b36a7",
        "filename": "src/vnet/tcp/tcp_input.c",
        "patchSetId": 3
      },
      "lineNbr": 2606,
      "author": {
        "id": 193
      },
      "writtenOn": "2025-08-25T19:40:02Z",
      "side": 1,
      "message": "The transport is not reusable until it has been cleaned up, i.e., after `session_lookup_del_session` is called, the connection struct is not reused until it is freed and session only afterwards. The new connection is allocated a new index. \n\nI wonder now what is the difference between calling `session_lookup_del_session` and `session_transport_delete_request` which is called by `tcp_connection_cleanup_and_notify`.",
      "parentUuid": "8cc432df_54ca2beb",
      "range": {
        "startLine": 2606,
        "startChar": 0,
        "endLine": 2606,
        "endChar": 69
      },
      "revId": "02c8a9a27f5bae58a226567424c4a1911ab53898",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}