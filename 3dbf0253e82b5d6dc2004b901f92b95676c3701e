{
  "comments": [
    {
      "key": {
        "uuid": "79d28a3b_29436a8b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 361
      },
      "writtenOn": "2020-08-13T08:18:36Z",
      "side": 1,
      "message": "I think we said we should use \u0027gso\u0027 tag to avoid having a new tag",
      "revId": "3dbf0253e82b5d6dc2004b901f92b95676c3701e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e8f51d0_6f1080a9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-08-13T16:29:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "79d28a3b_29436a8b",
      "revId": "3dbf0253e82b5d6dc2004b901f92b95676c3701e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecdc9aea_a55a6499",
        "filename": "src/vnet/gso/gro.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 361
      },
      "writtenOn": "2020-08-13T08:17:47Z",
      "side": 1,
      "message": "can we pass vlib_time_now() as parameter it only need to be called once for both is_timeout() below and set_timeout()?",
      "revId": "3dbf0253e82b5d6dc2004b901f92b95676c3701e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f4ab605_af2b2c1e",
        "filename": "src/vnet/gso/gro.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-08-13T16:26:30Z",
      "side": 1,
      "message": "It is inside the functions for accuracy and readability purpose.\nSecondly, is_tineout function is called from device tx while set timeout function is called from device input node.",
      "parentUuid": "ecdc9aea_a55a6499",
      "revId": "3dbf0253e82b5d6dc2004b901f92b95676c3701e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cfaddf5_3e44e90f",
        "filename": "src/vnet/gso/gro.h",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 361
      },
      "writtenOn": "2020-08-13T08:17:47Z",
      "side": 1,
      "message": "can we pass vlib_time_now() as parameter it only need to be called once for both is_timeout() and set_timeout() above?",
      "revId": "3dbf0253e82b5d6dc2004b901f92b95676c3701e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b723848_f55ff2cb",
        "filename": "src/vnet/gso/gro.h",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-08-13T16:26:30Z",
      "side": 1,
      "message": "It is inside the functions for accuracy and readability purpose.",
      "parentUuid": "6cfaddf5_3e44e90f",
      "revId": "3dbf0253e82b5d6dc2004b901f92b95676c3701e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d8cbcf0_f9d6dda9",
        "filename": "src/vnet/gso/gro_func.h",
        "patchSetId": 1
      },
      "lineNbr": 425,
      "author": {
        "id": 361
      },
      "writtenOn": "2020-08-13T08:17:47Z",
      "side": 1,
      "message": "should be bi[0] \u003d bi[1] \u003d ~0 (0 could be a valid buffer index, ~0 is the customary way to sya invalid index in vpp)",
      "revId": "3dbf0253e82b5d6dc2004b901f92b95676c3701e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15c53e81_be270e10",
        "filename": "src/vnet/gso/gro_func.h",
        "patchSetId": 1
      },
      "lineNbr": 425,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-08-13T16:26:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d8cbcf0_f9d6dda9",
      "revId": "3dbf0253e82b5d6dc2004b901f92b95676c3701e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9ad9b28_0d876178",
        "filename": "src/vnet/gso/gro_func.h",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 361
      },
      "writtenOn": "2020-08-13T08:17:47Z",
      "side": 1,
      "message": "Instead of using a temporary bi[2], what about passing \u0027\u0026to\u0027:\nvnet_gro_flow_table_inline (vm, flow_table, from[0], \u0026to) and in vnet_gro_flow_table_inline (), instead of doing bi[0] \u003d bi / bi[1] \u003d b, do (to++)[0][0] \u003d bi / (to++)[0][0] \u003d b.\nThat way we can now rewrite this as:\n\nu32 *to__ \u003d to;\nu16 i;\nfor (i\u003d0;i\u003cn_left_from; i++)\n    vnet_gro_flow_table_inline (vm, flow_table, from[i], \u0026to__)\nreturn to__ - to;",
      "revId": "3dbf0253e82b5d6dc2004b901f92b95676c3701e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97a9f530_20ba25fd",
        "filename": "src/vnet/gso/gro_func.h",
        "patchSetId": 1
      },
      "lineNbr": 545,
      "author": {
        "id": 241
      },
      "writtenOn": "2020-08-13T16:26:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c9ad9b28_0d876178",
      "revId": "3dbf0253e82b5d6dc2004b901f92b95676c3701e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}