{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "149f74cf_9db797db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1263
      },
      "writtenOn": "2022-11-23T10:51:04Z",
      "side": 1,
      "message": "csit-2n-icx-perftest mrrANDnic_intel-xxv710ANDdrv_af_xdpAND1cAND64bANDeth-l2patch",
      "revId": "9a3a383a8820ce3171b472339c3c051ec4817107",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4728f3df_fa02bcc5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1263
      },
      "writtenOn": "2022-11-23T10:52:07Z",
      "side": 1,
      "message": "perftest-2n-icx mrrANDnic_intel-xxv710ANDdrv_af_xdpAND1cAND64bANDeth-l2patch",
      "revId": "9a3a383a8820ce3171b472339c3c051ec4817107",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e21796b9_c859d75f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 2837
      },
      "writtenOn": "2022-12-02T06:53:52Z",
      "side": 1,
      "message": "May I ask why is Verified 0(vote reset)?",
      "parentUuid": "149f74cf_9db797db",
      "revId": "9a3a383a8820ce3171b472339c3c051ec4817107",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71e052e0_23d7d02f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1263
      },
      "writtenOn": "2022-12-12T16:20:06Z",
      "side": 1,
      "message": "Ah. The job above is set as non-voting (as it is not reliable without human supervision). The \"voting\" flag is part of job configuration on Jenkins side, not easily visible from Gerrit side, so Gerrit guesses it may be voting and clears the previous vote. The workaround (I forgot to apply) is triggering the usual voting jobs again:\n\nrecheck",
      "parentUuid": "e21796b9_c859d75f",
      "revId": "9a3a383a8820ce3171b472339c3c051ec4817107",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5cf115f_8ca4e858",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1263
      },
      "writtenOn": "2022-12-12T16:20:06Z",
      "side": 1,
      "message": "recheck",
      "revId": "9a3a383a8820ce3171b472339c3c051ec4817107",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4bb9cc5e_69870753",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 2837
      },
      "writtenOn": "2022-12-16T02:51:01Z",
      "side": 1,
      "message": "Thanks for reply. The code have not merged yet. I have another small question: why Code-Review is +1 and \"Looks good to me, but someone else must approve\"",
      "parentUuid": "71e052e0_23d7d02f",
      "revId": "9a3a383a8820ce3171b472339c3c051ec4817107",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb68c506_2db7bbbd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1263
      },
      "writtenOn": "2022-12-20T12:59:57Z",
      "side": 1,
      "message": "Any registered user may vote +1, but only committers can merge. Adding the two listed as maintainers for af_xdp.",
      "parentUuid": "4bb9cc5e_69870753",
      "revId": "9a3a383a8820ce3171b472339c3c051ec4817107",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "372c315b_baac38d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 361
      },
      "writtenOn": "2022-12-20T13:15:15Z",
      "side": 1,
      "message": "Thanks for the heads up and contribution.\nI see several problems with this change:\n - the main one: keep retrying until we send all packets may improve NDR performance, but it will probably decrease PDR/MRR performance. I see Vratko ran some tests, but I\u0027m not sure what was the outcome?\n - if we decide we want to keep retrying until we send everything, then the loop over n_retries is no longer needed",
      "revId": "9a3a383a8820ce3171b472339c3c051ec4817107",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "367af217_f3866431",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1263
      },
      "writtenOn": "2022-12-22T17:40:22Z",
      "side": 1,
      "message": "\u003e I see Vratko ran some tests, but I\u0027m not sure what was the outcome?\n\nThe test I had run a month ago was MRR, and +11% improvement. Now I triggered two more runs (https://jenkins.fd.io/job/vpp-csit-verify-perf-master-ubuntu2204-x86_64-2n-icx/8 and /9), MRR improved by 14% this time.\nNDR and PDR are quite bad for parent, so this patch improves not by percents but by multiplies. NDR is 7x better, PDR 18x.\n\nThis was using l2-patch, so perhaps other tests would not have such big difference between NDR and PDR. But even then, maybe using some non-default (bigger) values for size of rxq and/or txq would make the performance more stable.\n\n\u003e the loop over n_retries is no longer needed\n\nYep. In case the compiler has not seen it, removing it may change the performance.\nAlso, remembering the long story ending with 35620, sometimes better performance is achieved by outputting in smaller chunks.",
      "parentUuid": "372c315b_baac38d0",
      "revId": "9a3a383a8820ce3171b472339c3c051ec4817107",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}