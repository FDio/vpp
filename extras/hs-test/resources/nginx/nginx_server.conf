master_process on;
worker_rlimit_nofile 10240;
worker_processes 2;
daemon off;

error_log /tmp/nginx/{{.LogPrefix}}-error.log info;

events {
  use epoll;
  worker_connections  10240;
  accept_mutex       off;
  multi_accept       off;
}

http {
  log_format access_log_fmt '$remote_addr - $remote_user [$time_local] '
                            '"$request" $status $body_bytes_sent '
                            '"$http_referer" "$http_user_agent" conn=$connection conn_reqs=$connection_requests';
  keepalive_timeout 300s;
  keepalive_requests 1000000;
  client_body_timeout {{.Timeout}}s;
  client_header_timeout {{.Timeout}}s;
  send_timeout {{.Timeout}}s;
  sendfile on;
  server {
    access_log /tmp/nginx/{{.LogPrefix}}-access.log access_log_fmt;
    listen {{.Port}};
    listen {{.PortSsl}} ssl;
    server_name {{.Address}};
    root /usr/share/nginx;
    ssl_certificate     /etc/nginx/ssl/localhost.crt;
    ssl_certificate_key /etc/nginx/ssl/localhost.key;
    http2 {{.Http2}};
    index index.html index.htm;
    # to allow POST on static pages
    error_page 405 =200 $uri;
    location ~ "/upload/([0-9a-zA-Z-.]*)$" {
      alias /usr/share/nginx/upload/$1;
      client_body_temp_path /tmp;
      client_max_body_size 200M;
      dav_methods PUT;
      create_full_put_path off;
      dav_access all:rw;
    }
    location /64B {
      return 200 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx';
    }
    location / {
      sendfile on;
    }
    # HTTP2 will not wait for the post body and return 200
    location = /test_upload {
      proxy_pass http://127.0.0.1:{{.Port}}/dev-null;
    }
    location = /dev-null {
      return 200;
    }
    # HTTP2 upload fix end
  }
}
