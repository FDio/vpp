// test tcp mtu probing
//
// verify that kernel issues an mtu probe packet if sysctl enabled
//
// configure a small initial mtu, then increase during connection lifetime
// observe a larger sized segment generated by tcp_mtu_probe

// enforce strict segment checking (and turn off gso) to measure probe length
--strict_segments
--ip_version=ipv6
--local_ip=fd::1
--gateway_ip=fd::2
--remote_ip=fd::3

// configure a small initial mtu
// increase cwnd to the minimum tcp_mtu_probe needs
`../common/defaults.sh
 ../common/set_sysctls.py \
	/proc/sys/net/ipv4/tcp_mtu_probing=2 \
	/proc/sys/net/ipv4/tcp_base_mss=512
 ip -6 route change fd::3 via fd::2 dev tun0 advmss 600 mtu lock 660 initcwnd 11
 ethtool -K tun0 gso off tso off
`

    0 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
   +0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
   +0 bind(3, ..., ...) = 0
   +0 listen(3, 1) = 0

  +.1 < S  0:0(0) win 50000 <mss 1460,nop,wscale 0>
   +0 > S. 0:0(0) ack 1 win 65535 <mss 600,nop,wscale 8>
   +0 < .  1:1(0) ack 1 win 50000

  +.1 accept(3, ..., ...) = 4

   // increase mtu
   +0 `ip -6 route change fd::3 via fd::2 dev tun0 advmss 1480 mtu lock 1520`

   // new write will use known mtu, except for larger probe in first segment
   // write must be much larger than probe, see size_needed
  +.1 write(4, ..., 4000) = 4000
   +0 > .  1:987(986) ack 1
   +0 > .  987:1587(600) ack 1
   +0 > .  1587:2187(600) ack 1
   +0 > .  2187:2787(600) ack 1
   +0 > .  2787:3387(600) ack 1
   +0 > P. 3387:3987(600) ack 1
   +0 > P. 3987:4001(14) ack 1
   +0 < .  1:1(0) ack 4001 win 50000

   // new write will use new mtu
  +.1 write(4, ..., 2000) = 2000
   +0 > .  4001:4987(986) ack 1
   +0 > .  4987:5973(986) ack 1
   +0 > P. 5973:6001(28) ack 1
   +0 < .  1:1(0) ack 6001 win 50000

`/tmp/sysctl_restore_${PPID}.sh`
