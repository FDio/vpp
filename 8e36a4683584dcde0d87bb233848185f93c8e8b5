{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "02c414ce_0a11a9e3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1388
      },
      "writtenOn": "2023-01-27T08:44:32Z",
      "side": 1,
      "message": "https://www.wireguard.com/protocol/\n\u003e The responder must wait to use the new session until it has recieved one encrypted session packet from the initiator, in order to provide key confirmation.\n\nIt\u0027s clear that this patch focuses on the established flag and events reporting. But what about sending data packets when the confirmation (data packet) has not received yet. It looks like the current implementation allows to send data packets without any confirmation. Do you think this also needs a fix?",
      "revId": "8e36a4683584dcde0d87bb233848185f93c8e8b5",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e19acdf_3fca1515",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 2280
      },
      "writtenOn": "2023-01-27T09:34:32Z",
      "side": 1,
      "message": "Sounds interesting. Yes, I think we should consider this in other fixes",
      "parentUuid": "02c414ce_0a11a9e3",
      "revId": "8e36a4683584dcde0d87bb233848185f93c8e8b5",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0074116e_27f57aa9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1388
      },
      "writtenOn": "2023-01-27T10:16:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2e19acdf_3fca1515",
      "revId": "8e36a4683584dcde0d87bb233848185f93c8e8b5",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4632642d_be395cbc",
        "filename": "src/plugins/wireguard/wireguard_input.c",
        "patchSetId": 3
      },
      "lineNbr": 853,
      "author": {
        "id": 1388
      },
      "writtenOn": "2023-01-27T08:38:11Z",
      "side": 1,
      "message": "https://www.wireguard.com/protocol/\n\u003e [...] The responder must wait to use the new session until it has recieved one encrypted session packet from the initiator, in order to provide key confirmation. [...] Therefore, after the initiator receives the response from the responder, if it has no data packets immediately queued up to send, it should send an empty packet, so as to provide this confirmation.\n\nIt looks like it does not necessarily will be a keepalive message. Instead, it might be a normal encrypted data packet. This packet will be a keepalive message only if the initiator\u0027s output queue is empty at that moment.\n\nWhat do you think?",
      "revId": "8e36a4683584dcde0d87bb233848185f93c8e8b5",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdb24eab_db51ca7e",
        "filename": "src/plugins/wireguard/wireguard_input.c",
        "patchSetId": 3
      },
      "lineNbr": 853,
      "author": {
        "id": 2280
      },
      "writtenOn": "2023-01-27T09:34:32Z",
      "side": 1,
      "message": "Yes I thought about it, but at the moment the initiator always sends a keepalive packet. Therefore, I just simplified the flag logic.\nBut you\u0027re right, it might be better to work with every encrypted packet.",
      "parentUuid": "4632642d_be395cbc",
      "revId": "8e36a4683584dcde0d87bb233848185f93c8e8b5",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de04d71f_ecfd9ac8",
        "filename": "src/plugins/wireguard/wireguard_input.c",
        "patchSetId": 3
      },
      "lineNbr": 853,
      "author": {
        "id": 1388
      },
      "writtenOn": "2023-01-27T10:16:25Z",
      "side": 1,
      "message": "If consider VPP to VPP communication, yes, a keepalive message is always sent by the initiator. But if consider communication with some other implementation, there might be an actual data packet.\n\nOK, if this is just flag logic simplification for the VPP to VPP case, then I think this looks good.",
      "parentUuid": "fdb24eab_db51ca7e",
      "revId": "8e36a4683584dcde0d87bb233848185f93c8e8b5",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8caa8628_4bbd3fd8",
        "filename": "src/plugins/wireguard/wireguard_input.c",
        "patchSetId": 3
      },
      "lineNbr": 853,
      "author": {
        "id": 2280
      },
      "writtenOn": "2023-01-27T18:41:20Z",
      "side": 1,
      "message": "I still think you are right and this should be done with every encrypted packet. Fixed (and found another small bug). Thanks",
      "parentUuid": "de04d71f_ecfd9ac8",
      "revId": "8e36a4683584dcde0d87bb233848185f93c8e8b5",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}