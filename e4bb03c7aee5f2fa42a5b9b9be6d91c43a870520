{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5133a89e_f40febae",
        "filename": "src/vnet/ipsec/ipsec_sa.c",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 1849
      },
      "writtenOn": "2024-02-22T10:27:21Z",
      "side": 1,
      "message": "Looks like a miss here. If it is AEAD, the key also should be updated with either sa-\u003ecrypto_async_key_index or sa-\u003ecrypto_sync_key_index.",
      "revId": "e4bb03c7aee5f2fa42a5b9b9be6d91c43a870520",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e880c4f6_2ebdfe7e",
        "filename": "src/vnet/ipsec/ipsec_sa.c",
        "patchSetId": 2
      },
      "lineNbr": 337,
      "author": {
        "id": 1849
      },
      "writtenOn": "2024-02-22T10:33:56Z",
      "side": 1,
      "message": "Please have a look at https://github.com/FDio/vpp/blob/master/src/vnet/ipsec/ipsec_sa.c#L407 to https://github.com/FDio/vpp/blob/master/src/vnet/ipsec/ipsec_sa.c#L412C38-L412C59.\n\nSo the idea should be:\n1. If sync, both crypto_sync_key_index and integ_sync_key_index should be updated.\n2. If async, \n  a. If AEAD, the sa-\u003ecrypto_async_key_index should be updated.\n  b. If not AEAD, there should be a new vnet_crypto_key_update_linked() function to update the async key expansion for async engines.",
      "revId": "e4bb03c7aee5f2fa42a5b9b9be6d91c43a870520",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1822628c_717ab7ae",
        "filename": "src/vnet/ipsec/ipsec_sa.c",
        "patchSetId": 2
      },
      "lineNbr": 337,
      "author": {
        "id": 1849
      },
      "writtenOn": "2024-02-22T10:36:10Z",
      "side": 1,
      "message": "Sorry, for sync, integ_sync_key_index should only be updated for not IPSEC_INTEG_ALG_NONE case. Please remember we don\u0027t have hash only async algs.",
      "parentUuid": "e880c4f6_2ebdfe7e",
      "revId": "e4bb03c7aee5f2fa42a5b9b9be6d91c43a870520",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label.                         A minumum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e4bb03c7aee5f2fa42a5b9b9be6d91c43a870520",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e4bb03c7aee5f2fa42a5b9b9be6d91c43a870520",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}