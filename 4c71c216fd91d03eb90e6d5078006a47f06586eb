{
  "comments": [
    {
      "key": {
        "uuid": "d8a9086c_daa78ed3",
        "filename": "src/vpp-api/python/vpp_papi/__init__.py",
        "patchSetId": 18
      },
      "lineNbr": 1,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-27T19:06:22Z",
      "side": 1,
      "message": "I wonder what is the best way to notify the tool this is actually intended.\nList everything in __all__?\nBut that is not really a question for this Change.",
      "range": {
        "startLine": 1,
        "startChar": 67,
        "endLine": 1,
        "endChar": 79
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "135d0f22_3ec9c767",
        "filename": "src/vpp-api/python/vpp_papi/__init__.py",
        "patchSetId": 18
      },
      "lineNbr": 1,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-06-27T23:02:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8a9086c_daa78ed3",
      "range": {
        "startLine": 1,
        "startChar": 67,
        "endLine": 1,
        "endChar": 79
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fdac1a3_07a6eaa0",
        "filename": "src/vpp-api/python/vpp_papi/__init__.py",
        "patchSetId": 18
      },
      "lineNbr": 1,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-28T15:34:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "135d0f22_3ec9c767",
      "range": {
        "startLine": 1,
        "startChar": 67,
        "endLine": 1,
        "endChar": 79
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "438874c1_69a8a00a",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 18
      },
      "lineNbr": 177,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-27T19:06:22Z",
      "side": 1,
      "message": "This will usually call VPPApiClientUnexpectedReturnValueError.__init__, but all the fancy arguments are left with default values, so I expect the final value to be garbled (msg shoved into rv and others left default).\n\nMy approach to super() usage is that methods (in this case __init__) have to have the same signature, and it is best to create a root class specially for that. Otherwise it is better to call KnownSuperClass.method(self, exact\u003dsignature).\nI got that approach after creating some errors, googling, and then giving [1] a good read. If you want to skim over it, search for \"signature\" and \"root\".\n\nNote that even if your code happens to work, downstream users may create different subclasses, and diamond inheritence will bite them when trying to integrate with your upstream code.\n\n[1] https://rhettinger.wordpress.com/2011/05/26/super-considered-super/",
      "range": {
        "startLine": 177,
        "startChar": 57,
        "endLine": 177,
        "endChar": 70
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16efdd3c_f994113b",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 18
      },
      "lineNbr": 246,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-27T19:06:22Z",
      "side": 1,
      "message": "If I understand the point of line 195 correctly, downstream is allowed to execute\n  VPPApiClient.VPPApiClientValueError \u003d MyErrorWithCompatibleSignatureAndSemantics\nbefore creating VPPApiClient instance, to make it raise the custom exception, right?\n\nIn that case, I thing the highlighted expression should read:\n  self.VPPApiClientValueError\n\nAt least that was needed when I tried a toy example (in Python 2.7).",
      "range": {
        "startLine": 246,
        "startChar": 22,
        "endLine": 246,
        "endChar": 44
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ff89868_b375e976",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 18
      },
      "lineNbr": 246,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-06-27T23:02:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "16efdd3c_f994113b",
      "range": {
        "startLine": 246,
        "startChar": 22,
        "endLine": 246,
        "endChar": 44
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9548e887_2ad75752",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 18
      },
      "lineNbr": 246,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-28T15:34:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2ff89868_b375e976",
      "range": {
        "startLine": 246,
        "startChar": 22,
        "endLine": 246,
        "endChar": 44
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c7d8589_a5aaf437",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 18
      },
      "lineNbr": 296,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-27T19:06:22Z",
      "side": 1,
      "message": "Perhaps use empty tuple as the sentinel value, in view of comments below.",
      "range": {
        "startLine": 296,
        "startChar": 30,
        "endLine": 296,
        "endChar": 34
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8876a4e1_4ab59c86",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 18
      },
      "lineNbr": 451,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-27T19:06:22Z",
      "side": 1,
      "message": "and here:\n  cls.VPPApiClientError",
      "range": {
        "startLine": 451,
        "startChar": 22,
        "endLine": 451,
        "endChar": 39
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42dd826a_5b609914",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 18
      },
      "lineNbr": 451,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-28T15:34:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8876a4e1_4ab59c86",
      "range": {
        "startLine": 451,
        "startChar": 22,
        "endLine": 451,
        "endChar": 39
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a341f4ed_ab934ffc",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 18
      },
      "lineNbr": 566,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-27T19:06:22Z",
      "side": 1,
      "message": "I guess handling of apidir (class variable instead of instance variable) suggests VPPApiClient instance is not supposed to encounter a completely different VPP version on second connect. Second connect can see the same version of VPP restarted with different plugins activated, but error numbers do not depend on plugins (yet).\n\nBut I would still find it safer to wipe strerrors caches here, just to be sure.",
      "range": {
        "startLine": 566,
        "startChar": 39,
        "endLine": 566,
        "endChar": 40
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d89bb53_8f9d7bd9",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 18
      },
      "lineNbr": 566,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-06-27T23:02:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a341f4ed_ab934ffc",
      "range": {
        "startLine": 566,
        "startChar": 39,
        "endLine": 566,
        "endChar": 40
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc0a5b09_13f673bf",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 18
      },
      "lineNbr": 798,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-27T19:06:22Z",
      "side": 1,
      "message": "self.VPPApiClientRuntimeError :)\n\nAlso, do not raise, return empty list instead (without caching), so that line 810 works.",
      "range": {
        "startLine": 798,
        "startChar": 22,
        "endLine": 798,
        "endChar": 34
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cae91013_f7b4e7ad",
        "filename": "src/vpp-api/python/vpp_papi/vpp_papi.py",
        "patchSetId": 18
      },
      "lineNbr": 798,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-06-27T23:02:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc0a5b09_13f673bf",
      "range": {
        "startLine": 798,
        "startChar": 22,
        "endLine": 798,
        "endChar": 34
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac0bf30b_a9cb1ce2",
        "filename": "src/vpp/api/vpe.api",
        "patchSetId": 18
      },
      "lineNbr": 22,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-27T19:06:22Z",
      "side": 1,
      "message": "Forward incompatible change, so I would use \"1.2.0\".",
      "range": {
        "startLine": 22,
        "startChar": 17,
        "endLine": 22,
        "endChar": 24
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e53a20ab_f55bf63a",
        "filename": "src/vpp/api/vpe.api",
        "patchSetId": 18
      },
      "lineNbr": 22,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-06-27T23:02:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac0bf30b_a9cb1ce2",
      "range": {
        "startLine": 22,
        "startChar": 17,
        "endLine": 22,
        "endChar": 24
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a188243_08a160e4",
        "filename": "src/vpp/api/vpe.api",
        "patchSetId": 18
      },
      "lineNbr": 22,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-28T15:34:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e53a20ab_f55bf63a",
      "range": {
        "startLine": 22,
        "startChar": 17,
        "endLine": 22,
        "endChar": 24
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "333041ee_d43ff25f",
        "filename": "test/vpp_papi_provider.py",
        "patchSetId": 18
      },
      "lineNbr": 172,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-27T19:06:22Z",
      "side": 1,
      "message": "Good idea, but why not make the connectedness tracked already in VPPApiClient instances?",
      "range": {
        "startLine": 172,
        "startChar": 8,
        "endLine": 172,
        "endChar": 23
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a31a834c_c6194be4",
        "filename": "test/vpp_papi_provider.py",
        "patchSetId": 18
      },
      "lineNbr": 172,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-06-27T23:02:09Z",
      "side": 1,
      "message": "Done.  This was a remnant from before when Ole suggested the changes move to papi.",
      "parentUuid": "333041ee_d43ff25f",
      "range": {
        "startLine": 172,
        "startChar": 8,
        "endLine": 172,
        "endChar": 23
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c261a79a_5c47795f",
        "filename": "test/vpp_papi_provider.py",
        "patchSetId": 18
      },
      "lineNbr": 172,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-06-28T15:34:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a31a834c_c6194be4",
      "range": {
        "startLine": 172,
        "startChar": 8,
        "endLine": 172,
        "endChar": 23
      },
      "revId": "4c71c216fd91d03eb90e6d5078006a47f06586eb",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}