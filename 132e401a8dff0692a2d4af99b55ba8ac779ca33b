{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6905d0b5_3ed7aa0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1737
      },
      "writtenOn": "2022-06-27T13:22:03Z",
      "side": 1,
      "message": "I tested dtls proto in my case and found session bug.\nMy case is: \nI started firstly a dtls server app which will disconnect any accepted client in session_cb_vft_t::session_accept_callback and then started 10000 dtls clients which will disconnect server after in session_cb_vft_t::session_connected_callback. The following crash will occur.\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7ff99018f700 (LWP 27278)]\n0x00007ffff73de5c1 in __asan::FakeStack::AddrIsInFakeStack(unsigned long, unsigned long*, unsigned long*) () from /root/net-base/script/../lib/libasan.so.5\nMissing separate debuginfos, use: debuginfo-install glibc-2.17-196.el7.x86_64 libgcc-4.8.5-16.el7.x86_64 libstdc++-4.8.5-16.el7.x86_64 libuuid-2.23.2-43.el7.x86_64\n(gdb) bt\n#0  0x00007ffff73de5c1 in __asan::FakeStack::AddrIsInFakeStack(unsigned long, unsigned long*, unsigned long*) () from /root/net-base/script/../lib/libasan.so.5\n#1  0x00007ffff74c5a11 in __asan::ThreadStackContainsAddress(__sanitizer::ThreadContextBase*, void*) () from /root/net-base/script/../lib/libasan.so.5\n#2  0x00007ffff74dfdc2 in __sanitizer::ThreadRegistry::FindThreadContextLocked(bool (*)(__sanitizer::ThreadContextBase*, void*), void*) () from /root/net-base/script/../lib/libasan.so.5\n#3  0x00007ffff74c6e5a in __asan::FindThreadByStackAddress(unsigned long) () from /root/net-base/script/../lib/libasan.so.5\n#4  0x00007ffff73d8fb6 in __asan::GetStackAddressInformation(unsigned long, unsigned long, __asan::StackAddressDescription*) () from /root/net-base/script/../lib/libasan.so.5\n#5  0x00007ffff73da3f9 in __asan::AddressDescription::AddressDescription(unsigned long, unsigned long, bool) () from /root/net-base/script/../lib/libasan.so.5\n#6  0x00007ffff73dce51 in __asan::ErrorGeneric::ErrorGeneric(unsigned int, unsigned long, unsigned long, unsigned long, unsigned long, bool, unsigned long) () from /root/net-base/script/../lib/libasan.so.5\n#7  0x00007ffff74c0c2a in __asan::ReportGenericError(unsigned long, unsigned long, unsigned long, unsigned long, bool, unsigned long, unsigned int, bool) () from /root/net-base/script/../lib/libasan.so.5\n#8  0x00007ffff74c1747 in __asan_report_load1 () from /root/net-base/script/../lib/libasan.so.5\n#9  0x00007ffff5c5e496 in transport_connection_deschedule (tc\u003d0x7ffeb8fa1a40) at /root/code/net-base/.vpp-22.02/src/vnet/session/transport.h:218\n#10 0x00007ffff5c7087f in session_tx_maybe_reschedule (wrk\u003d0x7ffeb5424980, ctx\u003d0x7ffeb54249c0, elt\u003d0x7ffeb8ea58ac) at /root/code/net-base/.vpp-22.02/src/vnet/session/session_node.c:1197\n#11 0x00007ffff5c73526 in session_tx_fifo_read_and_snd_i (wrk\u003d0x7ffeb5424980, node\u003d0x7ffeb5420100, elt\u003d0x7ffeb8ea58ac, n_tx_packets\u003d0x7ff990390c10, peek_data\u003d0 \u0027\\000\u0027) at /root/code/net-base/.vpp-22.02/src/vnet/session/session_node.c:1400\n#12 0x00007ffff5c73787 in session_tx_fifo_dequeue_and_snd (wrk\u003d0x7ffeb5424980, node\u003d0x7ffeb5420100, e\u003d0x7ffeb8ea58ac, n_tx_packets\u003d0x7ff990390c10) at /root/code/net-base/.vpp-22.02/src/vnet/session/session_node.c:1426\n#13 0x00007ffff5c75288 in session_event_dispatch_io (wrk\u003d0x7ffeb5424980, node\u003d0x7ffeb5420100, elt\u003d0x7ffeb8ea58ac, n_tx_packets\u003d0x7ff990390c10) at /root/code/net-base/.vpp-22.02/src/vnet/session/session_node.c:1600\n#14 0x00007ffff5c798be in session_queue_node_fn (vm\u003d0x7ffeb2efe500, node\u003d0x7ffeb5420100, frame\u003d0x0) at /root/code/net-base/.vpp-22.02/src/vnet/session/session_node.c:1822\n#15 0x00007ffff476cabb in dispatch_node (vm\u003d0x7ffeb2efe500, node\u003d0x7ffeb5420100, type\u003dVLIB_NODE_TYPE_INPUT, dispatch_state\u003dVLIB_NODE_STATE_POLLING, frame\u003d0x0, last_time_stamp\u003d1214765696381964) at /root/code/net-base/.vpp-22.02/src/vlib/main.c:975\n#16 0x00007ffff47719a6 in vlib_main_or_worker_loop (vm\u003d0x7ffeb2efe500, is_main\u003d0) at /root/code/net-base/.vpp-22.02/src/vlib/main.c:1569\n#17 0x00007ffff47735ca in vlib_worker_loop (vm\u003d0x7ffeb2efe500) at /root/code/net-base/.vpp-22.02/src/vlib/main.c:1734\n#18 0x00007ffff47c6e18 in vlib_worker_thread_fn (arg\u003d0x7ffeb1522700) at /root/code/net-base/.vpp-22.02/src/vlib/threads.c:1532\n#19 0x00007ffff3f43790 in clib_calljmp () at /root/code/net-base/.vpp-22.02/src/vppinfra/longjmp.S:123\n#20 0x00007ff99018edd0 in ?? ()\n#21 0x00007ffff47ba816 in vlib_worker_thread_bootstrap_fn (arg\u003d0x7ffeb1522700) at /root/code/net-base/.vpp-22.02/src/vlib/threads.c:413\nBacktrace stopped: previous frame inner to this frame (corrupt stack?)\n(gdb) fr 11\n#11 0x00007ffff5c73526 in session_tx_fifo_read_and_snd_i (wrk\u003d0x7ffeb5424980, node\u003d0x7ffeb5420100, elt\u003d0x7ffeb8ea58ac, n_tx_packets\u003d0x7ff990390c10, peek_data\u003d0 \u0027\\000\u0027) at /root/code/net-base/.vpp-22.02/src/vnet/session/session_node.c:1400\n1400    /root/code/net-base/.vpp-22.02/src/vnet/session/session_node.c: No such file or directory.\n(gdb) p ctx-\u003es-\u003esession_state\n$1 \u003d 11 \u0027\\v\u0027\n(gdb) p ctx-\u003etransport_vft-\u003etransport_options.tx_type\n$2 \u003d TRANSPORT_TX_DGRAM\n(gdb) ",
      "revId": "132e401a8dff0692a2d4af99b55ba8ac779ca33b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8509ab26_8e6144da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 193
      },
      "writtenOn": "2022-06-27T21:10:45Z",
      "side": 1,
      "message": "Although ASAN is right, this should not have any impact as pools are per thread so that memory is not released for other workers to consume. \n\nIf we want to avoid this, we need do it in udp not in session layer, since udp should not delete the session in push_header.",
      "revId": "132e401a8dff0692a2d4af99b55ba8ac779ca33b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}