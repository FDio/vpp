{
  "comments": [
    {
      "key": {
        "uuid": "935a24b0_24f3e56c",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-06-25T00:39:47Z",
      "side": 1,
      "message": "If we don\u0027t have enough space, we stop here. This is a bit forceful, as we don\u0027t test if we\u0027re retracting our previously advertised window, but that should be better than sending partial acks. Could you check if it works as expected?",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 128,
        "endChar": 57
      },
      "revId": "f8a3f53d9d52dbeb7bfde6288be57a7546689463",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "478d4b3f_44bb1136",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-06-25T02:10:55Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "935a24b0_24f3e56c",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 128,
        "endChar": 57
      },
      "revId": "f8a3f53d9d52dbeb7bfde6288be57a7546689463",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4c087c_2ccbf953",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-06-25T02:10:55Z",
      "side": 1,
      "message": "I wonder why this is needed, and what causes such a condition.\nBy this special handling, the peer can send more than the RX fifo can enqueue.",
      "revId": "f8a3f53d9d52dbeb7bfde6288be57a7546689463",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07bb1a98_873e53bd",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 193
      },
      "writtenOn": "2020-06-25T03:42:20Z",
      "side": 1,
      "message": "True, but I\u0027d expect this to almost never happen (thus the PREDICT_FALSE). Still, if it does, we should only see rx enqueue errors, which should be harmless.",
      "parentUuid": "9c4c087c_2ccbf953",
      "revId": "f8a3f53d9d52dbeb7bfde6288be57a7546689463",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f64ce539_f5555c24",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-06-26T06:20:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "07bb1a98_873e53bd",
      "revId": "f8a3f53d9d52dbeb7bfde6288be57a7546689463",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "284214e4_56c847a3",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-06-30T02:02:24Z",
      "side": 1,
      "message": "This if-condition hits sometimes (not rarely). It happens typically when the previous receive window (which is calculated by this function) was set larger than the available space by round-up calculation and FIFO data is not dequeued recently.\nSo if we stop doing round-up, then this should hardly happen.",
      "parentUuid": "f64ce539_f5555c24",
      "revId": "f8a3f53d9d52dbeb7bfde6288be57a7546689463",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f55d6ff_919b5b11",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1561
      },
      "writtenOn": "2020-06-30T02:19:44Z",
      "side": 1,
      "message": "Sorry. I wrote \"So if we stop doing round-up, then this should hardly happen\", but it may be wrong.\nI had to write like this : Once a round-up calculation makes it exceed the available space, many subsequent calls would hit this condition too. So if we stop doing round-up, then the chance to trigger the above condition should be greatly reduced.",
      "parentUuid": "284214e4_56c847a3",
      "revId": "f8a3f53d9d52dbeb7bfde6288be57a7546689463",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}