{
  "comments": [
    {
      "key": {
        "uuid": "98750860_656a5243",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 4
      },
      "lineNbr": 611,
      "author": {
        "id": 193
      },
      "writtenOn": "2019-10-03T19:59:25Z",
      "side": 1,
      "message": "On the else branch initialize csum to 0 and mark the buffer as having VNET_BUFFER_F_OFFLOAD_TCP_CKSUM\n\nThat is, deal with all l4 offloads here and deal with ip offload in tcp_output.",
      "range": {
        "startLine": 611,
        "startChar": 2,
        "endLine": 611,
        "endChar": 5
      },
      "revId": "b55001a9a371ecf67d989a3516cdfbbb22abc84a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7382da0c_558875e5",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 4
      },
      "lineNbr": 2357,
      "author": {
        "id": 193
      },
      "writtenOn": "2019-10-03T19:59:25Z",
      "side": 1,
      "message": "Move to tcp_compute_checksum",
      "range": {
        "startLine": 2353,
        "startChar": 0,
        "endLine": 2357,
        "endChar": 5
      },
      "revId": "b55001a9a371ecf67d989a3516cdfbbb22abc84a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a612bfbd_5c14753a",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 4
      },
      "lineNbr": 2357,
      "author": {
        "id": 11
      },
      "writtenOn": "2019-10-03T20:04:42Z",
      "side": 1,
      "message": "I actually thought it is better to do it here, where setting of the offload bit is together with l3/l4_hdr_offset above, which is required for checksum offload to work properly.  Separating out setting of hdr_offset and offload bit may be more confusing to follow.",
      "parentUuid": "7382da0c_558875e5",
      "range": {
        "startLine": 2353,
        "startChar": 0,
        "endLine": 2357,
        "endChar": 5
      },
      "revId": "b55001a9a371ecf67d989a3516cdfbbb22abc84a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c195ca66_a5c22838",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 4
      },
      "lineNbr": 2357,
      "author": {
        "id": 193
      },
      "writtenOn": "2019-10-04T00:34:55Z",
      "side": 1,
      "message": "Well, we could move the l4_hdr_offset to the csum function as well. Not sure if any other infra component depends on it. If yes, we can just set it when pushing the tcp header. \n\nOtherwise, we do this predict_true twice per packet. Once when we compute the csum and once here",
      "parentUuid": "a612bfbd_5c14753a",
      "range": {
        "startLine": 2353,
        "startChar": 0,
        "endLine": 2357,
        "endChar": 5
      },
      "revId": "b55001a9a371ecf67d989a3516cdfbbb22abc84a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75609891_00dd4977",
        "filename": "src/vnet/tcp/tcp_output.c",
        "patchSetId": 4
      },
      "lineNbr": 2357,
      "author": {
        "id": 11
      },
      "writtenOn": "2019-10-04T02:11:15Z",
      "side": 1,
      "message": "I have no objection of putting l4_hdr_offset in csum function. Patch set 3 was in fact setting the offload bit there but we had the IPsec test failure due to checksum error.  When setting offload bit is moved here, the IPsec test now passes. Somehow TCP checksum was 0 in the test case. How the bit got cleared between session_fifo_read_and_send node which push the TCP header including calling csum function and tcp-output node here is not clear.  In fact, vlib_buffer_push_ip4 function does set both l3/l4_hdr_offset already but vlib_buffer_push_ip6 does not. For most efficient code, we can make both push_ip4/ip6 set the l3/l4_hdr_offset, set the offload bit in csum function, and remove setting l3/l4_hdr_offset here, if we root cause why TCP offload bit is cleared.",
      "parentUuid": "c195ca66_a5c22838",
      "range": {
        "startLine": 2353,
        "startChar": 0,
        "endLine": 2357,
        "endChar": 5
      },
      "revId": "b55001a9a371ecf67d989a3516cdfbbb22abc84a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}