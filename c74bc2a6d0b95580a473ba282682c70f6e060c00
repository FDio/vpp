{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5fc91911_3d1c3d6d",
        "filename": "src/plugins/nat/nat44-ed/nat44_ed.c",
        "patchSetId": 2
      },
      "lineNbr": 3198,
      "author": {
        "id": 1568
      },
      "writtenOn": "2022-11-26T17:22:59Z",
      "side": 1,
      "message": "Please look into rest of nat44-ed code base how non existent vrf is handled. We are non table dependent all over NAT - fib_table_find_or_create_and_lock is used if we are creating any new nat object dependent on fib.",
      "revId": "c74bc2a6d0b95580a473ba282682c70f6e060c00",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b0a909c_ba82b53e",
        "filename": "src/plugins/nat/nat44-ed/nat44_ed.c",
        "patchSetId": 2
      },
      "lineNbr": 3198,
      "author": {
        "id": 2841
      },
      "writtenOn": "2022-11-27T02:28:18Z",
      "side": 1,
      "message": "I have looked into most of nat44-ed code, and the use of fib_table_find_or_create_and_lock. \n\nI think this will increase vpp\u0027s robustness in case api caller or debug user incautiously or wrongly use a nonexisted vrf to set session limit. Should we consider this situationï¼Ÿ",
      "parentUuid": "5fc91911_3d1c3d6d",
      "revId": "c74bc2a6d0b95580a473ba282682c70f6e060c00",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label.                         A minumum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c74bc2a6d0b95580a473ba282682c70f6e060c00",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c74bc2a6d0b95580a473ba282682c70f6e060c00",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}