{
  "comments": [
    {
      "key": {
        "uuid": "7a51691d_88366502",
        "filename": "src/vlib/unix/cli.c",
        "patchSetId": 1
      },
      "lineNbr": 2648,
      "author": {
        "id": 278
      },
      "writtenOn": "2017-07-20T19:12:21Z",
      "side": 1,
      "message": "In the previous code I deliberately checked whether it was in the RUNDIR to avoid making arbitrary directories. I\u0027m of that sysadmin mindset where if it\u0027s not in /run (ie, ephemeral) then the sysadmin should mkdir those places explicitly.",
      "revId": "4d22a3b04b0fa44850acbd0b5318d409a6ac6494",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a51691d_6320ea9b",
        "filename": "src/vlib/unix/cli.c",
        "patchSetId": 1
      },
      "lineNbr": 2648,
      "author": {
        "id": 9
      },
      "writtenOn": "2017-07-20T20:21:36Z",
      "side": 1,
      "message": "shouldn\u0027t be to hard to check that path starts with /run? is that ok for you?",
      "parentUuid": "7a51691d_88366502",
      "revId": "4d22a3b04b0fa44850acbd0b5318d409a6ac6494",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a51691d_4373aeb1",
        "filename": "src/vlib/unix/cli.c",
        "patchSetId": 1
      },
      "lineNbr": 2648,
      "author": {
        "id": 278
      },
      "writtenOn": "2017-07-20T20:47:38Z",
      "side": 1,
      "message": "Yep, it\u0027s just a dumb safety thing.",
      "parentUuid": "7a51691d_6320ea9b",
      "revId": "4d22a3b04b0fa44850acbd0b5318d409a6ac6494",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a51691d_0874b5cd",
        "filename": "src/vlib/unix/main.c",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 7
      },
      "writtenOn": "2017-07-20T18:34:53Z",
      "side": 1,
      "message": "Any reason not to add a set function and skip the weak definition? I see that there\u0027s already a \"get\" function. Weak references are mainly good for trouble, unless they\u0027re absolutely necessary...",
      "revId": "4d22a3b04b0fa44850acbd0b5318d409a6ac6494",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a51691d_a831210d",
        "filename": "src/vlib/unix/main.c",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 278
      },
      "writtenOn": "2017-07-20T19:12:21Z",
      "side": 1,
      "message": "What he said. My mileage with weak references has varied widely.",
      "parentUuid": "7a51691d_0874b5cd",
      "revId": "4d22a3b04b0fa44850acbd0b5318d409a6ac6494",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a51691d_a326e2b8",
        "filename": "src/vlib/unix/main.c",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 9
      },
      "writtenOn": "2017-07-20T20:19:04Z",
      "side": 1,
      "message": "Same scheme like with plugin path, vlib sets weak default, vpp as application sets default, user is able to override default.\n\nIn previous code VPP path was defined inside vlib which is wrong, we are trying to keep vlib as independent library not directly tied to vpp.",
      "parentUuid": "7a51691d_a831210d",
      "revId": "4d22a3b04b0fa44850acbd0b5318d409a6ac6494",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a4e6583_eb4a8526",
        "filename": "src/vlib/unix/main.c",
        "patchSetId": 1
      },
      "lineNbr": 451,
      "author": {
        "id": 278
      },
      "writtenOn": "2017-07-28T12:53:42Z",
      "side": 1,
      "message": "just noticed there\u0027s no doc for the new option here",
      "revId": "4d22a3b04b0fa44850acbd0b5318d409a6ac6494",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}