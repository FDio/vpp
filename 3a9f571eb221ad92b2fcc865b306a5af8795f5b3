{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "682e64d7_cde7b290",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 2512
      },
      "writtenOn": "2024-10-10T15:59:56Z",
      "side": 1,
      "message": "Hello, \nThis commit adds printing a timestamp into DAQ_PktHdr_t header when a packet is enqueued with libdaq. Without this change multiple snort alert formats (except possibly alert_syslog, that goes with syslog\u0027s own TS) would display 0s timestamp for every recorded packet.\n\nAnother change in snort_api.c file fixes disabling interface\u0027s feature when interface gets detached from instance (wrong enum value used)",
      "revId": "3a9f571eb221ad92b2fcc865b306a5af8795f5b3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1acc9ef_fda2324e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 2512
      },
      "writtenOn": "2024-10-10T16:09:38Z",
      "side": 1,
      "message": "rebuild request",
      "revId": "3a9f571eb221ad92b2fcc865b306a5af8795f5b3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79923be6_ac6e4b63",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 2512
      },
      "writtenOn": "2024-10-10T17:57:28Z",
      "side": 1,
      "message": "recheck",
      "parentUuid": "c1acc9ef_fda2324e",
      "revId": "3a9f571eb221ad92b2fcc865b306a5af8795f5b3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label.                         A minumum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3a9f571eb221ad92b2fcc865b306a5af8795f5b3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3a9f571eb221ad92b2fcc865b306a5af8795f5b3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}