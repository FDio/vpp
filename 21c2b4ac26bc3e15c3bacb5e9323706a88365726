{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "84482058_7b1d1829",
        "filename": "src/vnet/ip/ip_sas.c",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 366
      },
      "writtenOn": "2022-12-09T18:41:12Z",
      "side": 1,
      "message": "Why is this part of the change necessary? What causes you to need to use the most recently added address?",
      "revId": "21c2b4ac26bc3e15c3bacb5e9323706a88365726",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "128338b1_79cf019d",
        "filename": "src/vnet/ip/ip_sas.c",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 2512
      },
      "writtenOn": "2022-12-12T16:14:28Z",
      "side": 1,
      "message": "Without this change the \"Multi Connecteds\" test\nfrom the test_neighbor test set starts failing\nin this part (after self.pg1 is configured with \"10.0.1.1\"):\n\n# add a local address in the same subnet\n#  the source addresses are equivalent. VPP happens to\n#  choose the last one that was added\nconn3 \u003d VppIpInterfaceAddress(self, self.pg1, \"10.0.1.2\", 24).add_vpp_config()\n\nrxs \u003d self.send_and_expect(self.pg0, [p2], self.pg1)\nfor rx in rxs: \n    self.verify_arp_req(rx, self.pg1.local_mac, \"10.0.1.2\", \"10.0.1.128\")\n\nCurrently, with two local addresses set on the intf, if one issues\n        vpp# ping 10.0.1.128\nthen the ARP request is checked to have the source address set to 10.0.1.2\nBut icmp packets would be still sourced with 10.0.1.1.\n\nSo indeed, maybe I should keep ip4_sas_by_sw_if_index() unchanged,\nhave the source address for ARP packet selected with it,\nand modify the \"Multi Connecteds\" test instead, to reflect code changes.",
      "parentUuid": "84482058_7b1d1829",
      "revId": "21c2b4ac26bc3e15c3bacb5e9323706a88365726",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62e8cff3_9251508a",
        "filename": "src/vnet/ip/ip_sas.c",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 2512
      },
      "writtenOn": "2023-09-05T13:12:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "128338b1_79cf019d",
      "revId": "21c2b4ac26bc3e15c3bacb5e9323706a88365726",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label.                         A minumum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "21c2b4ac26bc3e15c3bacb5e9323706a88365726",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "21c2b4ac26bc3e15c3bacb5e9323706a88365726",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}