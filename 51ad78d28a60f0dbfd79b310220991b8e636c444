{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "32bbd323_ea608761",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 366
      },
      "writtenOn": "2025-09-23T18:05:07Z",
      "side": 1,
      "message": "Hi guys,\n\nWould you mind reviewing this patch to linux-cp?\n\nThanks,\n-Matt",
      "revId": "51ad78d28a60f0dbfd79b310220991b8e636c444",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9960a652_bce0837d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 361
      },
      "writtenOn": "2025-09-24T08:20:31Z",
      "side": 1,
      "message": "Shouldn\u0027t there be a unit test?",
      "revId": "51ad78d28a60f0dbfd79b310220991b8e636c444",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31fc8c8e_247a5f09",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 366
      },
      "writtenOn": "2025-09-24T20:03:34Z",
      "side": 1,
      "message": "Hi Ben,\n\nIdeally, yes there should be. I don\u0027t know of a way to test it currently though.\n\nThere are some existing unit tests for the host connectivity piece of linux-cp, but the host-side tap or tun is emulated in those tests. So any of the code which deals with netlink message processing, which includes the code being changed here, will never see any netlink messages over the socket that was opened because there is no host-side tap or tun to apply configurations to.\n\nI will consult with Dave Wallace about whether he has ideas on how we could set up linux-cp sans emulation in a way that would allow it to run in CI jobs. It will involve creating actual taps/tuns possibly in a secondary netns (not sure what has to happen for that to work inside a CI job container which might already be attached to its own dedicated netns). That\u0027s probably something that will take some time to figure out. In the meantime, to fix the bug currently experienced by a user, would you be ok with merging this sans a unit test?\n\nThanks,\n-Matt",
      "parentUuid": "9960a652_bce0837d",
      "revId": "51ad78d28a60f0dbfd79b310220991b8e636c444",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb5b700c_7f133d60",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 361
      },
      "writtenOn": "2025-09-25T12:30:24Z",
      "side": 1,
      "message": "Sounds good to me. Re tests, we have this framework to run tests in a VM for various virtual interfaces (afpacket etc) because it requires privileges. Maybe that could be reused for linux-cp too?",
      "parentUuid": "31fc8c8e_247a5f09",
      "revId": "51ad78d28a60f0dbfd79b310220991b8e636c444",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label.                         A minumum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "51ad78d28a60f0dbfd79b310220991b8e636c444",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "51ad78d28a60f0dbfd79b310220991b8e636c444",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}