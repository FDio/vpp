{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3c7d3924_5547766b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 123
      },
      "writtenOn": "2024-10-24T16:43:50Z",
      "side": 1,
      "message": "recheck",
      "revId": "601d4477d53ad9d0253ac87efe705a6b6596ff6c",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e63e4caa_f722f690",
        "filename": "src/vnet/session/application_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 957,
      "author": {
        "id": 3021
      },
      "writtenOn": "2024-10-24T20:37:26Z",
      "side": 1,
      "message": "i\u0027m not sure, but is this right? and i\u0027m just asking but is there no easy way to add a unit test that actually adds multiple configs and tries to get the second one?",
      "revId": "601d4477d53ad9d0253ac87efe705a6b6596ff6c",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "106b1953_68492f10",
        "filename": "src/vnet/session/application_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 957,
      "author": {
        "id": 123
      },
      "writtenOn": "2024-10-25T05:30:00Z",
      "side": 1,
      "message": "code is tested in my followup patch, where Iâ€™ve added http timeout to extended config https://gerrit.fd.io/r/c/vpp/+/41718 in HttpStaticBuildInUrlGetVersionTest http static server adds http timeout value and as second crypto config, if it is broken server is configured without tls and client receive http response to https request",
      "parentUuid": "e63e4caa_f722f690",
      "revId": "601d4477d53ad9d0253ac87efe705a6b6596ff6c",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cb203d9_fad1771e",
        "filename": "src/vnet/session/application_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 957,
      "author": {
        "id": 3021
      },
      "writtenOn": "2024-10-25T16:08:18Z",
      "side": 1,
      "message": "ok. but looks like your test for keepalive isn\u0027t using tls?\nhere, should you set next ext_cfg from current one instead of from start?",
      "parentUuid": "106b1953_68492f10",
      "revId": "601d4477d53ad9d0253ac87efe705a6b6596ff6c",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label.                         A minumum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "601d4477d53ad9d0253ac87efe705a6b6596ff6c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "601d4477d53ad9d0253ac87efe705a6b6596ff6c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}