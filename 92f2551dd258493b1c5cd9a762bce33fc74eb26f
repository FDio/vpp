{
  "comments": [
    {
      "key": {
        "uuid": "ab6cbe68_10336f68",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 440
      },
      "writtenOn": "2019-03-01T19:39:16Z",
      "side": 1,
      "message": "It would be good not to reorder existing imports, unless there is a valid reason.",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cc7dba1_440a66a3",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-03-01T19:57:31Z",
      "side": 1,
      "message": "Agreed.\nOnce we get them to pep8, I completely agree.",
      "parentUuid": "ab6cbe68_10336f68",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "accafb7a_46214e33",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 440
      },
      "writtenOn": "2019-03-01T20:27:44Z",
      "side": 1,
      "message": "thanks",
      "parentUuid": "8cc7dba1_440a66a3",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f032ec8d_a58d360f",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 467,
      "author": {
        "id": 440
      },
      "writtenOn": "2019-03-01T19:39:16Z",
      "side": 1,
      "message": "What is the need for passing in None as parameter values. You could remove these parameters from the parameterized.expand. These params are assigned values inside the function.",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e5e77df_a25cd495",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 467,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-03-01T19:57:31Z",
      "side": 1,
      "message": "The method signatures need to match the parent class.",
      "parentUuid": "f032ec8d_a58d360f",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c751fc8_bc0ecbab",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 467,
      "author": {
        "id": 440
      },
      "writtenOn": "2019-03-01T20:27:44Z",
      "side": 1,
      "message": "ok. Another approach would be to adjust the parent methods to handle the stream value in self.fragments_400. It\u0027s a constant that\u0027s set once at the class level. So, why pass it around in each method.",
      "parentUuid": "8e5e77df_a25cd495",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ec384d1_34a3c6dd",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 467,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-03-01T20:58:07Z",
      "side": 1,
      "message": "Show me what you mean.",
      "parentUuid": "2c751fc8_bc0ecbab",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "389c361b_70ecb5d1",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 467,
      "author": {
        "id": 440
      },
      "writtenOn": "2019-03-01T22:38:46Z",
      "side": 1,
      "message": "Okay, so since it\u0027s a mixin class and does not have state, you\u0027ll still need to pass the stream. But you can have different signatures for the mixin methods, if you\u0027d like and eliminate the None parameters. \nJust an option. So the function will look like this as an example:\n\n@parameterized.expand([(IP, )])\n    def test_disabled(self, family):\n\nThe empty arguments with None are gone but everything else remains the same. It\u0027s entirely up to you, otherwise your code is fine as it is.",
      "parentUuid": "5ec384d1_34a3c6dd",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3881ca3d_8a6622c9",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 467,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-03-01T23:07:53Z",
      "side": 1,
      "message": "How is that going to work?  The signature has to match the the signature of the parent method in 473.  Show me a sample of working/tested code.",
      "parentUuid": "389c361b_70ecb5d1",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed943786_c389d74d",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 467,
      "author": {
        "id": 440
      },
      "writtenOn": "2019-03-02T00:05:06Z",
      "side": 1,
      "message": "Yep, I tested it and it works. Since it is not an abstract base class but a mixin it will work. You don\u0027t have to do it if you\u0027re not comfortable.",
      "parentUuid": "3881ca3d_8a6622c9",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abdf7a75_23cb4b8b",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 467,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-03-02T01:24:26Z",
      "side": 1,
      "message": "No. It\u0027s not being uncomfortable. \nFrom the python docs:\nhttps://docs.python.org/3/library/functions.html#super\n\n\"Good design dictates that this method have the same calling signature in every case (because the order of calls is determined at runtime, because that order adapts to changes in the class hierarchy, and because that order can include sibling classes that are unknown prior to runtime).\"\n\nIt\u0027s a LSP violation to change the signature.  The parent shouldn\u0027t be a mixin, because it\u0027s not testable, but we have to get the test developers to stop copy/pasting code.",
      "parentUuid": "ed943786_c389d74d",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d03164c4_6f24a5c8",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 608,
      "author": {
        "id": 440
      },
      "writtenOn": "2019-03-01T19:39:16Z",
      "side": 1,
      "message": "Inconsistent use. In some places self.fragments_400 is used.",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34378d7d_0e9f7cb9",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 608,
      "author": {
        "id": 1496
      },
      "writtenOn": "2019-03-01T19:57:31Z",
      "side": 1,
      "message": "Good observation.  They are defined in a class method and should be self.__class__...\nThanks",
      "parentUuid": "d03164c4_6f24a5c8",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5effb4f2_ac4a4215",
        "filename": "test/test_reassembly.py",
        "patchSetId": 1
      },
      "lineNbr": 608,
      "author": {
        "id": 440
      },
      "writtenOn": "2019-03-01T20:27:44Z",
      "side": 1,
      "message": "Not an issue but even the self.fragments_400 would work in the object even if defined in the parent method.",
      "parentUuid": "34378d7d_0e9f7cb9",
      "revId": "92f2551dd258493b1c5cd9a762bce33fc74eb26f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}