{
  "comments": [
    {
      "key": {
        "uuid": "2b49d5e8_b07a80fc",
        "filename": "src/vnet/ipsec/ipsec_sa.c",
        "patchSetId": 4
      },
      "lineNbr": 284,
      "author": {
        "id": 1388
      },
      "writtenOn": "2020-04-10T12:58:36Z",
      "side": 1,
      "message": "\"sa-\u003eudp_hdr\" is used for encapsulation of encrypted packets that are going to be sent. Thus \"sa-\u003eudp_hdr.dst_port\" is the destination port of outgoing packets, not incoming.\n\nAs I understand the source port of incoming encapsulated packets will be changed by the NAT device, but the destination port will be 4500: UDP(sport\u003dNAT\u0027ed port, dport\u003d4500). In this case, outgoing encapsulated packets should be UDP(sport\u003d4500, dport\u003dNAT\u0027ed port) because the NAT device will have the translation for this pair of ports.\n\nI think that only registration for 4500 destination port is needed.",
      "revId": "200cf51d1cd129813b18e0fdb132eb1cd260349a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b04e9d4e_0e64cd90",
        "filename": "src/vnet/ipsec/ipsec_sa.c",
        "patchSetId": 4
      },
      "lineNbr": 284,
      "author": {
        "id": 267
      },
      "writtenOn": "2020-04-11T17:33:46Z",
      "side": 1,
      "message": "\"\n\"sa-\u003eudp_hdr\" is used for encapsulation of encrypted packets that are going to be sent. Thus \"sa-\u003eudp_hdr.dst_port\" is the destination port of outgoing packets, not incoming.\n\"\n\nthat\u0027s true, but of the OUTBOUD SA, not the INBOUND. The INBOUD will have dport 4500 and that is what we are registering for.\n\nit\u0027s the caller\u0027s responsibility to set the dport for the OUTBOUND SA to the NAT translated value.",
      "parentUuid": "2b49d5e8_b07a80fc",
      "revId": "200cf51d1cd129813b18e0fdb132eb1cd260349a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c35be6d_fc15b9d0",
        "filename": "src/vnet/ipsec/ipsec_sa.c",
        "patchSetId": 4
      },
      "lineNbr": 284,
      "author": {
        "id": 1388
      },
      "writtenOn": "2020-04-13T06:13:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b04e9d4e_0e64cd90",
      "revId": "200cf51d1cd129813b18e0fdb132eb1cd260349a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a9a3e6b_b48127b9",
        "filename": "src/vnet/ipsec/ipsec_types.api",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-27T17:36:59Z",
      "side": 1,
      "message": "If this is purely a description, move to line 107.\nIf this really sets a default value clients should send on the message, move to line 134.",
      "range": {
        "startLine": 132,
        "startChar": 22,
        "endLine": 132,
        "endChar": 36
      },
      "revId": "200cf51d1cd129813b18e0fdb132eb1cd260349a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7992eee7_4bff05dd",
        "filename": "src/vnet/ipsec/ipsec_types.api",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 267
      },
      "writtenOn": "2020-04-28T08:12:45Z",
      "side": 1,
      "message": "the reason it was like this is the vapi generator did not support default values in typedefs.\ni\u0027ve patched that now so it at least doesn\u0027t fail. the papi generator is fine.",
      "parentUuid": "0a9a3e6b_b48127b9",
      "range": {
        "startLine": 132,
        "startChar": 22,
        "endLine": 132,
        "endChar": 36
      },
      "revId": "200cf51d1cd129813b18e0fdb132eb1cd260349a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38e80d55_9cb4519a",
        "filename": "src/vnet/ipsec/ipsec_types.api",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-28T17:42:17Z",
      "side": 1,
      "message": "\u003e the vapi generator did not support default values in typedefs\n\nOh, I did not know that.\n\n\u003e i\u0027ve patched that now\n\nThanks.",
      "parentUuid": "7992eee7_4bff05dd",
      "range": {
        "startLine": 132,
        "startChar": 22,
        "endLine": 132,
        "endChar": 36
      },
      "revId": "200cf51d1cd129813b18e0fdb132eb1cd260349a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef5b98e1_c4982c95",
        "filename": "src/vnet/ipsec/ipsec_types.api",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-27T17:36:59Z",
      "side": 1,
      "message": "If I see correctly, this type is used in ipsec_sad_entry_add_del call, see ipsec_api.c lines 375-276.\nThen ipsec_sa_add_and_lock is called, which checks for special values of ports, see ipsec_sa.c lines 273 and 278.\nBut the check is against IPSEC_UDP_PORT_NONE value, which I see defined in ipsec_sa.h line 237 as ((u16)~0). Only those values are replaced with UDP_DST_PORT_ipsec (4500).\n\nTaken together, I believe clients unaware of the port fields will send zero (the default default value), which is not a value we want in sa-\u003eudp_hdr.src_port nor sa-\u003eudp_hdr.dst_port (unless there are other ifs down the line).",
      "range": {
        "startLine": 133,
        "startChar": 31,
        "endLine": 133,
        "endChar": 35
      },
      "revId": "200cf51d1cd129813b18e0fdb132eb1cd260349a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f8aae86_fe820589",
        "filename": "src/vnet/ipsec/ipsec_types.api",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 267
      },
      "writtenOn": "2020-04-28T08:12:45Z",
      "side": 1,
      "message": "with the defaults now set, i think this comment is answered.",
      "parentUuid": "ef5b98e1_c4982c95",
      "range": {
        "startLine": 133,
        "startChar": 31,
        "endLine": 133,
        "endChar": 35
      },
      "revId": "200cf51d1cd129813b18e0fdb132eb1cd260349a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ca03f84_72d62c47",
        "filename": "src/vnet/ipsec/ipsec_types.api",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-28T17:42:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0f8aae86_fe820589",
      "range": {
        "startLine": 133,
        "startChar": 31,
        "endLine": 133,
        "endChar": 35
      },
      "revId": "200cf51d1cd129813b18e0fdb132eb1cd260349a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78940379_e03657ce",
        "filename": "test/vpp_ipsec.py",
        "patchSetId": 4
      },
      "lineNbr": 192,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-27T17:36:59Z",
      "side": 1,
      "message": "Please add also tests which do not set ports, and verify 4500 is applied as a default value.",
      "range": {
        "startLine": 192,
        "startChar": 37,
        "endLine": 192,
        "endChar": 49
      },
      "revId": "200cf51d1cd129813b18e0fdb132eb1cd260349a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e38799ac_ad24e26d",
        "filename": "test/vpp_ipsec.py",
        "patchSetId": 4
      },
      "lineNbr": 192,
      "author": {
        "id": 267
      },
      "writtenOn": "2020-04-28T08:12:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78940379_e03657ce",
      "range": {
        "startLine": 192,
        "startChar": 37,
        "endLine": 192,
        "endChar": 49
      },
      "revId": "200cf51d1cd129813b18e0fdb132eb1cd260349a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}