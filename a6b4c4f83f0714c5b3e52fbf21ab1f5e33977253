{
  "comments": [
    {
      "key": {
        "uuid": "17097208_8cb09a7e",
        "filename": "src/vnet/buffer.h",
        "patchSetId": 5
      },
      "lineNbr": 395,
      "author": {
        "id": 267
      },
      "writtenOn": "2019-07-24T16:19:04Z",
      "side": 1,
      "message": "gso_flag_t",
      "revId": "a6b4c4f83f0714c5b3e52fbf21ab1f5e33977253",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28162f5e_b886867e",
        "filename": "src/vnet/buffer.h",
        "patchSetId": 5
      },
      "lineNbr": 395,
      "author": {
        "id": 241
      },
      "writtenOn": "2019-07-24T16:50:01Z",
      "side": 1,
      "message": "it will be 4 bytes instead of 2 bytes. but I have changed it :)",
      "parentUuid": "17097208_8cb09a7e",
      "revId": "a6b4c4f83f0714c5b3e52fbf21ab1f5e33977253",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60d7db98_dcc13646",
        "filename": "src/vnet/buffer.h",
        "patchSetId": 5
      },
      "lineNbr": 395,
      "author": {
        "id": 267
      },
      "writtenOn": "2019-07-25T07:30:25Z",
      "side": 1,
      "message": "then declare the enum as packed.",
      "parentUuid": "28162f5e_b886867e",
      "revId": "a6b4c4f83f0714c5b3e52fbf21ab1f5e33977253",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8bd9665_69d3e53f",
        "filename": "src/vnet/buffer.h",
        "patchSetId": 5
      },
      "lineNbr": 395,
      "author": {
        "id": 241
      },
      "writtenOn": "2019-07-25T09:08:50Z",
      "side": 1,
      "message": "Will it be fixed size if packed will be used? As we need to mention how many bytes are unused?",
      "parentUuid": "60d7db98_dcc13646",
      "revId": "a6b4c4f83f0714c5b3e52fbf21ab1f5e33977253",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d6e07c7_f13769df",
        "filename": "src/vnet/buffer.h",
        "patchSetId": 5
      },
      "lineNbr": 395,
      "author": {
        "id": 267
      },
      "writtenOn": "2019-07-25T09:46:01Z",
      "side": 1,
      "message": "it will be as big as it needs to be to fit the highest flag value.",
      "parentUuid": "a8bd9665_69d3e53f",
      "revId": "a6b4c4f83f0714c5b3e52fbf21ab1f5e33977253",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9793431b_77b4cb21",
        "filename": "src/vnet/buffer.h",
        "patchSetId": 5
      },
      "lineNbr": 395,
      "author": {
        "id": 241
      },
      "writtenOn": "2019-07-25T09:49:15Z",
      "side": 1,
      "message": "Right! So its size changes as we will define new flags. But we need more precision in terms of size.",
      "parentUuid": "9d6e07c7_f13769df",
      "revId": "a6b4c4f83f0714c5b3e52fbf21ab1f5e33977253",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9db2ab9b_8b1323c9",
        "filename": "src/vnet/buffer.h",
        "patchSetId": 5
      },
      "lineNbr": 395,
      "author": {
        "id": 267
      },
      "writtenOn": "2019-07-30T14:47:01Z",
      "side": 1,
      "message": "if the flags highest value is less than 256 then the flags enum type will precisely 1 byte. if it\u0027s 256 or greater and less than 0xffff it will be precisely 2 bytes. you can adjust the padding as the size of the type grows. You can add static_asserts to verify any size conditions you need. for example, you could put all of these gso related fields into a struct gso_buffer_t and static_assert that it\u0027s size is a multiple of u32.",
      "parentUuid": "9793431b_77b4cb21",
      "revId": "a6b4c4f83f0714c5b3e52fbf21ab1f5e33977253",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}