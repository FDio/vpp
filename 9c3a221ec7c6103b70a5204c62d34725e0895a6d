{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7d0ed918_a2780e64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-06T15:00:51Z",
      "side": 1,
      "message": "Great work! I have some comments.\nAlso, it would be good to run a smoke test against the Linux stack, eg. use the scripts in extras/strongswan",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a247b6ca_7f940d62",
        "filename": "src/vnet/ipsec/ipsec.api",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-06T15:00:51Z",
      "side": 1,
      "message": "I think we can drop the add_del API for this, and just keep the separate add and del moving forward",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b46ece8_66d5f1df",
        "filename": "src/vnet/ipsec/ipsec.api",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-11T14:10:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a247b6ca_7f940d62",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "013bdc21_82223045",
        "filename": "src/vnet/ipsec/ipsec.api",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 2450
      },
      "writtenOn": "2023-01-11T14:29:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a247b6ca_7f940d62",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f30aa86a_45fcf3cf",
        "filename": "src/vnet/ipsec/ipsec_sa.c",
        "patchSetId": 3
      },
      "lineNbr": 471,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-06T15:00:51Z",
      "side": 1,
      "message": "Using clib_bitmap_set_region() would be more idiomatic I think",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d61db61_f4b2d5cb",
        "filename": "src/vnet/ipsec/ipsec_sa.c",
        "patchSetId": 3
      },
      "lineNbr": 471,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-11T14:10:41Z",
      "side": 1,
      "message": "I think we can also remove the validate as clib_bitmap_set_region() already calls clib_bitmap_validate() internally",
      "parentUuid": "f30aa86a_45fcf3cf",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3771baa_2d6b63f2",
        "filename": "src/vnet/ipsec/ipsec_sa.c",
        "patchSetId": 3
      },
      "lineNbr": 471,
      "author": {
        "id": 2450
      },
      "writtenOn": "2023-01-11T14:29:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f30aa86a_45fcf3cf",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25139c46_41a619cd",
        "filename": "src/vnet/ipsec/ipsec_sa.h",
        "patchSetId": 3
      },
      "lineNbr": 343,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-06T15:00:51Z",
      "side": 1,
      "message": "As we enforce window_size to be a power of 2 (maybe add an assert here also), you can use the faster\n\n  u32 tl \u003d sa-\u003eseq \u0026 (window_size - 1);\n\ninstead. That\u0027s applicable to all the other occurences below.",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ede3ab64_0fcdf1fc",
        "filename": "src/vnet/ipsec/ipsec_sa.h",
        "patchSetId": 3
      },
      "lineNbr": 343,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-11T14:10:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25139c46_41a619cd",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01841178_94c77a97",
        "filename": "src/vnet/ipsec/ipsec_sa.h",
        "patchSetId": 3
      },
      "lineNbr": 343,
      "author": {
        "id": 2450
      },
      "writtenOn": "2023-01-11T14:29:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "25139c46_41a619cd",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afcfb624_9b117727",
        "filename": "src/vnet/ipsec/ipsec_sa.h",
        "patchSetId": 3
      },
      "lineNbr": 362,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-06T15:00:51Z",
      "side": 1,
      "message": "why not checking for this condition directly here, instead of leaving it to the caller?",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cecb8d2a_29b9a766",
        "filename": "src/vnet/ipsec/ipsec_sa.h",
        "patchSetId": 3
      },
      "lineNbr": 362,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-11T14:28:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "afcfb624_9b117727",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b7ec63f_d2555ad1",
        "filename": "src/vnet/ipsec/ipsec_sa.h",
        "patchSetId": 3
      },
      "lineNbr": 362,
      "author": {
        "id": 2450
      },
      "writtenOn": "2023-01-11T14:29:38Z",
      "side": 1,
      "message": "Where this function is being called (ipsec_sa_anti_replay_and_sn_advance) it is already checked that it does not falls left, depending on the several possible case (AR on/off, ESN on/off ...).\nIn the previous \u0027version\u0027 of this function it was already like that.",
      "parentUuid": "afcfb624_9b117727",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59fd3d54_ef12cab7",
        "filename": "src/vnet/ipsec/ipsec_sa.h",
        "patchSetId": 3
      },
      "lineNbr": 468,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-06T15:00:51Z",
      "side": 1,
      "message": "then I\u0027d advise to remove this dead code, and add an ASSERT() instead",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a70d200c_5b614ffb",
        "filename": "src/vnet/ipsec/ipsec_sa.h",
        "patchSetId": 3
      },
      "lineNbr": 468,
      "author": {
        "id": 2450
      },
      "writtenOn": "2023-01-11T14:29:38Z",
      "side": 1,
      "message": "My bad, after re-thinking it multiple times, I think this can happen:\n- the window is in the same subspace (Tl \u003e\u003d W - 1) and Bl \u003e W\n- 2 packets are received, say A and B such that: seqB \u003c W - 1 \u003c seqA \u003c Bl\n- in pre-crypto, both packets are predicted to cause a wrap and hence are assigned a hi-seqB \u003d hi-seqA \u003d sa-\u003eseq_hi + 1\n- both packets pass the integrity check\n- A pass the post-crypto check and move the window to Tl \u003d seqA \u003e\u003d W - 1 (so the window has wrapped but has fully moved to the next subspace)\n- B is then out-of-window (too far on the left), and at the moment of the post-crypto check it has hi-seqB \u003d sa-\u003eseq_hi (since A made the sa-\u003eseq_hi increments)",
      "parentUuid": "59fd3d54_ef12cab7",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "055c36af_c796caeb",
        "filename": "src/vnet/ipsec/ipsec_sa.h",
        "patchSetId": 3
      },
      "lineNbr": 591,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-06T15:00:51Z",
      "side": 1,
      "message": "using a temporary, dynamically allocated bitmap in the datapath is not cheap, can\u0027t we do something better?",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "182aabc8_1f516c00",
        "filename": "src/vnet/ipsec/ipsec_sa.h",
        "patchSetId": 3
      },
      "lineNbr": 591,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-11T14:10:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "055c36af_c796caeb",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33016261_f671ef5c",
        "filename": "src/vnet/ipsec/ipsec_sa.h",
        "patchSetId": 3
      },
      "lineNbr": 591,
      "author": {
        "id": 2450
      },
      "writtenOn": "2023-01-11T14:29:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "055c36af_c796caeb",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d35c60c7_d5548425",
        "filename": "src/vppinfra/bitmap.h",
        "patchSetId": 3
      },
      "lineNbr": 248,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-06T15:00:51Z",
      "side": 1,
      "message": "why remove the test against 0? this force the result to be a boolean (0 or 1)",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a1a3533_3edd01ad",
        "filename": "src/vppinfra/bitmap.h",
        "patchSetId": 3
      },
      "lineNbr": 248,
      "author": {
        "id": 361
      },
      "writtenOn": "2023-01-11T14:10:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d35c60c7_d5548425",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a84d2cc_be3667fa",
        "filename": "src/vppinfra/bitmap.h",
        "patchSetId": 3
      },
      "lineNbr": 248,
      "author": {
        "id": 2450
      },
      "writtenOn": "2023-01-11T14:29:38Z",
      "side": 1,
      "message": "I was thinking that the purpose of this function was to retrieve a whole region of the bitmap (as clib_bitmap_get_multiple)",
      "parentUuid": "d35c60c7_d5548425",
      "revId": "9c3a221ec7c6103b70a5204c62d34725e0895a6d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2"
    }
  ]
}